PYTHONPATH:  ../:./
'main()' starts at 2020-12-31 19:22:11


***1/4: is_gs:False, is_std:False, covariance_type: diag***
'_main_default_single()' starts at 2020-12-31 19:22:11
len(dataname_path_mappings): 13
single_main.kwargs: dict_items([('data', (('UNB3', 'speedup/data/src_dst/iat_size/UNB3/Xy-normal-abnormal.dat'), (array([[2.86102295e-06, 7.00000000e+01, 2.14576721e-06, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
       [4.69684601e-05, 1.10000000e+02, 1.51201010e+00, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
       [4.05311584e-06, 1.10000000e+02, 2.63929367e-04, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
       ...,
       [5.09297132e-01, 6.60000000e+01, 4.99202013e-01, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
       [5.09102106e-01, 6.60000000e+01, 5.14801025e-01, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
       [5.09193897e-01, 6.60000000e+01, 4.99217033e-01, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]]), array(['normal_0', 'normal_0', 'normal_0', ..., 'abnormal_0',
       'abnormal_0', 'abnormal_0'], dtype='<U10')))), ('params', ('case1', {'detector_name': 'OCSVM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': False, 'is_nystrom': False, 'is_quickshift': False, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'OCSVM_qs': [0.3], 'OCSVM_nus': [0.5]}))])
X.shape: (27309, 47), y: Counter({0: 26942, 1: 367})
left: Counter({0: 26642, 1: 67}), test: Counter({0: 300, 1: 300})


===1/5(n_repeats): {'detector_name': 'OCSVM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': False, 'is_nystrom': False, 'is_quickshift': False, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'OCSVM_qs': [0.3], 'OCSVM_nus': [0.5]}===
train: Counter({0: 5000}), val: Counter({0: 53, 1: 53})
'get_best_results()' starts at 2020-12-31 19:22:12
--is_gs: False, X_val == X_test
X_train.shape: (5000, 47), y_train: Counter({0: 5000})
X_val.shape: (600, 47), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 47), y_test: Counter({0: 300, 1: 300})
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
model_sigma: 369.0546543947471, model_gamma: 7.342071782810354e-06, q=0.3
model.get_params()L {'cache_size': 200, 'coef0': 0.0, 'degree': 3, 'gamma': 7.342071782810354e-06, 'kernel': 'rbf', 'max_iter': -1, 'nu': 0.5, 'random_state': None, 'shrinking': True, 'tol': 0.001, 'verbose': False}
Fitting model takes 1.522602 seconds
Total train time: 1.522602 <= std_train_time: 0, seek_train_time: 0, kjl_train_time: 0, model_train_time: 1.522602
Test model takes 0.094744 seconds
APC: 0.3621195095797846
AUC: 0.2221444444444444
Total test time: 0.094744 <= std_test_time: 0, seek_test_time: 0, kjl_test_time: 0, model_test_time: 0.094744
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
model_sigma: 369.0546543947471, model_gamma: 7.342071782810354e-06, q=0.3
model.get_params()L {'cache_size': 200, 'coef0': 0.0, 'degree': 3, 'gamma': 7.342071782810354e-06, 'kernel': 'rbf', 'max_iter': -1, 'nu': 0.5, 'random_state': None, 'shrinking': True, 'tol': 0.001, 'verbose': False}
Fitting model takes 1.455155 seconds
Total train time: 1.455155 <= std_train_time: 0, seek_train_time: 0, kjl_train_time: 0, model_train_time: 1.455155
Test model takes 0.094699 seconds
APC: 0.3621195095797846
AUC: 0.2221444444444444
Total test time: 0.094699 <= std_test_time: 0, seek_test_time: 0, kjl_test_time: 0, model_test_time: 0.094699
'get_best_results()' ends at 2020-12-31 19:22:18. It takes 0.0994 mins


===2/5(n_repeats): {'detector_name': 'OCSVM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': False, 'is_nystrom': False, 'is_quickshift': False, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'OCSVM_qs': [0.3], 'OCSVM_nus': [0.5]}===
train: Counter({0: 5000}), val: Counter({0: 53, 1: 53})
'get_best_results()' starts at 2020-12-31 19:22:18
--is_gs: False, X_val == X_test
X_train.shape: (5000, 47), y_train: Counter({0: 5000})
X_val.shape: (600, 47), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 47), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:    3.7s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:    3.7s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
model_sigma: 371.4337919364775, model_gamma: 7.248316955341275e-06, q=0.3
model.get_params()L {'cache_size': 200, 'coef0': 0.0, 'degree': 3, 'gamma': 7.248316955341275e-06, 'kernel': 'rbf', 'max_iter': -1, 'nu': 0.5, 'random_state': None, 'shrinking': True, 'tol': 0.001, 'verbose': False}
Fitting model takes 1.530737 seconds
Total train time: 1.530737 <= std_train_time: 0, seek_train_time: 0, kjl_train_time: 0, model_train_time: 1.530737
Test model takes 0.094763 seconds
APC: 0.3641979578568044
AUC: 0.22483333333333333
Total test time: 0.094763 <= std_test_time: 0, seek_test_time: 0, kjl_test_time: 0, model_test_time: 0.094763
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
model_sigma: 371.4337919364775, model_gamma: 7.248316955341275e-06, q=0.3
model.get_params()L {'cache_size': 200, 'coef0': 0.0, 'degree': 3, 'gamma': 7.248316955341275e-06, 'kernel': 'rbf', 'max_iter': -1, 'nu': 0.5, 'random_state': None, 'shrinking': True, 'tol': 0.001, 'verbose': False}
Fitting model takes 1.461097 seconds
Total train time: 1.461097 <= std_train_time: 0, seek_train_time: 0, kjl_train_time: 0, model_train_time: 1.461097
Test model takes 0.0948 seconds
APC: 0.3641979578568044
AUC: 0.22483333333333333
Total test time: 0.0948 <= std_test_time: 0, seek_test_time: 0, kjl_test_time: 0, model_test_time: 0.0948
'get_best_results()' ends at 2020-12-31 19:22:24. It takes 0.1005 mins


===3/5(n_repeats): {'detector_name': 'OCSVM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': False, 'is_nystrom': False, 'is_quickshift': False, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'OCSVM_qs': [0.3], 'OCSVM_nus': [0.5]}===
train: Counter({0: 5000}), val: Counter({0: 53, 1: 53})
'get_best_results()' starts at 2020-12-31 19:22:24
--is_gs: False, X_val == X_test
X_train.shape: (5000, 47), y_train: Counter({0: 5000})
X_val.shape: (600, 47), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 47), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:    3.5s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:    3.5s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
model_sigma: 364.0377272717949, model_gamma: 7.545833380034684e-06, q=0.3
model.get_params()L {'cache_size': 200, 'coef0': 0.0, 'degree': 3, 'gamma': 7.545833380034684e-06, 'kernel': 'rbf', 'max_iter': -1, 'nu': 0.5, 'random_state': None, 'shrinking': True, 'tol': 0.001, 'verbose': False}
Fitting model takes 1.574186 seconds
Total train time: 1.574186 <= std_train_time: 0, seek_train_time: 0, kjl_train_time: 0, model_train_time: 1.574186
Test model takes 0.098372 seconds
APC: 0.3616413012712904
AUC: 0.2201277777777777
Total test time: 0.098372 <= std_test_time: 0, seek_test_time: 0, kjl_test_time: 0, model_test_time: 0.098372
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
model_sigma: 364.0377272717949, model_gamma: 7.545833380034684e-06, q=0.3
model.get_params()L {'cache_size': 200, 'coef0': 0.0, 'degree': 3, 'gamma': 7.545833380034684e-06, 'kernel': 'rbf', 'max_iter': -1, 'nu': 0.5, 'random_state': None, 'shrinking': True, 'tol': 0.001, 'verbose': False}
Fitting model takes 1.455172 seconds
Total train time: 1.455172 <= std_train_time: 0, seek_train_time: 0, kjl_train_time: 0, model_train_time: 1.455172
Test model takes 0.094687 seconds
APC: 0.3616413012712904
AUC: 0.2201277777777777
Total test time: 0.094687 <= std_test_time: 0, seek_test_time: 0, kjl_test_time: 0, model_test_time: 0.094687
'get_best_results()' ends at 2020-12-31 19:22:30. It takes 0.1012 mins


===4/5(n_repeats): {'detector_name': 'OCSVM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': False, 'is_nystrom': False, 'is_quickshift': False, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'OCSVM_qs': [0.3], 'OCSVM_nus': [0.5]}===
train: Counter({0: 5000}), val: Counter({0: 53, 1: 53})
'get_best_results()' starts at 2020-12-31 19:22:30
--is_gs: False, X_val == X_test
X_train.shape: (5000, 47), y_train: Counter({0: 5000})
X_val.shape: (600, 47), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 47), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:    3.5s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:    3.5s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
model_sigma: 371.3212849960182, model_gamma: 7.252709967751074e-06, q=0.3
model.get_params()L {'cache_size': 200, 'coef0': 0.0, 'degree': 3, 'gamma': 7.252709967751074e-06, 'kernel': 'rbf', 'max_iter': -1, 'nu': 0.5, 'random_state': None, 'shrinking': True, 'tol': 0.001, 'verbose': False}
Fitting model takes 1.536861 seconds
Total train time: 1.536861 <= std_train_time: 0, seek_train_time: 0, kjl_train_time: 0, model_train_time: 1.536861
Test model takes 0.094616 seconds
APC: 0.3636166974832523
AUC: 0.2233111111111111
Total test time: 0.094616 <= std_test_time: 0, seek_test_time: 0, kjl_test_time: 0, model_test_time: 0.094616
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
model_sigma: 371.3212849960182, model_gamma: 7.252709967751074e-06, q=0.3
model.get_params()L {'cache_size': 200, 'coef0': 0.0, 'degree': 3, 'gamma': 7.252709967751074e-06, 'kernel': 'rbf', 'max_iter': -1, 'nu': 0.5, 'random_state': None, 'shrinking': True, 'tol': 0.001, 'verbose': False}
Fitting model takes 1.451182 seconds
Total train time: 1.451182 <= std_train_time: 0, seek_train_time: 0, kjl_train_time: 0, model_train_time: 1.451182
Test model takes 0.094586 seconds
APC: 0.3636166974832523
AUC: 0.2233111111111111
Total test time: 0.094586 <= std_test_time: 0, seek_test_time: 0, kjl_test_time: 0, model_test_time: 0.094586
'get_best_results()' ends at 2020-12-31 19:22:36. It takes 0.101 mins


===5/5(n_repeats): {'detector_name': 'OCSVM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': False, 'is_nystrom': False, 'is_quickshift': False, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'OCSVM_qs': [0.3], 'OCSVM_nus': [0.5]}===
train: Counter({0: 5000}), val: Counter({0: 53, 1: 53})
'get_best_results()' starts at 2020-12-31 19:22:36
--is_gs: False, X_val == X_test
X_train.shape: (5000, 47), y_train: Counter({0: 5000})
X_val.shape: (600, 47), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 47), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:    3.5s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:    3.5s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
model_sigma: 364.14677290848573, model_gamma: 7.5413147789396485e-06, q=0.3
model.get_params()L {'cache_size': 200, 'coef0': 0.0, 'degree': 3, 'gamma': 7.5413147789396485e-06, 'kernel': 'rbf', 'max_iter': -1, 'nu': 0.5, 'random_state': None, 'shrinking': True, 'tol': 0.001, 'verbose': False}
Fitting model takes 1.526283 seconds
Total train time: 1.526283 <= std_train_time: 0, seek_train_time: 0, kjl_train_time: 0, model_train_time: 1.526283
Test model takes 0.094925 seconds
APC: 0.3635980854532115
AUC: 0.22273333333333328
Total test time: 0.094925 <= std_test_time: 0, seek_test_time: 0, kjl_test_time: 0, model_test_time: 0.094925
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
model_sigma: 364.14677290848573, model_gamma: 7.5413147789396485e-06, q=0.3
model.get_params()L {'cache_size': 200, 'coef0': 0.0, 'degree': 3, 'gamma': 7.5413147789396485e-06, 'kernel': 'rbf', 'max_iter': -1, 'nu': 0.5, 'random_state': None, 'shrinking': True, 'tol': 0.001, 'verbose': False}
Fitting model takes 1.457268 seconds
Total train time: 1.457268 <= std_train_time: 0, seek_train_time: 0, kjl_train_time: 0, model_train_time: 1.457268
Test model takes 0.094847 seconds
APC: 0.3635980854532115
AUC: 0.22273333333333328
Total test time: 0.094847 <= std_test_time: 0, seek_test_time: 0, kjl_test_time: 0, model_test_time: 0.094847
'get_best_results()' ends at 2020-12-31 19:22:42. It takes 0.1021 mins
single_main.kwargs: dict_items([('data', (('UNB3', 'speedup/data/src_dst/iat_size/UNB3/Xy-normal-abnormal.dat'), (array([[2.86102295e-06, 7.00000000e+01, 2.14576721e-06, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
       [4.69684601e-05, 1.10000000e+02, 1.51201010e+00, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
       [4.05311584e-06, 1.10000000e+02, 2.63929367e-04, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
       ...,
       [5.09297132e-01, 6.60000000e+01, 4.99202013e-01, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
       [5.09102106e-01, 6.60000000e+01, 5.14801025e-01, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
       [5.09193897e-01, 6.60000000e+01, 4.99217033e-01, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]]), array(['normal_0', 'normal_0', 'normal_0', ..., 'abnormal_0',
       'abnormal_0', 'abnormal_0'], dtype='<U10')))), ('params', ('case2', {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': False, 'is_nystrom': False, 'is_quickshift': False, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [1]}))])
X.shape: (27309, 47), y: Counter({0: 26942, 1: 367})
left: Counter({0: 26642, 1: 67}), test: Counter({0: 300, 1: 300})


===1/5(n_repeats): {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': False, 'is_nystrom': False, 'is_quickshift': False, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [1]}===
train: Counter({0: 5000}), val: Counter({0: 53, 1: 53})
'get_best_results()' starts at 2020-12-31 19:22:42
--is_gs: False, X_val == X_test
X_train.shape: (5000, 47), y_train: Counter({0: 5000})
X_val.shape: (600, 47), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 47), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:    3.5s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:    3.5s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.025201 seconds
Total train time: 0.025201 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0, model_train_time: 0.025201
'decision_function()' starts at 2020-12-31 19:22:43
'decision_function()' ends at 2020-12-31 19:22:43. It takes 0.0 mins
Test model takes 0.000692 seconds
APC: 0.5521546751820374
AUC: 0.6182222222222223
Total test time: 0.000692 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0, model_test_time: 0.000692
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.048002 seconds
Total train time: 0.048002 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0, model_train_time: 0.048002
'decision_function()' starts at 2020-12-31 19:22:44
'decision_function()' ends at 2020-12-31 19:22:44. It takes 0.0 mins
Test model takes 0.000774 seconds
APC: 0.5521546751820374
AUC: 0.6182222222222223
Total test time: 0.000774 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0, model_test_time: 0.000774
'get_best_results()' ends at 2020-12-31 19:22:44. It takes 0.0265 mins


===2/5(n_repeats): {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': False, 'is_nystrom': False, 'is_quickshift': False, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [1]}===
train: Counter({0: 5000}), val: Counter({0: 53, 1: 53})
'get_best_results()' starts at 2020-12-31 19:22:44
--is_gs: False, X_val == X_test
X_train.shape: (5000, 47), y_train: Counter({0: 5000})
X_val.shape: (600, 47), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 47), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:    1.3s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:    1.3s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.017497 seconds
Total train time: 0.017497 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0, model_train_time: 0.017497
'decision_function()' starts at 2020-12-31 19:22:45
'decision_function()' ends at 2020-12-31 19:22:45. It takes 0.0 mins
Test model takes 0.000325 seconds
APC: 0.5928593335090726
AUC: 0.6742222222222223
Total test time: 0.000325 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0, model_test_time: 0.000325
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.056023 seconds
Total train time: 0.056023 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0, model_train_time: 0.056023
'decision_function()' starts at 2020-12-31 19:22:45
'decision_function()' ends at 2020-12-31 19:22:45. It takes 0.0 mins
Test model takes 0.000761 seconds
APC: 0.5928593335090726
AUC: 0.6742222222222223
Total test time: 0.000761 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0, model_test_time: 0.000761
'get_best_results()' ends at 2020-12-31 19:22:45. It takes 0.0275 mins


===3/5(n_repeats): {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': False, 'is_nystrom': False, 'is_quickshift': False, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [1]}===
train: Counter({0: 5000}), val: Counter({0: 53, 1: 53})
'get_best_results()' starts at 2020-12-31 19:22:45
--is_gs: False, X_val == X_test
X_train.shape: (5000, 47), y_train: Counter({0: 5000})
X_val.shape: (600, 47), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 47), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:    1.3s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:    1.3s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.017801 seconds
Total train time: 0.017801 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0, model_train_time: 0.017801
'decision_function()' starts at 2020-12-31 19:22:47
'decision_function()' ends at 2020-12-31 19:22:47. It takes 0.0 mins
Test model takes 0.000337 seconds
APC: 0.5452179025071062
AUC: 0.6089666666666668
Total test time: 0.000337 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0, model_test_time: 0.000337
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.045316 seconds
Total train time: 0.045316 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0, model_train_time: 0.045316
'decision_function()' starts at 2020-12-31 19:22:47
'decision_function()' ends at 2020-12-31 19:22:47. It takes 0.0 mins
Test model takes 0.000819 seconds
APC: 0.5452179025071062
AUC: 0.6089666666666668
Total test time: 0.000819 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0, model_test_time: 0.000819
'get_best_results()' ends at 2020-12-31 19:22:47. It takes 0.0253 mins


===4/5(n_repeats): {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': False, 'is_nystrom': False, 'is_quickshift': False, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [1]}===
train: Counter({0: 5000}), val: Counter({0: 53, 1: 53})
'get_best_results()' starts at 2020-12-31 19:22:47
--is_gs: False, X_val == X_test
X_train.shape: (5000, 47), y_train: Counter({0: 5000})
X_val.shape: (600, 47), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 47), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:    1.2s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:    1.2s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.017355 seconds
Total train time: 0.017355 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0, model_train_time: 0.017355
'decision_function()' starts at 2020-12-31 19:22:48
'decision_function()' ends at 2020-12-31 19:22:48. It takes 0.0 mins
Test model takes 0.000329 seconds
APC: 0.5744623900436157
AUC: 0.6596222222222222
Total test time: 0.000329 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0, model_test_time: 0.000329
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.045516 seconds
Total train time: 0.045516 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0, model_train_time: 0.045516
'decision_function()' starts at 2020-12-31 19:22:48
'decision_function()' ends at 2020-12-31 19:22:48. It takes 0.0 mins
Test model takes 0.000649 seconds
APC: 0.5744623900436157
AUC: 0.6596222222222222
Total test time: 0.000649 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0, model_test_time: 0.000649
'get_best_results()' ends at 2020-12-31 19:22:48. It takes 0.027 mins


===5/5(n_repeats): {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': False, 'is_nystrom': False, 'is_quickshift': False, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [1]}===
train: Counter({0: 5000}), val: Counter({0: 53, 1: 53})
'get_best_results()' starts at 2020-12-31 19:22:48
--is_gs: False, X_val == X_test
X_train.shape: (5000, 47), y_train: Counter({0: 5000})
X_val.shape: (600, 47), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 47), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:    1.3s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:    1.3s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.025248 seconds
Total train time: 0.025248 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0, model_train_time: 0.025248
'decision_function()' starts at 2020-12-31 19:22:50
'decision_function()' ends at 2020-12-31 19:22:50. It takes 0.0 mins
Test model takes 0.000666 seconds
APC: 0.5731789245281496
AUC: 0.6753666666666667
Total test time: 0.000666 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0, model_test_time: 0.000666
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.053273 seconds
Total train time: 0.053273 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0, model_train_time: 0.053273
'decision_function()' starts at 2020-12-31 19:22:50
'decision_function()' ends at 2020-12-31 19:22:50. It takes 0.0 mins
Test model takes 0.000742 seconds
APC: 0.5731789245281496
AUC: 0.6753666666666667
Total test time: 0.000742 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0, model_test_time: 0.000742
'get_best_results()' ends at 2020-12-31 19:22:50. It takes 0.0264 mins
single_main.kwargs: dict_items([('data', (('UNB3', 'speedup/data/src_dst/iat_size/UNB3/Xy-normal-abnormal.dat'), (array([[2.86102295e-06, 7.00000000e+01, 2.14576721e-06, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
       [4.69684601e-05, 1.10000000e+02, 1.51201010e+00, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
       [4.05311584e-06, 1.10000000e+02, 2.63929367e-04, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
       ...,
       [5.09297132e-01, 6.60000000e+01, 4.99202013e-01, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
       [5.09102106e-01, 6.60000000e+01, 5.14801025e-01, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
       [5.09193897e-01, 6.60000000e+01, 4.99217033e-01, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]]), array(['normal_0', 'normal_0', 'normal_0', ..., 'abnormal_0',
       'abnormal_0', 'abnormal_0'], dtype='<U10')))), ('params', ('case3', {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': True, 'is_nystrom': False, 'is_quickshift': False, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [1], 'kjl_qs': [0.3], 'kjl_ns': [100], 'kjl_ds': [5]}))])
X.shape: (27309, 47), y: Counter({0: 26942, 1: 367})
left: Counter({0: 26642, 1: 67}), test: Counter({0: 300, 1: 300})


===1/5(n_repeats): {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': True, 'is_nystrom': False, 'is_quickshift': False, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [1], 'kjl_qs': [0.3], 'kjl_ns': [100], 'kjl_ds': [5]}===
train: Counter({0: 5000}), val: Counter({0: 53, 1: 53})
'get_best_results()' starts at 2020-12-31 19:22:50
--is_gs: False, X_val == X_test
X_train.shape: (5000, 47), y_train: Counter({0: 5000})
X_val.shape: (600, 47), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 47), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:    1.3s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:    1.3s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
sigma: 369.0546543947471
random_state: 42
Finished getting the projection matrix
Projected data
kjl on train set took 0.671851 seconds
Projecting test data
kjl on test set took 0.002565 seconds
self.sigma: 369.0546543947471, q=0.3
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.005264 seconds
Total train time: 0.677115 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0.671851, model_train_time: 0.005264
'decision_function()' starts at 2020-12-31 19:22:52
'decision_function()' ends at 2020-12-31 19:22:52. It takes 0.0 mins
Test model takes 0.000272 seconds
APC: 0.32923927778647066
AUC: 0.12647777777777777
Total test time: 0.002837 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.002565, model_test_time: 0.000272
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
sigma: 369.0546543947471
random_state: 42
Finished getting the projection matrix
Projected data
kjl on train set took 0.829033 seconds
Projecting test data
kjl on test set took 0.003028 seconds
self.sigma: 369.0546543947471, q=0.3
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.005753 seconds
Total train time: 0.834786 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0.829033, model_train_time: 0.005753
'decision_function()' starts at 2020-12-31 19:22:53
'decision_function()' ends at 2020-12-31 19:22:53. It takes 0.0 mins
Test model takes 0.000304 seconds
APC: 0.32923927778647066
AUC: 0.12647777777777777
Total test time: 0.003332 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.003028, model_test_time: 0.000304
'get_best_results()' ends at 2020-12-31 19:22:53. It takes 0.0481 mins


===2/5(n_repeats): {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': True, 'is_nystrom': False, 'is_quickshift': False, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [1], 'kjl_qs': [0.3], 'kjl_ns': [100], 'kjl_ds': [5]}===
train: Counter({0: 5000}), val: Counter({0: 53, 1: 53})
'get_best_results()' starts at 2020-12-31 19:22:53
--is_gs: False, X_val == X_test
X_train.shape: (5000, 47), y_train: Counter({0: 5000})
X_val.shape: (600, 47), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 47), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:    1.8s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:    1.8s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
sigma: 371.4337919364775
random_state: 42
Finished getting the projection matrix
Projected data
kjl on train set took 0.668107 seconds
Projecting test data
kjl on test set took 0.002528 seconds
self.sigma: 371.4337919364775, q=0.3
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.005037 seconds
Total train time: 0.673144 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0.668107, model_train_time: 0.005037
'decision_function()' starts at 2020-12-31 19:22:55
'decision_function()' ends at 2020-12-31 19:22:55. It takes 0.0 mins
Test model takes 0.000262 seconds
APC: 0.31492035105502103
AUC: 0.057150000000000006
Total test time: 0.00279 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.002528, model_test_time: 0.000262
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
sigma: 371.4337919364775
random_state: 42
Finished getting the projection matrix
Projected data
kjl on train set took 0.750814 seconds
Projecting test data
kjl on test set took 0.004099 seconds
self.sigma: 371.4337919364775, q=0.3
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.008312 seconds
Total train time: 0.759126 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0.750814, model_train_time: 0.008312
'decision_function()' starts at 2020-12-31 19:22:56
'decision_function()' ends at 2020-12-31 19:22:56. It takes 0.0 mins
Test model takes 0.00042 seconds
APC: 0.31492035105502103
AUC: 0.057150000000000006
Total test time: 0.0045190000000000004 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.004099, model_test_time: 0.00042
'get_best_results()' ends at 2020-12-31 19:22:56. It takes 0.0494 mins


===3/5(n_repeats): {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': True, 'is_nystrom': False, 'is_quickshift': False, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [1], 'kjl_qs': [0.3], 'kjl_ns': [100], 'kjl_ds': [5]}===
train: Counter({0: 5000}), val: Counter({0: 53, 1: 53})
'get_best_results()' starts at 2020-12-31 19:22:56
--is_gs: False, X_val == X_test
X_train.shape: (5000, 47), y_train: Counter({0: 5000})
X_val.shape: (600, 47), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 47), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:    1.9s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:    1.9s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
sigma: 364.0377272717949
random_state: 42
Finished getting the projection matrix
Projected data
kjl on train set took 0.728028 seconds
Projecting test data
kjl on test set took 0.002549 seconds
self.sigma: 364.0377272717949, q=0.3
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.005042 seconds
Total train time: 0.73307 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0.728028, model_train_time: 0.005042
'decision_function()' starts at 2020-12-31 19:22:58
'decision_function()' ends at 2020-12-31 19:22:58. It takes 0.0 mins
Test model takes 0.00027 seconds
APC: 0.31707329617514013
AUC: 0.07644999999999999
Total test time: 0.002819 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.002549, model_test_time: 0.00027
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
sigma: 364.0377272717949
random_state: 42
Finished getting the projection matrix
Projected data
kjl on train set took 0.833534 seconds
Projecting test data
kjl on test set took 0.003704 seconds
self.sigma: 364.0377272717949, q=0.3
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.008323 seconds
Total train time: 0.841857 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0.833534, model_train_time: 0.008323
'decision_function()' starts at 2020-12-31 19:22:59
'decision_function()' ends at 2020-12-31 19:22:59. It takes 0.0 mins
Test model takes 0.000408 seconds
APC: 0.31707329617514013
AUC: 0.07644999999999999
Total test time: 0.004112 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.003704, model_test_time: 0.000408
'get_best_results()' ends at 2020-12-31 19:22:59. It takes 0.0498 mins


===4/5(n_repeats): {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': True, 'is_nystrom': False, 'is_quickshift': False, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [1], 'kjl_qs': [0.3], 'kjl_ns': [100], 'kjl_ds': [5]}===
train: Counter({0: 5000}), val: Counter({0: 53, 1: 53})
'get_best_results()' starts at 2020-12-31 19:22:59
--is_gs: False, X_val == X_test
X_train.shape: (5000, 47), y_train: Counter({0: 5000})
X_val.shape: (600, 47), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 47), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:    1.9s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:    1.9s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
sigma: 371.3212849960182
random_state: 42
Finished getting the projection matrix
Projected data
kjl on train set took 0.678542 seconds
Projecting test data
kjl on test set took 0.002557 seconds
self.sigma: 371.3212849960182, q=0.3
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.005114 seconds
Total train time: 0.6836559999999999 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0.678542, model_train_time: 0.005114
'decision_function()' starts at 2020-12-31 19:23:01
'decision_function()' ends at 2020-12-31 19:23:01. It takes 0.0 mins
Test model takes 0.000268 seconds
APC: 0.33670440612140656
AUC: 0.15610555555555558
Total test time: 0.002825 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.002557, model_test_time: 0.000268
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
sigma: 371.3212849960182
random_state: 42
Finished getting the projection matrix
Projected data
kjl on train set took 0.781955 seconds
Projecting test data
kjl on test set took 0.003945 seconds
self.sigma: 371.3212849960182, q=0.3
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.008166 seconds
Total train time: 0.790121 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0.781955, model_train_time: 0.008166
'decision_function()' starts at 2020-12-31 19:23:02
'decision_function()' ends at 2020-12-31 19:23:02. It takes 0.0 mins
Test model takes 0.000401 seconds
APC: 0.33670440612140656
AUC: 0.15610555555555558
Total test time: 0.004346 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.003945, model_test_time: 0.000401
'get_best_results()' ends at 2020-12-31 19:23:02. It takes 0.0488 mins


===5/5(n_repeats): {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': True, 'is_nystrom': False, 'is_quickshift': False, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [1], 'kjl_qs': [0.3], 'kjl_ns': [100], 'kjl_ds': [5]}===
train: Counter({0: 5000}), val: Counter({0: 53, 1: 53})
'get_best_results()' starts at 2020-12-31 19:23:02
--is_gs: False, X_val == X_test
X_train.shape: (5000, 47), y_train: Counter({0: 5000})
X_val.shape: (600, 47), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 47), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:    1.9s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:    1.9s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
sigma: 364.14677290848573
random_state: 42
Finished getting the projection matrix
Projected data
kjl on train set took 0.683816 seconds
Projecting test data
kjl on test set took 0.002525 seconds
self.sigma: 364.14677290848573, q=0.3
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.005016 seconds
Total train time: 0.688832 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0.683816, model_train_time: 0.005016
'decision_function()' starts at 2020-12-31 19:23:04
'decision_function()' ends at 2020-12-31 19:23:04. It takes 0.0 mins
Test model takes 0.00026 seconds
APC: 0.3192137498441208
AUC: 0.0798833333333333
Total test time: 0.0027849999999999997 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.002525, model_test_time: 0.00026
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
sigma: 364.14677290848573
random_state: 42
Finished getting the projection matrix
Projected data
kjl on train set took 0.8162 seconds
Projecting test data
kjl on test set took 0.002912 seconds
self.sigma: 364.14677290848573, q=0.3
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.005734 seconds
Total train time: 0.821934 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0.8162, model_train_time: 0.005734
'decision_function()' starts at 2020-12-31 19:23:05
'decision_function()' ends at 2020-12-31 19:23:05. It takes 0.0 mins
Test model takes 0.000295 seconds
APC: 0.3192137498441208
AUC: 0.0798833333333333
Total test time: 0.003207 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.002912, model_test_time: 0.000295
'get_best_results()' ends at 2020-12-31 19:23:05. It takes 0.0492 mins
single_main.kwargs: dict_items([('data', (('UNB3', 'speedup/data/src_dst/iat_size/UNB3/Xy-normal-abnormal.dat'), (array([[2.86102295e-06, 7.00000000e+01, 2.14576721e-06, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
       [4.69684601e-05, 1.10000000e+02, 1.51201010e+00, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
       [4.05311584e-06, 1.10000000e+02, 2.63929367e-04, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
       ...,
       [5.09297132e-01, 6.60000000e+01, 4.99202013e-01, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
       [5.09102106e-01, 6.60000000e+01, 5.14801025e-01, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
       [5.09193897e-01, 6.60000000e+01, 4.99217033e-01, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]]), array(['normal_0', 'normal_0', 'normal_0', ..., 'abnormal_0',
       'abnormal_0', 'abnormal_0'], dtype='<U10')))), ('params', ('case4', {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': False, 'is_nystrom': True, 'is_quickshift': False, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [1], 'nystrom_qs': [0.3], 'nystrom_ns': [100], 'nystrom_ds': [5]}))])
X.shape: (27309, 47), y: Counter({0: 26942, 1: 367})
left: Counter({0: 26642, 1: 67}), test: Counter({0: 300, 1: 300})


===1/5(n_repeats): {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': False, 'is_nystrom': True, 'is_quickshift': False, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [1], 'nystrom_qs': [0.3], 'nystrom_ns': [100], 'nystrom_ds': [5]}===
train: Counter({0: 5000}), val: Counter({0: 53, 1: 53})
'get_best_results()' starts at 2020-12-31 19:23:05
--is_gs: False, X_val == X_test
X_train.shape: (5000, 47), y_train: Counter({0: 5000})
X_val.shape: (600, 47), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 47), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:    1.8s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:    1.8s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
sigma: 369.0546543947471
nystrom on train set took 0.673922 seconds
Projecting test data
nystrom on test set took 0.002479 seconds
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.005 seconds
Total train time: 0.678922 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0.673922, model_train_time: 0.005
'decision_function()' starts at 2020-12-31 19:23:07
'decision_function()' ends at 2020-12-31 19:23:07. It takes 0.0 mins
Test model takes 0.000256 seconds
APC: 0.5317517123679169
AUC: 0.5877888888888889
Total test time: 0.002735 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.002479, model_test_time: 0.000256
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
sigma: 369.0546543947471
nystrom on train set took 0.748893 seconds
Projecting test data
nystrom on test set took 0.003983 seconds
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.008309 seconds
Total train time: 0.757202 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0.748893, model_train_time: 0.008309
'decision_function()' starts at 2020-12-31 19:23:08
'decision_function()' ends at 2020-12-31 19:23:08. It takes 0.0 mins
Test model takes 0.000418 seconds
APC: 0.5317517123679169
AUC: 0.5877888888888889
Total test time: 0.004401 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.003983, model_test_time: 0.000418
'get_best_results()' ends at 2020-12-31 19:23:08. It takes 0.0501 mins


===2/5(n_repeats): {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': False, 'is_nystrom': True, 'is_quickshift': False, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [1], 'nystrom_qs': [0.3], 'nystrom_ns': [100], 'nystrom_ds': [5]}===
train: Counter({0: 5000}), val: Counter({0: 53, 1: 53})
'get_best_results()' starts at 2020-12-31 19:23:08
--is_gs: False, X_val == X_test
X_train.shape: (5000, 47), y_train: Counter({0: 5000})
X_val.shape: (600, 47), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 47), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:    2.0s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:    2.0s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
sigma: 371.4337919364775
nystrom on train set took 0.655132 seconds
Projecting test data
nystrom on test set took 0.002466 seconds
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.004942 seconds
Total train time: 0.660074 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0.655132, model_train_time: 0.004942
'decision_function()' starts at 2020-12-31 19:23:10
'decision_function()' ends at 2020-12-31 19:23:10. It takes 0.0 mins
Test model takes 0.000256 seconds
APC: 0.5063324862874077
AUC: 0.5638611111111111
Total test time: 0.002722 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.002466, model_test_time: 0.000256
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
sigma: 371.4337919364775
nystrom on train set took 0.681192 seconds
Projecting test data
nystrom on test set took 0.003899 seconds
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.008143 seconds
Total train time: 0.689335 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0.681192, model_train_time: 0.008143
'decision_function()' starts at 2020-12-31 19:23:11
'decision_function()' ends at 2020-12-31 19:23:11. It takes 0.0 mins
Test model takes 0.000408 seconds
APC: 0.5063324862874077
AUC: 0.5638611111111111
Total test time: 0.004307 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.003899, model_test_time: 0.000408
'get_best_results()' ends at 2020-12-31 19:23:11. It takes 0.0461 mins


===3/5(n_repeats): {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': False, 'is_nystrom': True, 'is_quickshift': False, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [1], 'nystrom_qs': [0.3], 'nystrom_ns': [100], 'nystrom_ds': [5]}===
train: Counter({0: 5000}), val: Counter({0: 53, 1: 53})
'get_best_results()' starts at 2020-12-31 19:23:11
--is_gs: False, X_val == X_test
X_train.shape: (5000, 47), y_train: Counter({0: 5000})
X_val.shape: (600, 47), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 47), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:    1.8s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:    1.8s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
sigma: 364.0377272717949
nystrom on train set took 0.760125 seconds
Projecting test data
nystrom on test set took 0.002453 seconds
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.005064 seconds
Total train time: 0.765189 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0.760125, model_train_time: 0.005064
'decision_function()' starts at 2020-12-31 19:23:13
'decision_function()' ends at 2020-12-31 19:23:13. It takes 0.0 mins
Test model takes 0.000274 seconds
APC: 0.5598297206571942
AUC: 0.6170222222222222
Total test time: 0.002727 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.002453, model_test_time: 0.000274
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
sigma: 364.0377272717949
nystrom on train set took 0.864963 seconds
Projecting test data
nystrom on test set took 0.003374 seconds
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.005812 seconds
Total train time: 0.8707750000000001 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0.864963, model_train_time: 0.005812
'decision_function()' starts at 2020-12-31 19:23:14
'decision_function()' ends at 2020-12-31 19:23:14. It takes 0.0 mins
Test model takes 0.000307 seconds
APC: 0.5598008054043984
AUC: 0.6169777777777778
Total test time: 0.003681 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.003374, model_test_time: 0.000307
'get_best_results()' ends at 2020-12-31 19:23:14. It takes 0.0518 mins


===4/5(n_repeats): {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': False, 'is_nystrom': True, 'is_quickshift': False, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [1], 'nystrom_qs': [0.3], 'nystrom_ns': [100], 'nystrom_ds': [5]}===
train: Counter({0: 5000}), val: Counter({0: 53, 1: 53})
'get_best_results()' starts at 2020-12-31 19:23:14
--is_gs: False, X_val == X_test
X_train.shape: (5000, 47), y_train: Counter({0: 5000})
X_val.shape: (600, 47), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 47), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:    2.0s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:    2.0s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
sigma: 371.3212849960182
nystrom on train set took 0.706227 seconds
Projecting test data
nystrom on test set took 0.00248 seconds
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.005027 seconds
Total train time: 0.711254 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0.706227, model_train_time: 0.005027
'decision_function()' starts at 2020-12-31 19:23:16
'decision_function()' ends at 2020-12-31 19:23:16. It takes 0.0 mins
Test model takes 0.000273 seconds
APC: 0.5343454519747933
AUC: 0.5793111111111111
Total test time: 0.0027530000000000002 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.00248, model_test_time: 0.000273
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
sigma: 371.3212849960182
nystrom on train set took 0.785077 seconds
Projecting test data
nystrom on test set took 0.003377 seconds
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.005839 seconds
Total train time: 0.7909160000000001 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0.785077, model_train_time: 0.005839
'decision_function()' starts at 2020-12-31 19:23:17
'decision_function()' ends at 2020-12-31 19:23:17. It takes 0.0 mins
Test model takes 0.000308 seconds
APC: 0.5343454519747934
AUC: 0.5792666666666667
Total test time: 0.003685 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.003377, model_test_time: 0.000308
'get_best_results()' ends at 2020-12-31 19:23:17. It takes 0.0485 mins


===5/5(n_repeats): {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': False, 'is_nystrom': True, 'is_quickshift': False, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [1], 'nystrom_qs': [0.3], 'nystrom_ns': [100], 'nystrom_ds': [5]}===
train: Counter({0: 5000}), val: Counter({0: 53, 1: 53})
'get_best_results()' starts at 2020-12-31 19:23:17
--is_gs: False, X_val == X_test
X_train.shape: (5000, 47), y_train: Counter({0: 5000})
X_val.shape: (600, 47), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 47), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:    1.9s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:    1.9s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
sigma: 364.14677290848573
nystrom on train set took 0.727308 seconds
Projecting test data
nystrom on test set took 0.002472 seconds
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.004922 seconds
Total train time: 0.7322299999999999 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0.727308, model_train_time: 0.004922
'decision_function()' starts at 2020-12-31 19:23:19
'decision_function()' ends at 2020-12-31 19:23:19. It takes 0.0 mins
Test model takes 0.000257 seconds
APC: 0.533205777611476
AUC: 0.5911944444444445
Total test time: 0.0027289999999999997 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.002472, model_test_time: 0.000257
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
sigma: 364.14677290848573
nystrom on train set took 0.708945 seconds
Projecting test data
nystrom on test set took 0.003947 seconds
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.008179 seconds
Total train time: 0.7171240000000001 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0.708945, model_train_time: 0.008179
'decision_function()' starts at 2020-12-31 19:23:20
'decision_function()' ends at 2020-12-31 19:23:20. It takes 0.0 mins
Test model takes 0.000423 seconds
APC: 0.533205777611476
AUC: 0.5911944444444445
Total test time: 0.00437 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.003947, model_test_time: 0.000423
'get_best_results()' ends at 2020-12-31 19:23:20. It takes 0.0496 mins
single_main.kwargs: dict_items([('data', (('UNB3', 'speedup/data/src_dst/iat_size/UNB3/Xy-normal-abnormal.dat'), (array([[2.86102295e-06, 7.00000000e+01, 2.14576721e-06, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
       [4.69684601e-05, 1.10000000e+02, 1.51201010e+00, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
       [4.05311584e-06, 1.10000000e+02, 2.63929367e-04, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
       ...,
       [5.09297132e-01, 6.60000000e+01, 4.99202013e-01, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
       [5.09102106e-01, 6.60000000e+01, 5.14801025e-01, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
       [5.09193897e-01, 6.60000000e+01, 4.99217033e-01, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]]), array(['normal_0', 'normal_0', 'normal_0', ..., 'abnormal_0',
       'abnormal_0', 'abnormal_0'], dtype='<U10')))), ('params', ('case5', {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': True, 'is_nystrom': False, 'is_quickshift': True, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [], 'kjl_qs': [0.3], 'kjl_ns': [100], 'kjl_ds': [5], 'quickshift_ks': [500], 'quickshift_betas': [0.9]}))])
X.shape: (27309, 47), y: Counter({0: 26942, 1: 367})
left: Counter({0: 26642, 1: 67}), test: Counter({0: 300, 1: 300})


===1/5(n_repeats): {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': True, 'is_nystrom': False, 'is_quickshift': True, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [], 'kjl_qs': [0.3], 'kjl_ns': [100], 'kjl_ds': [5], 'quickshift_ks': [500], 'quickshift_betas': [0.9]}===
train: Counter({0: 5000}), val: Counter({0: 53, 1: 53})
'get_best_results()' starts at 2020-12-31 19:23:20
--is_gs: False, X_val == X_test
X_train.shape: (5000, 47), y_train: Counter({0: 5000})
X_val.shape: (600, 47), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 47), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:    2.0s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:    2.0s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
number of neighbors in k-NN: 500
*** quick_training_time: 2.57412, ignore_clusters_time: 0.001355
--all clusters (17) when (k:(500), beta:0.9). However, only 3 clusters have at least 10 datapoints. Counter(labels_): Counter({0: 2778, 1: 2180, 2: 17, 7: 5, 6: 4, 4: 3, 9: 3, 3: 1, 5: 1, 8: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1}), *** len(Counter(labels_)): 17
sigma: 369.0546543947471
random_state: 42
Finished getting the projection matrix
Projected data
kjl on train set took 0.652069 seconds
Projecting test data
kjl on test set took 0.001941 seconds
self.sigma: 369.0546543947471, q=0.3
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 3, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.0258 seconds
Total train time: 3.251989 <= std_train_time: 0, seek_train_time: 2.57412, proj_train_time: 0.652069, model_train_time: 0.0258
'decision_function()' starts at 2020-12-31 19:23:24
'decision_function()' ends at 2020-12-31 19:23:24. It takes 0.0 mins
Test model takes 0.00037 seconds
APC: 0.6562806039467878
AUC: 0.7859222222222222
Total test time: 0.002311 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.001941, model_test_time: 0.00037
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
number of neighbors in k-NN: 500
*** quick_training_time: 2.711087, ignore_clusters_time: 0.001254
--all clusters (17) when (k:(500), beta:0.9). However, only 3 clusters have at least 10 datapoints. Counter(labels_): Counter({0: 2778, 1: 2180, 2: 17, 7: 5, 6: 4, 4: 3, 9: 3, 3: 1, 5: 1, 8: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1}), *** len(Counter(labels_)): 17
sigma: 369.0546543947471
random_state: 42
Finished getting the projection matrix
Projected data
kjl on train set took 0.812485 seconds
Projecting test data
kjl on test set took 0.003062 seconds
self.sigma: 369.0546543947471, q=0.3
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 3, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.031104 seconds
Total train time: 3.554676 <= std_train_time: 0, seek_train_time: 2.711087, proj_train_time: 0.812485, model_train_time: 0.031104
'decision_function()' starts at 2020-12-31 19:23:28
'decision_function()' ends at 2020-12-31 19:23:28. It takes 0.0 mins
Test model takes 0.000423 seconds
APC: 0.6562806039467878
AUC: 0.7859222222222222
Total test time: 0.0034850000000000003 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.003062, model_test_time: 0.000423
'get_best_results()' ends at 2020-12-31 19:23:28. It takes 0.1369 mins


===2/5(n_repeats): {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': True, 'is_nystrom': False, 'is_quickshift': True, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [], 'kjl_qs': [0.3], 'kjl_ns': [100], 'kjl_ds': [5], 'quickshift_ks': [500], 'quickshift_betas': [0.9]}===
train: Counter({0: 5000}), val: Counter({0: 53, 1: 53})
'get_best_results()' starts at 2020-12-31 19:23:28
--is_gs: False, X_val == X_test
X_train.shape: (5000, 47), y_train: Counter({0: 5000})
X_val.shape: (600, 47), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 47), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:    4.4s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:    4.4s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
number of neighbors in k-NN: 500
*** quick_training_time: 2.459065, ignore_clusters_time: 0.001386
--all clusters (16) when (k:(500), beta:0.9). However, only 4 clusters have at least 10 datapoints. Counter(labels_): Counter({1: 2828, 0: 1183, 2: 957, 9: 11, 4: 7, 3: 2, 7: 2, 8: 2, 5: 1, 6: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1}), *** len(Counter(labels_)): 16
sigma: 371.4337919364775
random_state: 42
Finished getting the projection matrix
Projected data
kjl on train set took 0.604084 seconds
Projecting test data
kjl on test set took 0.001962 seconds
self.sigma: 371.4337919364775, q=0.3
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 4, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.083975 seconds
Total train time: 3.147124 <= std_train_time: 0, seek_train_time: 2.459065, proj_train_time: 0.604084, model_train_time: 0.083975
'decision_function()' starts at 2020-12-31 19:23:33
'decision_function()' ends at 2020-12-31 19:23:33. It takes 0.0 mins
Test model takes 0.000382 seconds
APC: 0.616439484950366
AUC: 0.7489555555555556
Total test time: 0.002344 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.001962, model_test_time: 0.000382
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
number of neighbors in k-NN: 500
*** quick_training_time: 2.594779, ignore_clusters_time: 0.00137
--all clusters (16) when (k:(500), beta:0.9). However, only 4 clusters have at least 10 datapoints. Counter(labels_): Counter({1: 2828, 0: 1183, 2: 957, 9: 11, 4: 7, 3: 2, 7: 2, 8: 2, 5: 1, 6: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1}), *** len(Counter(labels_)): 16
sigma: 371.4337919364775
random_state: 42
Finished getting the projection matrix
Projected data
kjl on train set took 0.728599 seconds
Projecting test data
kjl on test set took 0.002367 seconds
self.sigma: 371.4337919364775, q=0.3
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 4, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.09225 seconds
Total train time: 3.415628 <= std_train_time: 0, seek_train_time: 2.594779, proj_train_time: 0.728599, model_train_time: 0.09225
'decision_function()' starts at 2020-12-31 19:23:36
'decision_function()' ends at 2020-12-31 19:23:36. It takes 0.0 mins
Test model takes 0.000416 seconds
APC: 0.616439484950366
AUC: 0.7489555555555556
Total test time: 0.0027830000000000003 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.002367, model_test_time: 0.000416
'get_best_results()' ends at 2020-12-31 19:23:36. It takes 0.1328 mins


===3/5(n_repeats): {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': True, 'is_nystrom': False, 'is_quickshift': True, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [], 'kjl_qs': [0.3], 'kjl_ns': [100], 'kjl_ds': [5], 'quickshift_ks': [500], 'quickshift_betas': [0.9]}===
train: Counter({0: 5000}), val: Counter({0: 53, 1: 53})
'get_best_results()' starts at 2020-12-31 19:23:36
--is_gs: False, X_val == X_test
X_train.shape: (5000, 47), y_train: Counter({0: 5000})
X_val.shape: (600, 47), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 47), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:    4.3s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:    4.3s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
number of neighbors in k-NN: 500
*** quick_training_time: 2.520502, ignore_clusters_time: 0.001434
--all clusters (11) when (k:(500), beta:0.9). However, only 5 clusters have at least 10 datapoints. Counter(labels_): Counter({0: 2697, 2: 923, 3: 816, 1: 459, 6: 88, 7: 9, 4: 3, 5: 2, 8: 1, 9: 1, 10: 1}), *** len(Counter(labels_)): 11
sigma: 364.0377272717949
random_state: 42
Finished getting the projection matrix
Projected data
kjl on train set took 0.714541 seconds
Projecting test data
kjl on test set took 0.001933 seconds
self.sigma: 364.0377272717949, q=0.3
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 5, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.023629 seconds
Total train time: 3.2586720000000002 <= std_train_time: 0, seek_train_time: 2.520502, proj_train_time: 0.714541, model_train_time: 0.023629
'decision_function()' starts at 2020-12-31 19:23:41
'decision_function()' ends at 2020-12-31 19:23:41. It takes 0.0 mins
Test model takes 0.000414 seconds
APC: 0.9199585527478606
AUC: 0.9138777777777779
Total test time: 0.002347 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.001933, model_test_time: 0.000414
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
number of neighbors in k-NN: 500
*** quick_training_time: 2.8166, ignore_clusters_time: 0.001423
--all clusters (11) when (k:(500), beta:0.9). However, only 5 clusters have at least 10 datapoints. Counter(labels_): Counter({0: 2697, 2: 923, 3: 816, 1: 459, 6: 88, 7: 9, 4: 3, 5: 2, 8: 1, 9: 1, 10: 1}), *** len(Counter(labels_)): 11
sigma: 364.0377272717949
random_state: 42
Finished getting the projection matrix
Projected data
kjl on train set took 0.786033 seconds
Projecting test data
kjl on test set took 0.00314 seconds
self.sigma: 364.0377272717949, q=0.3
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 5, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.027441 seconds
Total train time: 3.630074 <= std_train_time: 0, seek_train_time: 2.8166, proj_train_time: 0.786033, model_train_time: 0.027441
'decision_function()' starts at 2020-12-31 19:23:44
'decision_function()' ends at 2020-12-31 19:23:44. It takes 0.0 mins
Test model takes 0.000449 seconds
APC: 0.9199585527478606
AUC: 0.9138777777777779
Total test time: 0.003589 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.00314, model_test_time: 0.000449
'get_best_results()' ends at 2020-12-31 19:23:44. It takes 0.1385 mins


===4/5(n_repeats): {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': True, 'is_nystrom': False, 'is_quickshift': True, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [], 'kjl_qs': [0.3], 'kjl_ns': [100], 'kjl_ds': [5], 'quickshift_ks': [500], 'quickshift_betas': [0.9]}===
train: Counter({0: 5000}), val: Counter({0: 53, 1: 53})
'get_best_results()' starts at 2020-12-31 19:23:44
--is_gs: False, X_val == X_test
X_train.shape: (5000, 47), y_train: Counter({0: 5000})
X_val.shape: (600, 47), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 47), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:    4.4s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:    4.4s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
number of neighbors in k-NN: 500
*** quick_training_time: 2.85116, ignore_clusters_time: 0.001351
--all clusters (9) when (k:(500), beta:0.9). However, only 4 clusters have at least 10 datapoints. Counter(labels_): Counter({1: 2388, 0: 2140, 2: 389, 3: 73, 6: 5, 5: 2, 4: 1, 7: 1, 8: 1}), *** len(Counter(labels_)): 9
sigma: 371.3212849960182
random_state: 42
Finished getting the projection matrix
Projected data
kjl on train set took 0.699292 seconds
Projecting test data
kjl on test set took 0.001936 seconds
self.sigma: 371.3212849960182, q=0.3
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 4, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.06249 seconds
Total train time: 3.612942 <= std_train_time: 0, seek_train_time: 2.85116, proj_train_time: 0.699292, model_train_time: 0.06249
'decision_function()' starts at 2020-12-31 19:23:49
'decision_function()' ends at 2020-12-31 19:23:49. It takes 0.0 mins
Test model takes 0.000384 seconds
APC: 0.5724296056114977
AUC: 0.7050055555555554
Total test time: 0.00232 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.001936, model_test_time: 0.000384
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
number of neighbors in k-NN: 500
*** quick_training_time: 3.016325, ignore_clusters_time: 0.001361
--all clusters (9) when (k:(500), beta:0.9). However, only 4 clusters have at least 10 datapoints. Counter(labels_): Counter({1: 2388, 0: 2140, 2: 389, 3: 73, 6: 5, 5: 2, 4: 1, 7: 1, 8: 1}), *** len(Counter(labels_)): 9
sigma: 371.3212849960182
random_state: 42
Finished getting the projection matrix
Projected data
kjl on train set took 0.760262 seconds
Projecting test data
kjl on test set took 0.002888 seconds
self.sigma: 371.3212849960182, q=0.3
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 4, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.075139 seconds
Total train time: 3.851726 <= std_train_time: 0, seek_train_time: 3.016325, proj_train_time: 0.760262, model_train_time: 0.075139
'decision_function()' starts at 2020-12-31 19:23:53
'decision_function()' ends at 2020-12-31 19:23:53. It takes 0.0 mins
Test model takes 0.000443 seconds
APC: 0.5724296056114977
AUC: 0.7050055555555554
Total test time: 0.0033309999999999998 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.002888, model_test_time: 0.000443
'get_best_results()' ends at 2020-12-31 19:23:53. It takes 0.1501 mins


===5/5(n_repeats): {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': True, 'is_nystrom': False, 'is_quickshift': True, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [], 'kjl_qs': [0.3], 'kjl_ns': [100], 'kjl_ds': [5], 'quickshift_ks': [500], 'quickshift_betas': [0.9]}===
train: Counter({0: 5000}), val: Counter({0: 53, 1: 53})
'get_best_results()' starts at 2020-12-31 19:23:53
--is_gs: False, X_val == X_test
X_train.shape: (5000, 47), y_train: Counter({0: 5000})
X_val.shape: (600, 47), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 47), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:    4.9s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:    4.9s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
number of neighbors in k-NN: 500
*** quick_training_time: 2.550029, ignore_clusters_time: 0.001457
--all clusters (14) when (k:(500), beta:0.9). However, only 6 clusters have at least 10 datapoints. Counter(labels_): Counter({1: 2694, 2: 1215, 0: 975, 3: 70, 5: 20, 4: 11, 8: 4, 9: 3, 6: 2, 10: 2, 7: 1, 11: 1, 12: 1, 13: 1}), *** len(Counter(labels_)): 14
sigma: 364.14677290848573
random_state: 42
Finished getting the projection matrix
Projected data
kjl on train set took 0.710201 seconds
Projecting test data
kjl on test set took 0.001947 seconds
self.sigma: 364.14677290848573, q=0.3
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 6, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.108208 seconds
Total train time: 3.368438 <= std_train_time: 0, seek_train_time: 2.550029, proj_train_time: 0.710201, model_train_time: 0.108208
'decision_function()' starts at 2020-12-31 19:23:58
'decision_function()' ends at 2020-12-31 19:23:58. It takes 0.0 mins
Test model takes 0.000419 seconds
APC: 0.9226591623407512
AUC: 0.9102333333333333
Total test time: 0.002366 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.001947, model_test_time: 0.000419
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
number of neighbors in k-NN: 500
*** quick_training_time: 2.717086, ignore_clusters_time: 0.001561
--all clusters (14) when (k:(500), beta:0.9). However, only 6 clusters have at least 10 datapoints. Counter(labels_): Counter({1: 2694, 2: 1215, 0: 975, 3: 70, 5: 20, 4: 11, 8: 4, 9: 3, 6: 2, 10: 2, 7: 1, 11: 1, 12: 1, 13: 1}), *** len(Counter(labels_)): 14
sigma: 364.14677290848573
random_state: 42
Finished getting the projection matrix
Projected data
kjl on train set took 0.754909 seconds
Projecting test data
kjl on test set took 0.002936 seconds
self.sigma: 364.14677290848573, q=0.3
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 6, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.131607 seconds
Total train time: 3.603602 <= std_train_time: 0, seek_train_time: 2.717086, proj_train_time: 0.754909, model_train_time: 0.131607
'decision_function()' starts at 2020-12-31 19:24:02
'decision_function()' ends at 2020-12-31 19:24:02. It takes 0.0 mins
Test model takes 0.000415 seconds
APC: 0.9226591623407512
AUC: 0.9102333333333333
Total test time: 0.003351 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.002936, model_test_time: 0.000415
'get_best_results()' ends at 2020-12-31 19:24:02. It takes 0.1409 mins
single_main.kwargs: dict_items([('data', (('UNB3', 'speedup/data/src_dst/iat_size/UNB3/Xy-normal-abnormal.dat'), (array([[2.86102295e-06, 7.00000000e+01, 2.14576721e-06, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
       [4.69684601e-05, 1.10000000e+02, 1.51201010e+00, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
       [4.05311584e-06, 1.10000000e+02, 2.63929367e-04, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
       ...,
       [5.09297132e-01, 6.60000000e+01, 4.99202013e-01, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
       [5.09102106e-01, 6.60000000e+01, 5.14801025e-01, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
       [5.09193897e-01, 6.60000000e+01, 4.99217033e-01, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]]), array(['normal_0', 'normal_0', 'normal_0', ..., 'abnormal_0',
       'abnormal_0', 'abnormal_0'], dtype='<U10')))), ('params', ('case6', {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': True, 'is_nystrom': False, 'is_quickshift': False, 'is_meanshift': True, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [], 'kjl_qs': [0.3], 'kjl_ns': [100], 'kjl_ds': [5], 'meanshift_qs': []}))])
X.shape: (27309, 47), y: Counter({0: 26942, 1: 367})
left: Counter({0: 26642, 1: 67}), test: Counter({0: 300, 1: 300})


===1/5(n_repeats): {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': True, 'is_nystrom': False, 'is_quickshift': False, 'is_meanshift': True, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [], 'kjl_qs': [0.3], 'kjl_ns': [100], 'kjl_ds': [5], 'meanshift_qs': []}===
train: Counter({0: 5000}), val: Counter({0: 53, 1: 53})
'get_best_results()' starts at 2020-12-31 19:24:02
--is_gs: False, X_val == X_test
X_train.shape: (5000, 47), y_train: Counter({0: 5000})
X_val.shape: (600, 47), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 47), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:    4.6s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:    4.6s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
meanshift_training, it took 19.876524 seconds
--all clusters (658) when (bandwidth:369.0546543947471, 369.0546543947471). However, only 36 clusters have at least 10 datapoints. Counter(labels_): Counter({0: 3027, 37: 122, 601: 100, 1: 91, 438: 84, 502: 71, 208: 55, 2: 46, 4: 44, 352: 39, 501: 34, 3: 33, 169: 29, 599: 26, 548: 25, 155: 23, 5: 20, 7: 18, 9: 18, 94: 18, 24: 17, 49: 17, 343: 16, 85: 15, 6: 15, 83: 14, 118: 14, 26: 14, 8: 14, 28: 13, 36: 12, 30: 12, 11: 12, 629: 10, 10: 10, 12: 10, 14: 9, 27: 8, 13: 8, 427: 8, 159: 8, 15: 7, 33: 7, 16: 7, 20: 7, 89: 7, 17: 7, 19: 6, 18: 6, 406: 6, 627: 6, 56: 5, 22: 5, 21: 5, 29: 5, 25: 5, 23: 5, 48: 4, 54: 4, 32: 4, 41: 4, 62: 4, 35: 4, 34: 4, 38: 4, 31: 4, 156: 3, 53: 3, 550: 3, 45: 3, 55: 3, 513: 3, 42: 3, 43: 3, 47: 3, 648: 3, 52: 3, 58: 3, 46: 3, 594: 3, 68: 3, 44: 3, 187: 3, 236: 3, 39: 3, 57: 3, 90: 3, 93: 3, 40: 3, 376: 3, 51: 3, 50: 3, 82: 3, 653: 2, 64: 2, 411: 2, 70: 2, 602: 2, 212: 2, 66: 2, 59: 2, 432: 2, 63: 2, 87: 2, 263: 2, 80: 2, 73: 2, 277: 2, 91: 2, 77: 2, 60: 2, 561: 2, 75: 2, 78: 2, 84: 2, 74: 2, 65: 2, 79: 2, 596: 2, 458: 2, 290: 2, 69: 2, 86: 2, 547: 2, 390: 2, 61: 2, 145: 2, 76: 2, 72: 2, 71: 2, 635: 2, 445: 2, 88: 2, 67: 2, 81: 2, 92: 2, 253: 1, 577: 1, 539: 1, 219: 1, 401: 1, 647: 1, 496: 1, 322: 1, 518: 1, 423: 1, 604: 1, 567: 1, 490: 1, 162: 1, 638: 1, 330: 1, 510: 1, 314: 1, 186: 1, 361: 1, 486: 1, 173: 1, 140: 1, 232: 1, 270: 1, 479: 1, 371: 1, 365: 1, 593: 1, 655: 1, 552: 1, 580: 1, 276: 1, 203: 1, 307: 1, 179: 1, 603: 1, 368: 1, 101: 1, 214: 1, 136: 1, 576: 1, 98: 1, 328: 1, 478: 1, 201: 1, 312: 1, 96: 1, 137: 1, 534: 1, 285: 1, 340: 1, 610: 1, 301: 1, 646: 1, 536: 1, 100: 1, 556: 1, 605: 1, 448: 1, 332: 1, 158: 1, 245: 1, 121: 1, 126: 1, 656: 1, 231: 1, 436: 1, 198: 1, 133: 1, 364: 1, 524: 1, 267: 1, 125: 1, 222: 1, 569: 1, 344: 1, 554: 1, 316: 1, 113: 1, 454: 1, 455: 1, 466: 1, 284: 1, 119: 1, 296: 1, 573: 1, 354: 1, 171: 1, 497: 1, 639: 1, 305: 1, 252: 1, 217: 1, 589: 1, 102: 1, 120: 1, 591: 1, 190: 1, 581: 1, 551: 1, 574: 1, 138: 1, 279: 1, 416: 1, 308: 1, 519: 1, 588: 1, 467: 1, 184: 1, 298: 1, 338: 1, 462: 1, 409: 1, 237: 1, 104: 1, 394: 1, 259: 1, 595: 1, 202: 1, 397: 1, 333: 1, 650: 1, 377: 1, 295: 1, 272: 1, 393: 1, 353: 1, 465: 1, 246: 1, 166: 1, 359: 1, 274: 1, 413: 1, 494: 1, 363: 1, 544: 1, 412: 1, 341: 1, 386: 1, 223: 1, 530: 1, 431: 1, 428: 1, 621: 1, 560: 1, 472: 1, 122: 1, 487: 1, 606: 1, 348: 1, 651: 1, 495: 1, 129: 1, 183: 1, 435: 1, 434: 1, 329: 1, 623: 1, 189: 1, 114: 1, 131: 1, 150: 1, 281: 1, 512: 1, 153: 1, 256: 1, 139: 1, 124: 1, 636: 1, 146: 1, 500: 1, 652: 1, 175: 1, 562: 1, 165: 1, 582: 1, 213: 1, 188: 1, 515: 1, 374: 1, 474: 1, 373: 1, 134: 1, 327: 1, 172: 1, 383: 1, 112: 1, 657: 1, 463: 1, 613: 1, 144: 1, 598: 1, 461: 1, 584: 1, 392: 1, 216: 1, 273: 1, 319: 1, 622: 1, 395: 1, 538: 1, 586: 1, 370: 1, 193: 1, 378: 1, 111: 1, 233: 1, 609: 1, 337: 1, 572: 1, 403: 1, 402: 1, 614: 1, 372: 1, 414: 1, 261: 1, 334: 1, 641: 1, 331: 1, 444: 1, 289: 1, 349: 1, 242: 1, 471: 1, 619: 1, 442: 1, 575: 1, 585: 1, 632: 1, 381: 1, 292: 1, 170: 1, 197: 1, 255: 1, 499: 1, 325: 1, 509: 1, 644: 1, 108: 1, 469: 1, 505: 1, 299: 1, 346: 1, 470: 1, 207: 1, 493: 1, 607: 1, 537: 1, 152: 1, 97: 1, 196: 1, 600: 1, 339: 1, 625: 1, 116: 1, 220: 1, 464: 1, 182: 1, 624: 1, 107: 1, 533: 1, 456: 1, 407: 1, 587: 1, 634: 1, 391: 1, 278: 1, 531: 1, 351: 1, 127: 1, 481: 1, 452: 1, 526: 1, 283: 1, 415: 1, 176: 1, 498: 1, 142: 1, 477: 1, 379: 1, 164: 1, 350: 1, 288: 1, 244: 1, 447: 1, 149: 1, 180: 1, 504: 1, 185: 1, 387: 1, 597: 1, 291: 1, 642: 1, 405: 1, 143: 1, 297: 1, 238: 1, 132: 1, 141: 1, 286: 1, 287: 1, 508: 1, 578: 1, 608: 1, 451: 1, 266: 1, 449: 1, 408: 1, 400: 1, 249: 1, 228: 1, 345: 1, 168: 1, 375: 1, 157: 1, 128: 1, 324: 1, 521: 1, 262: 1, 520: 1, 167: 1, 210: 1, 396: 1, 476: 1, 503: 1, 583: 1, 105: 1, 410: 1, 229: 1, 326: 1, 618: 1, 106: 1, 218: 1, 437: 1, 631: 1, 151: 1, 115: 1, 522: 1, 315: 1, 161: 1, 616: 1, 271: 1, 446: 1, 130: 1, 163: 1, 178: 1, 109: 1, 311: 1, 422: 1, 514: 1, 535: 1, 620: 1, 398: 1, 555: 1, 453: 1, 358: 1, 367: 1, 633: 1, 360: 1, 147: 1, 342: 1, 264: 1, 528: 1, 568: 1, 239: 1, 205: 1, 192: 1, 199: 1, 517: 1, 654: 1, 95: 1, 225: 1, 532: 1, 250: 1, 209: 1, 226: 1, 240: 1, 558: 1, 541: 1, 366: 1, 251: 1, 473: 1, 306: 1, 200: 1, 382: 1, 540: 1, 570: 1, 347: 1, 247: 1, 545: 1, 280: 1, 336: 1, 204: 1, 268: 1, 355: 1, 475: 1, 430: 1, 525: 1, 230: 1, 241: 1, 579: 1, 516: 1, 321: 1, 617: 1, 195: 1, 424: 1, 419: 1, 485: 1, 649: 1, 309: 1, 542: 1, 459: 1, 103: 1, 611: 1, 489: 1, 356: 1, 443: 1, 357: 1, 257: 1, 511: 1, 160: 1, 224: 1, 421: 1, 234: 1, 304: 1, 335: 1, 323: 1, 546: 1, 215: 1, 303: 1, 135: 1, 566: 1, 628: 1, 420: 1, 637: 1, 612: 1, 429: 1, 317: 1, 492: 1, 123: 1, 640: 1, 206: 1, 265: 1, 565: 1, 480: 1, 380: 1, 181: 1, 645: 1, 99: 1, 507: 1, 553: 1, 630: 1, 590: 1, 320: 1, 441: 1, 399: 1, 227: 1, 248: 1, 194: 1, 269: 1, 282: 1, 549: 1, 417: 1, 362: 1, 385: 1, 433: 1, 440: 1, 571: 1, 559: 1, 564: 1, 468: 1, 491: 1, 221: 1, 527: 1, 313: 1, 174: 1, 211: 1, 439: 1, 177: 1, 294: 1, 235: 1, 426: 1, 482: 1, 523: 1, 243: 1, 488: 1, 543: 1, 418: 1, 369: 1, 117: 1, 293: 1, 643: 1, 258: 1, 626: 1, 275: 1, 148: 1, 254: 1, 384: 1, 460: 1, 191: 1, 557: 1, 506: 1, 592: 1, 615: 1, 425: 1, 260: 1, 457: 1, 318: 1, 404: 1, 484: 1, 310: 1, 450: 1, 389: 1, 154: 1, 302: 1, 563: 1, 110: 1, 300: 1, 388: 1, 483: 1, 529: 1}), *** len(Counter(labels_)): 658
sigma: 369.0546543947471
random_state: 42
Finished getting the projection matrix
Projected data
kjl on train set took 0.024162 seconds
Projecting test data
kjl on test set took 0.00247 seconds
self.sigma: 369.0546543947471, q=0.3
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 36, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.561323 seconds
Total train time: 20.462009000000002 <= std_train_time: 0, seek_train_time: 19.876524, proj_train_time: 0.024162, model_train_time: 0.561323
'decision_function()' starts at 2020-12-31 19:24:24
'decision_function()' ends at 2020-12-31 19:24:24. It takes 0.0 mins
Test model takes 0.000825 seconds
APC: 0.9168202750463799
AUC: 0.8837555555555556
Total test time: 0.003295 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.00247, model_test_time: 0.000825
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
meanshift_training, it took 20.085374 seconds
--all clusters (658) when (bandwidth:369.0546543947471, 369.0546543947471). However, only 36 clusters have at least 10 datapoints. Counter(labels_): Counter({0: 3027, 37: 122, 601: 100, 1: 91, 438: 84, 502: 71, 208: 55, 2: 46, 4: 44, 352: 39, 501: 34, 3: 33, 169: 29, 599: 26, 548: 25, 155: 23, 5: 20, 7: 18, 9: 18, 94: 18, 24: 17, 49: 17, 343: 16, 85: 15, 6: 15, 83: 14, 118: 14, 26: 14, 8: 14, 28: 13, 36: 12, 30: 12, 11: 12, 629: 10, 10: 10, 12: 10, 14: 9, 27: 8, 13: 8, 427: 8, 159: 8, 15: 7, 33: 7, 16: 7, 20: 7, 89: 7, 17: 7, 19: 6, 18: 6, 406: 6, 627: 6, 56: 5, 22: 5, 21: 5, 29: 5, 25: 5, 23: 5, 48: 4, 54: 4, 32: 4, 41: 4, 62: 4, 35: 4, 34: 4, 38: 4, 31: 4, 156: 3, 53: 3, 550: 3, 45: 3, 55: 3, 513: 3, 42: 3, 43: 3, 47: 3, 648: 3, 52: 3, 58: 3, 46: 3, 594: 3, 68: 3, 44: 3, 187: 3, 236: 3, 39: 3, 57: 3, 90: 3, 93: 3, 40: 3, 376: 3, 51: 3, 50: 3, 82: 3, 653: 2, 64: 2, 411: 2, 70: 2, 602: 2, 212: 2, 66: 2, 59: 2, 432: 2, 63: 2, 87: 2, 263: 2, 80: 2, 73: 2, 277: 2, 91: 2, 77: 2, 60: 2, 561: 2, 75: 2, 78: 2, 84: 2, 74: 2, 65: 2, 79: 2, 596: 2, 458: 2, 290: 2, 69: 2, 86: 2, 547: 2, 390: 2, 61: 2, 145: 2, 76: 2, 72: 2, 71: 2, 635: 2, 445: 2, 88: 2, 67: 2, 81: 2, 92: 2, 253: 1, 577: 1, 539: 1, 219: 1, 401: 1, 647: 1, 496: 1, 322: 1, 518: 1, 423: 1, 604: 1, 567: 1, 490: 1, 162: 1, 638: 1, 330: 1, 510: 1, 314: 1, 186: 1, 361: 1, 486: 1, 173: 1, 140: 1, 232: 1, 270: 1, 479: 1, 371: 1, 365: 1, 593: 1, 655: 1, 552: 1, 580: 1, 276: 1, 203: 1, 307: 1, 179: 1, 603: 1, 368: 1, 101: 1, 214: 1, 136: 1, 576: 1, 98: 1, 328: 1, 478: 1, 201: 1, 312: 1, 96: 1, 137: 1, 534: 1, 285: 1, 340: 1, 610: 1, 301: 1, 646: 1, 536: 1, 100: 1, 556: 1, 605: 1, 448: 1, 332: 1, 158: 1, 245: 1, 121: 1, 126: 1, 656: 1, 231: 1, 436: 1, 198: 1, 133: 1, 364: 1, 524: 1, 267: 1, 125: 1, 222: 1, 569: 1, 344: 1, 554: 1, 316: 1, 113: 1, 454: 1, 455: 1, 466: 1, 284: 1, 119: 1, 296: 1, 573: 1, 354: 1, 171: 1, 497: 1, 639: 1, 305: 1, 252: 1, 217: 1, 589: 1, 102: 1, 120: 1, 591: 1, 190: 1, 581: 1, 551: 1, 574: 1, 138: 1, 279: 1, 416: 1, 308: 1, 519: 1, 588: 1, 467: 1, 184: 1, 298: 1, 338: 1, 462: 1, 409: 1, 237: 1, 104: 1, 394: 1, 259: 1, 595: 1, 202: 1, 397: 1, 333: 1, 650: 1, 377: 1, 295: 1, 272: 1, 393: 1, 353: 1, 465: 1, 246: 1, 166: 1, 359: 1, 274: 1, 413: 1, 494: 1, 363: 1, 544: 1, 412: 1, 341: 1, 386: 1, 223: 1, 530: 1, 431: 1, 428: 1, 621: 1, 560: 1, 472: 1, 122: 1, 487: 1, 606: 1, 348: 1, 651: 1, 495: 1, 129: 1, 183: 1, 435: 1, 434: 1, 329: 1, 623: 1, 189: 1, 114: 1, 131: 1, 150: 1, 281: 1, 512: 1, 153: 1, 256: 1, 139: 1, 124: 1, 636: 1, 146: 1, 500: 1, 652: 1, 175: 1, 562: 1, 165: 1, 582: 1, 213: 1, 188: 1, 515: 1, 374: 1, 474: 1, 373: 1, 134: 1, 327: 1, 172: 1, 383: 1, 112: 1, 657: 1, 463: 1, 613: 1, 144: 1, 598: 1, 461: 1, 584: 1, 392: 1, 216: 1, 273: 1, 319: 1, 622: 1, 395: 1, 538: 1, 586: 1, 370: 1, 193: 1, 378: 1, 111: 1, 233: 1, 609: 1, 337: 1, 572: 1, 403: 1, 402: 1, 614: 1, 372: 1, 414: 1, 261: 1, 334: 1, 641: 1, 331: 1, 444: 1, 289: 1, 349: 1, 242: 1, 471: 1, 619: 1, 442: 1, 575: 1, 585: 1, 632: 1, 381: 1, 292: 1, 170: 1, 197: 1, 255: 1, 499: 1, 325: 1, 509: 1, 644: 1, 108: 1, 469: 1, 505: 1, 299: 1, 346: 1, 470: 1, 207: 1, 493: 1, 607: 1, 537: 1, 152: 1, 97: 1, 196: 1, 600: 1, 339: 1, 625: 1, 116: 1, 220: 1, 464: 1, 182: 1, 624: 1, 107: 1, 533: 1, 456: 1, 407: 1, 587: 1, 634: 1, 391: 1, 278: 1, 531: 1, 351: 1, 127: 1, 481: 1, 452: 1, 526: 1, 283: 1, 415: 1, 176: 1, 498: 1, 142: 1, 477: 1, 379: 1, 164: 1, 350: 1, 288: 1, 244: 1, 447: 1, 149: 1, 180: 1, 504: 1, 185: 1, 387: 1, 597: 1, 291: 1, 642: 1, 405: 1, 143: 1, 297: 1, 238: 1, 132: 1, 141: 1, 286: 1, 287: 1, 508: 1, 578: 1, 608: 1, 451: 1, 266: 1, 449: 1, 408: 1, 400: 1, 249: 1, 228: 1, 345: 1, 168: 1, 375: 1, 157: 1, 128: 1, 324: 1, 521: 1, 262: 1, 520: 1, 167: 1, 210: 1, 396: 1, 476: 1, 503: 1, 583: 1, 105: 1, 410: 1, 229: 1, 326: 1, 618: 1, 106: 1, 218: 1, 437: 1, 631: 1, 151: 1, 115: 1, 522: 1, 315: 1, 161: 1, 616: 1, 271: 1, 446: 1, 130: 1, 163: 1, 178: 1, 109: 1, 311: 1, 422: 1, 514: 1, 535: 1, 620: 1, 398: 1, 555: 1, 453: 1, 358: 1, 367: 1, 633: 1, 360: 1, 147: 1, 342: 1, 264: 1, 528: 1, 568: 1, 239: 1, 205: 1, 192: 1, 199: 1, 517: 1, 654: 1, 95: 1, 225: 1, 532: 1, 250: 1, 209: 1, 226: 1, 240: 1, 558: 1, 541: 1, 366: 1, 251: 1, 473: 1, 306: 1, 200: 1, 382: 1, 540: 1, 570: 1, 347: 1, 247: 1, 545: 1, 280: 1, 336: 1, 204: 1, 268: 1, 355: 1, 475: 1, 430: 1, 525: 1, 230: 1, 241: 1, 579: 1, 516: 1, 321: 1, 617: 1, 195: 1, 424: 1, 419: 1, 485: 1, 649: 1, 309: 1, 542: 1, 459: 1, 103: 1, 611: 1, 489: 1, 356: 1, 443: 1, 357: 1, 257: 1, 511: 1, 160: 1, 224: 1, 421: 1, 234: 1, 304: 1, 335: 1, 323: 1, 546: 1, 215: 1, 303: 1, 135: 1, 566: 1, 628: 1, 420: 1, 637: 1, 612: 1, 429: 1, 317: 1, 492: 1, 123: 1, 640: 1, 206: 1, 265: 1, 565: 1, 480: 1, 380: 1, 181: 1, 645: 1, 99: 1, 507: 1, 553: 1, 630: 1, 590: 1, 320: 1, 441: 1, 399: 1, 227: 1, 248: 1, 194: 1, 269: 1, 282: 1, 549: 1, 417: 1, 362: 1, 385: 1, 433: 1, 440: 1, 571: 1, 559: 1, 564: 1, 468: 1, 491: 1, 221: 1, 527: 1, 313: 1, 174: 1, 211: 1, 439: 1, 177: 1, 294: 1, 235: 1, 426: 1, 482: 1, 523: 1, 243: 1, 488: 1, 543: 1, 418: 1, 369: 1, 117: 1, 293: 1, 643: 1, 258: 1, 626: 1, 275: 1, 148: 1, 254: 1, 384: 1, 460: 1, 191: 1, 557: 1, 506: 1, 592: 1, 615: 1, 425: 1, 260: 1, 457: 1, 318: 1, 404: 1, 484: 1, 310: 1, 450: 1, 389: 1, 154: 1, 302: 1, 563: 1, 110: 1, 300: 1, 388: 1, 483: 1, 529: 1}), *** len(Counter(labels_)): 658
sigma: 369.0546543947471
random_state: 42
Finished getting the projection matrix
Projected data
kjl on train set took 0.047806 seconds
Projecting test data
kjl on test set took 0.002983 seconds
self.sigma: 369.0546543947471, q=0.3
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 36, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.815927 seconds
Total train time: 20.949107 <= std_train_time: 0, seek_train_time: 20.085374, proj_train_time: 0.047806, model_train_time: 0.815927
'decision_function()' starts at 2020-12-31 19:24:46
'decision_function()' ends at 2020-12-31 19:24:46. It takes 0.0 mins
Test model takes 0.001323 seconds
APC: 0.9168202750463799
AUC: 0.8837555555555556
Total test time: 0.004306 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.002983, model_test_time: 0.001323
'get_best_results()' ends at 2020-12-31 19:24:46. It takes 0.7379 mins


===2/5(n_repeats): {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': True, 'is_nystrom': False, 'is_quickshift': False, 'is_meanshift': True, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [], 'kjl_qs': [0.3], 'kjl_ns': [100], 'kjl_ds': [5], 'meanshift_qs': []}===
train: Counter({0: 5000}), val: Counter({0: 53, 1: 53})
'get_best_results()' starts at 2020-12-31 19:24:46
--is_gs: False, X_val == X_test
X_train.shape: (5000, 47), y_train: Counter({0: 5000})
X_val.shape: (600, 47), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 47), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:   22.3s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:   22.3s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
meanshift_training, it took 19.247903 seconds
--all clusters (633) when (bandwidth:371.4337919364775, 371.4337919364775). However, only 30 clusters have at least 10 datapoints. Counter(labels_): Counter({0: 2925, 1: 329, 606: 134, 2: 84, 615: 79, 339: 52, 3: 51, 4: 46, 8: 44, 578: 42, 98: 40, 11: 32, 5: 31, 6: 30, 16: 27, 7: 20, 10: 18, 9: 18, 25: 17, 12: 16, 80: 14, 13: 13, 34: 13, 14: 12, 22: 12, 19: 12, 41: 11, 334: 11, 49: 11, 17: 10, 18: 9, 391: 9, 39: 9, 28: 8, 20: 8, 210: 8, 21: 8, 461: 7, 70: 7, 15: 7, 24: 7, 23: 7, 31: 7, 30: 6, 27: 6, 32: 6, 26: 6, 599: 5, 46: 5, 29: 5, 36: 5, 35: 5, 33: 5, 40: 5, 37: 5, 331: 4, 200: 4, 38: 4, 266: 4, 529: 4, 533: 4, 418: 3, 513: 3, 324: 3, 47: 3, 45: 3, 165: 3, 42: 3, 43: 3, 336: 3, 73: 3, 568: 3, 156: 3, 151: 3, 325: 3, 575: 3, 44: 3, 50: 3, 48: 3, 247: 3, 82: 2, 72: 2, 84: 2, 107: 2, 85: 2, 198: 2, 60: 2, 360: 2, 77: 2, 389: 2, 58: 2, 76: 2, 343: 2, 56: 2, 63: 2, 68: 2, 392: 2, 66: 2, 592: 2, 79: 2, 67: 2, 71: 2, 52: 2, 61: 2, 502: 2, 53: 2, 74: 2, 59: 2, 554: 2, 57: 2, 62: 2, 86: 2, 81: 2, 526: 2, 65: 2, 54: 2, 83: 2, 69: 2, 51: 2, 452: 2, 64: 2, 78: 2, 75: 2, 55: 2, 572: 2, 87: 2, 434: 2, 129: 1, 409: 1, 421: 1, 618: 1, 565: 1, 319: 1, 100: 1, 351: 1, 246: 1, 378: 1, 485: 1, 231: 1, 530: 1, 332: 1, 525: 1, 147: 1, 581: 1, 138: 1, 505: 1, 507: 1, 552: 1, 433: 1, 551: 1, 487: 1, 561: 1, 144: 1, 89: 1, 148: 1, 346: 1, 617: 1, 495: 1, 524: 1, 480: 1, 437: 1, 303: 1, 137: 1, 573: 1, 411: 1, 95: 1, 158: 1, 607: 1, 344: 1, 490: 1, 368: 1, 152: 1, 531: 1, 105: 1, 333: 1, 380: 1, 373: 1, 291: 1, 516: 1, 288: 1, 153: 1, 237: 1, 424: 1, 493: 1, 92: 1, 574: 1, 109: 1, 358: 1, 381: 1, 318: 1, 335: 1, 550: 1, 202: 1, 256: 1, 604: 1, 350: 1, 253: 1, 192: 1, 620: 1, 345: 1, 503: 1, 224: 1, 353: 1, 268: 1, 625: 1, 462: 1, 447: 1, 180: 1, 125: 1, 442: 1, 265: 1, 548: 1, 201: 1, 91: 1, 514: 1, 135: 1, 443: 1, 329: 1, 374: 1, 357: 1, 177: 1, 588: 1, 426: 1, 580: 1, 482: 1, 553: 1, 467: 1, 579: 1, 317: 1, 567: 1, 355: 1, 506: 1, 456: 1, 560: 1, 241: 1, 297: 1, 509: 1, 517: 1, 229: 1, 453: 1, 432: 1, 259: 1, 371: 1, 610: 1, 178: 1, 632: 1, 250: 1, 377: 1, 227: 1, 431: 1, 394: 1, 326: 1, 97: 1, 183: 1, 242: 1, 121: 1, 270: 1, 458: 1, 285: 1, 161: 1, 223: 1, 512: 1, 605: 1, 130: 1, 240: 1, 624: 1, 402: 1, 404: 1, 539: 1, 349: 1, 613: 1, 428: 1, 383: 1, 132: 1, 569: 1, 128: 1, 379: 1, 369: 1, 234: 1, 510: 1, 352: 1, 608: 1, 243: 1, 470: 1, 255: 1, 287: 1, 175: 1, 435: 1, 382: 1, 218: 1, 405: 1, 140: 1, 289: 1, 286: 1, 489: 1, 207: 1, 322: 1, 471: 1, 478: 1, 182: 1, 602: 1, 149: 1, 290: 1, 157: 1, 193: 1, 139: 1, 245: 1, 264: 1, 215: 1, 327: 1, 537: 1, 316: 1, 277: 1, 628: 1, 293: 1, 133: 1, 254: 1, 611: 1, 523: 1, 459: 1, 449: 1, 283: 1, 499: 1, 236: 1, 400: 1, 398: 1, 340: 1, 209: 1, 475: 1, 299: 1, 269: 1, 488: 1, 483: 1, 616: 1, 117: 1, 143: 1, 559: 1, 154: 1, 275: 1, 626: 1, 546: 1, 491: 1, 134: 1, 494: 1, 584: 1, 593: 1, 444: 1, 186: 1, 88: 1, 228: 1, 564: 1, 372: 1, 587: 1, 366: 1, 159: 1, 263: 1, 476: 1, 194: 1, 403: 1, 113: 1, 595: 1, 222: 1, 188: 1, 239: 1, 436: 1, 422: 1, 468: 1, 230: 1, 612: 1, 464: 1, 542: 1, 276: 1, 225: 1, 538: 1, 90: 1, 205: 1, 150: 1, 274: 1, 445: 1, 532: 1, 500: 1, 594: 1, 249: 1, 629: 1, 99: 1, 590: 1, 214: 1, 279: 1, 235: 1, 280: 1, 145: 1, 212: 1, 323: 1, 176: 1, 417: 1, 460: 1, 481: 1, 296: 1, 305: 1, 473: 1, 258: 1, 557: 1, 414: 1, 365: 1, 423: 1, 527: 1, 184: 1, 425: 1, 446: 1, 298: 1, 496: 1, 294: 1, 596: 1, 106: 1, 314: 1, 492: 1, 126: 1, 384: 1, 271: 1, 511: 1, 190: 1, 497: 1, 295: 1, 171: 1, 430: 1, 204: 1, 141: 1, 306: 1, 342: 1, 94: 1, 168: 1, 278: 1, 455: 1, 217: 1, 536: 1, 545: 1, 191: 1, 627: 1, 337: 1, 96: 1, 302: 1, 108: 1, 463: 1, 120: 1, 571: 1, 284: 1, 609: 1, 562: 1, 315: 1, 102: 1, 251: 1, 103: 1, 586: 1, 370: 1, 338: 1, 216: 1, 535: 1, 393: 1, 544: 1, 359: 1, 630: 1, 469: 1, 518: 1, 189: 1, 451: 1, 124: 1, 419: 1, 501: 1, 597: 1, 208: 1, 399: 1, 127: 1, 155: 1, 101: 1, 238: 1, 104: 1, 598: 1, 131: 1, 413: 1, 261: 1, 465: 1, 248: 1, 199: 1, 111: 1, 292: 1, 123: 1, 146: 1, 312: 1, 169: 1, 367: 1, 441: 1, 347: 1, 454: 1, 267: 1, 388: 1, 540: 1, 330: 1, 142: 1, 348: 1, 301: 1, 300: 1, 197: 1, 257: 1, 450: 1, 412: 1, 543: 1, 395: 1, 179: 1, 226: 1, 407: 1, 563: 1, 585: 1, 484: 1, 220: 1, 498: 1, 386: 1, 356: 1, 211: 1, 603: 1, 163: 1, 448: 1, 310: 1, 622: 1, 631: 1, 185: 1, 576: 1, 438: 1, 547: 1, 619: 1, 196: 1, 477: 1, 260: 1, 515: 1, 558: 1, 541: 1, 354: 1, 164: 1, 118: 1, 623: 1, 341: 1, 219: 1, 252: 1, 172: 1, 401: 1, 429: 1, 583: 1, 521: 1, 427: 1, 309: 1, 307: 1, 396: 1, 110: 1, 187: 1, 136: 1, 439: 1, 364: 1, 262: 1, 272: 1, 375: 1, 273: 1, 320: 1, 321: 1, 479: 1, 362: 1, 406: 1, 233: 1, 112: 1, 173: 1, 472: 1, 408: 1, 416: 1, 385: 1, 162: 1, 474: 1, 397: 1, 363: 1, 116: 1, 281: 1, 93: 1, 166: 1, 520: 1, 600: 1, 466: 1, 577: 1, 387: 1, 282: 1, 361: 1, 534: 1, 308: 1, 390: 1, 566: 1, 328: 1, 311: 1, 601: 1, 232: 1, 167: 1, 304: 1, 170: 1, 410: 1, 119: 1, 213: 1, 457: 1, 195: 1, 614: 1, 114: 1, 415: 1, 206: 1, 508: 1, 556: 1, 313: 1, 376: 1, 486: 1, 570: 1, 504: 1, 174: 1, 115: 1, 440: 1, 203: 1, 555: 1, 244: 1, 420: 1, 591: 1, 519: 1, 122: 1, 181: 1, 522: 1, 549: 1, 160: 1, 621: 1, 528: 1, 582: 1, 589: 1, 221: 1}), *** len(Counter(labels_)): 633
sigma: 371.4337919364775
random_state: 42
Finished getting the projection matrix
Projected data
kjl on train set took 0.024149 seconds
Projecting test data
kjl on test set took 0.00254 seconds
self.sigma: 371.4337919364775, q=0.3
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 30, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.214296 seconds
Total train time: 19.486348000000003 <= std_train_time: 0, seek_train_time: 19.247903, proj_train_time: 0.024149, model_train_time: 0.214296
'decision_function()' starts at 2020-12-31 19:25:08
'decision_function()' ends at 2020-12-31 19:25:08. It takes 0.0 mins
Test model takes 0.000754 seconds
APC: 0.9056168745386504
AUC: 0.9010222222222222
Total test time: 0.003294 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.00254, model_test_time: 0.000754
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
meanshift_training, it took 19.493329 seconds
--all clusters (633) when (bandwidth:371.4337919364775, 371.4337919364775). However, only 30 clusters have at least 10 datapoints. Counter(labels_): Counter({0: 2925, 1: 329, 606: 134, 2: 84, 615: 79, 339: 52, 3: 51, 4: 46, 8: 44, 578: 42, 98: 40, 11: 32, 5: 31, 6: 30, 16: 27, 7: 20, 10: 18, 9: 18, 25: 17, 12: 16, 80: 14, 13: 13, 34: 13, 14: 12, 22: 12, 19: 12, 41: 11, 334: 11, 49: 11, 17: 10, 18: 9, 391: 9, 39: 9, 28: 8, 20: 8, 210: 8, 21: 8, 461: 7, 70: 7, 15: 7, 24: 7, 23: 7, 31: 7, 30: 6, 27: 6, 32: 6, 26: 6, 599: 5, 46: 5, 29: 5, 36: 5, 35: 5, 33: 5, 40: 5, 37: 5, 331: 4, 200: 4, 38: 4, 266: 4, 529: 4, 533: 4, 418: 3, 513: 3, 324: 3, 47: 3, 45: 3, 165: 3, 42: 3, 43: 3, 336: 3, 73: 3, 568: 3, 156: 3, 151: 3, 325: 3, 575: 3, 44: 3, 50: 3, 48: 3, 247: 3, 82: 2, 72: 2, 84: 2, 107: 2, 85: 2, 198: 2, 60: 2, 360: 2, 77: 2, 389: 2, 58: 2, 76: 2, 343: 2, 56: 2, 63: 2, 68: 2, 392: 2, 66: 2, 592: 2, 79: 2, 67: 2, 71: 2, 52: 2, 61: 2, 502: 2, 53: 2, 74: 2, 59: 2, 554: 2, 57: 2, 62: 2, 86: 2, 81: 2, 526: 2, 65: 2, 54: 2, 83: 2, 69: 2, 51: 2, 452: 2, 64: 2, 78: 2, 75: 2, 55: 2, 572: 2, 87: 2, 434: 2, 129: 1, 409: 1, 421: 1, 618: 1, 565: 1, 319: 1, 100: 1, 351: 1, 246: 1, 378: 1, 485: 1, 231: 1, 530: 1, 332: 1, 525: 1, 147: 1, 581: 1, 138: 1, 505: 1, 507: 1, 552: 1, 433: 1, 551: 1, 487: 1, 561: 1, 144: 1, 89: 1, 148: 1, 346: 1, 617: 1, 495: 1, 524: 1, 480: 1, 437: 1, 303: 1, 137: 1, 573: 1, 411: 1, 95: 1, 158: 1, 607: 1, 344: 1, 490: 1, 368: 1, 152: 1, 531: 1, 105: 1, 333: 1, 380: 1, 373: 1, 291: 1, 516: 1, 288: 1, 153: 1, 237: 1, 424: 1, 493: 1, 92: 1, 574: 1, 109: 1, 358: 1, 381: 1, 318: 1, 335: 1, 550: 1, 202: 1, 256: 1, 604: 1, 350: 1, 253: 1, 192: 1, 620: 1, 345: 1, 503: 1, 224: 1, 353: 1, 268: 1, 625: 1, 462: 1, 447: 1, 180: 1, 125: 1, 442: 1, 265: 1, 548: 1, 201: 1, 91: 1, 514: 1, 135: 1, 443: 1, 329: 1, 374: 1, 357: 1, 177: 1, 588: 1, 426: 1, 580: 1, 482: 1, 553: 1, 467: 1, 579: 1, 317: 1, 567: 1, 355: 1, 506: 1, 456: 1, 560: 1, 241: 1, 297: 1, 509: 1, 517: 1, 229: 1, 453: 1, 432: 1, 259: 1, 371: 1, 610: 1, 178: 1, 632: 1, 250: 1, 377: 1, 227: 1, 431: 1, 394: 1, 326: 1, 97: 1, 183: 1, 242: 1, 121: 1, 270: 1, 458: 1, 285: 1, 161: 1, 223: 1, 512: 1, 605: 1, 130: 1, 240: 1, 624: 1, 402: 1, 404: 1, 539: 1, 349: 1, 613: 1, 428: 1, 383: 1, 132: 1, 569: 1, 128: 1, 379: 1, 369: 1, 234: 1, 510: 1, 352: 1, 608: 1, 243: 1, 470: 1, 255: 1, 287: 1, 175: 1, 435: 1, 382: 1, 218: 1, 405: 1, 140: 1, 289: 1, 286: 1, 489: 1, 207: 1, 322: 1, 471: 1, 478: 1, 182: 1, 602: 1, 149: 1, 290: 1, 157: 1, 193: 1, 139: 1, 245: 1, 264: 1, 215: 1, 327: 1, 537: 1, 316: 1, 277: 1, 628: 1, 293: 1, 133: 1, 254: 1, 611: 1, 523: 1, 459: 1, 449: 1, 283: 1, 499: 1, 236: 1, 400: 1, 398: 1, 340: 1, 209: 1, 475: 1, 299: 1, 269: 1, 488: 1, 483: 1, 616: 1, 117: 1, 143: 1, 559: 1, 154: 1, 275: 1, 626: 1, 546: 1, 491: 1, 134: 1, 494: 1, 584: 1, 593: 1, 444: 1, 186: 1, 88: 1, 228: 1, 564: 1, 372: 1, 587: 1, 366: 1, 159: 1, 263: 1, 476: 1, 194: 1, 403: 1, 113: 1, 595: 1, 222: 1, 188: 1, 239: 1, 436: 1, 422: 1, 468: 1, 230: 1, 612: 1, 464: 1, 542: 1, 276: 1, 225: 1, 538: 1, 90: 1, 205: 1, 150: 1, 274: 1, 445: 1, 532: 1, 500: 1, 594: 1, 249: 1, 629: 1, 99: 1, 590: 1, 214: 1, 279: 1, 235: 1, 280: 1, 145: 1, 212: 1, 323: 1, 176: 1, 417: 1, 460: 1, 481: 1, 296: 1, 305: 1, 473: 1, 258: 1, 557: 1, 414: 1, 365: 1, 423: 1, 527: 1, 184: 1, 425: 1, 446: 1, 298: 1, 496: 1, 294: 1, 596: 1, 106: 1, 314: 1, 492: 1, 126: 1, 384: 1, 271: 1, 511: 1, 190: 1, 497: 1, 295: 1, 171: 1, 430: 1, 204: 1, 141: 1, 306: 1, 342: 1, 94: 1, 168: 1, 278: 1, 455: 1, 217: 1, 536: 1, 545: 1, 191: 1, 627: 1, 337: 1, 96: 1, 302: 1, 108: 1, 463: 1, 120: 1, 571: 1, 284: 1, 609: 1, 562: 1, 315: 1, 102: 1, 251: 1, 103: 1, 586: 1, 370: 1, 338: 1, 216: 1, 535: 1, 393: 1, 544: 1, 359: 1, 630: 1, 469: 1, 518: 1, 189: 1, 451: 1, 124: 1, 419: 1, 501: 1, 597: 1, 208: 1, 399: 1, 127: 1, 155: 1, 101: 1, 238: 1, 104: 1, 598: 1, 131: 1, 413: 1, 261: 1, 465: 1, 248: 1, 199: 1, 111: 1, 292: 1, 123: 1, 146: 1, 312: 1, 169: 1, 367: 1, 441: 1, 347: 1, 454: 1, 267: 1, 388: 1, 540: 1, 330: 1, 142: 1, 348: 1, 301: 1, 300: 1, 197: 1, 257: 1, 450: 1, 412: 1, 543: 1, 395: 1, 179: 1, 226: 1, 407: 1, 563: 1, 585: 1, 484: 1, 220: 1, 498: 1, 386: 1, 356: 1, 211: 1, 603: 1, 163: 1, 448: 1, 310: 1, 622: 1, 631: 1, 185: 1, 576: 1, 438: 1, 547: 1, 619: 1, 196: 1, 477: 1, 260: 1, 515: 1, 558: 1, 541: 1, 354: 1, 164: 1, 118: 1, 623: 1, 341: 1, 219: 1, 252: 1, 172: 1, 401: 1, 429: 1, 583: 1, 521: 1, 427: 1, 309: 1, 307: 1, 396: 1, 110: 1, 187: 1, 136: 1, 439: 1, 364: 1, 262: 1, 272: 1, 375: 1, 273: 1, 320: 1, 321: 1, 479: 1, 362: 1, 406: 1, 233: 1, 112: 1, 173: 1, 472: 1, 408: 1, 416: 1, 385: 1, 162: 1, 474: 1, 397: 1, 363: 1, 116: 1, 281: 1, 93: 1, 166: 1, 520: 1, 600: 1, 466: 1, 577: 1, 387: 1, 282: 1, 361: 1, 534: 1, 308: 1, 390: 1, 566: 1, 328: 1, 311: 1, 601: 1, 232: 1, 167: 1, 304: 1, 170: 1, 410: 1, 119: 1, 213: 1, 457: 1, 195: 1, 614: 1, 114: 1, 415: 1, 206: 1, 508: 1, 556: 1, 313: 1, 376: 1, 486: 1, 570: 1, 504: 1, 174: 1, 115: 1, 440: 1, 203: 1, 555: 1, 244: 1, 420: 1, 591: 1, 519: 1, 122: 1, 181: 1, 522: 1, 549: 1, 160: 1, 621: 1, 528: 1, 582: 1, 589: 1, 221: 1}), *** len(Counter(labels_)): 633
sigma: 371.4337919364775
random_state: 42
Finished getting the projection matrix
Projected data
kjl on train set took 0.032637 seconds
Projecting test data
kjl on test set took 0.003066 seconds
self.sigma: 371.4337919364775, q=0.3
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 30, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.304969 seconds
Total train time: 19.830935 <= std_train_time: 0, seek_train_time: 19.493329, proj_train_time: 0.032637, model_train_time: 0.304969
'decision_function()' starts at 2020-12-31 19:25:28
'decision_function()' ends at 2020-12-31 19:25:28. It takes 0.0 mins
Test model takes 0.001197 seconds
APC: 0.9056168745386504
AUC: 0.9010222222222222
Total test time: 0.004263 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.003066, model_test_time: 0.001197
'get_best_results()' ends at 2020-12-31 19:25:28. It takes 0.703 mins


===3/5(n_repeats): {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': True, 'is_nystrom': False, 'is_quickshift': False, 'is_meanshift': True, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [], 'kjl_qs': [0.3], 'kjl_ns': [100], 'kjl_ds': [5], 'meanshift_qs': []}===
train: Counter({0: 5000}), val: Counter({0: 53, 1: 53})
'get_best_results()' starts at 2020-12-31 19:25:28
--is_gs: False, X_val == X_test
X_train.shape: (5000, 47), y_train: Counter({0: 5000})
X_val.shape: (600, 47), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 47), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:   21.4s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:   21.4s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
meanshift_training, it took 18.216408 seconds
--all clusters (676) when (bandwidth:364.0377272717949, 364.0377272717949). However, only 32 clusters have at least 10 datapoints. Counter(labels_): Counter({0: 3009, 9: 126, 1: 101, 95: 75, 29: 73, 37: 66, 394: 58, 2: 56, 620: 44, 171: 42, 578: 35, 3: 35, 50: 31, 501: 29, 16: 27, 28: 24, 5: 23, 7: 23, 137: 22, 15: 21, 4: 21, 184: 20, 6: 19, 8: 18, 424: 17, 13: 16, 115: 13, 38: 13, 10: 13, 11: 11, 670: 10, 12: 10, 27: 9, 44: 9, 519: 8, 614: 8, 26: 7, 19: 7, 14: 7, 399: 7, 20: 7, 17: 7, 18: 7, 23: 6, 474: 6, 24: 6, 25: 6, 22: 6, 21: 6, 52: 6, 571: 5, 140: 5, 80: 5, 30: 5, 49: 5, 450: 5, 36: 5, 667: 5, 645: 4, 32: 4, 31: 4, 33: 4, 34: 4, 35: 4, 54: 4, 39: 4, 465: 3, 88: 3, 56: 3, 43: 3, 317: 3, 446: 3, 48: 3, 53: 3, 40: 3, 51: 3, 353: 3, 42: 3, 45: 3, 55: 3, 47: 3, 93: 3, 516: 3, 200: 3, 46: 3, 526: 2, 160: 2, 61: 2, 484: 2, 70: 2, 524: 2, 72: 2, 60: 2, 63: 2, 618: 2, 246: 2, 57: 2, 59: 2, 64: 2, 73: 2, 92: 2, 613: 2, 619: 2, 203: 2, 416: 2, 375: 2, 76: 2, 81: 2, 362: 2, 84: 2, 79: 2, 66: 2, 86: 2, 177: 2, 65: 2, 77: 2, 82: 2, 69: 2, 71: 2, 90: 2, 668: 2, 85: 2, 87: 2, 74: 2, 67: 2, 68: 2, 98: 2, 94: 2, 62: 2, 97: 2, 58: 2, 373: 2, 96: 2, 75: 2, 201: 2, 78: 2, 89: 2, 83: 2, 91: 2, 588: 1, 576: 1, 290: 1, 593: 1, 499: 1, 404: 1, 377: 1, 429: 1, 634: 1, 617: 1, 204: 1, 487: 1, 503: 1, 660: 1, 675: 1, 514: 1, 644: 1, 151: 1, 538: 1, 368: 1, 247: 1, 611: 1, 102: 1, 441: 1, 241: 1, 608: 1, 590: 1, 328: 1, 547: 1, 309: 1, 149: 1, 527: 1, 327: 1, 466: 1, 471: 1, 563: 1, 528: 1, 230: 1, 379: 1, 397: 1, 235: 1, 286: 1, 120: 1, 116: 1, 554: 1, 306: 1, 596: 1, 209: 1, 435: 1, 256: 1, 205: 1, 546: 1, 659: 1, 419: 1, 152: 1, 312: 1, 119: 1, 502: 1, 156: 1, 273: 1, 372: 1, 193: 1, 455: 1, 405: 1, 320: 1, 426: 1, 99: 1, 584: 1, 586: 1, 198: 1, 630: 1, 575: 1, 409: 1, 520: 1, 302: 1, 469: 1, 240: 1, 490: 1, 100: 1, 642: 1, 223: 1, 390: 1, 271: 1, 197: 1, 515: 1, 482: 1, 291: 1, 267: 1, 139: 1, 583: 1, 401: 1, 489: 1, 467: 1, 370: 1, 627: 1, 360: 1, 541: 1, 672: 1, 389: 1, 213: 1, 462: 1, 143: 1, 521: 1, 371: 1, 447: 1, 443: 1, 191: 1, 326: 1, 628: 1, 439: 1, 301: 1, 211: 1, 523: 1, 172: 1, 125: 1, 577: 1, 168: 1, 186: 1, 316: 1, 651: 1, 625: 1, 485: 1, 498: 1, 549: 1, 508: 1, 674: 1, 560: 1, 292: 1, 543: 1, 421: 1, 568: 1, 155: 1, 512: 1, 289: 1, 569: 1, 195: 1, 179: 1, 606: 1, 655: 1, 255: 1, 178: 1, 319: 1, 107: 1, 221: 1, 159: 1, 354: 1, 169: 1, 144: 1, 277: 1, 260: 1, 132: 1, 182: 1, 170: 1, 249: 1, 210: 1, 658: 1, 574: 1, 648: 1, 638: 1, 352: 1, 323: 1, 534: 1, 612: 1, 626: 1, 382: 1, 635: 1, 579: 1, 110: 1, 483: 1, 335: 1, 332: 1, 154: 1, 118: 1, 600: 1, 253: 1, 488: 1, 281: 1, 437: 1, 101: 1, 145: 1, 331: 1, 423: 1, 564: 1, 585: 1, 592: 1, 192: 1, 461: 1, 556: 1, 237: 1, 212: 1, 282: 1, 138: 1, 113: 1, 365: 1, 208: 1, 196: 1, 275: 1, 544: 1, 245: 1, 641: 1, 133: 1, 624: 1, 279: 1, 380: 1, 346: 1, 333: 1, 493: 1, 341: 1, 513: 1, 127: 1, 251: 1, 194: 1, 298: 1, 185: 1, 570: 1, 337: 1, 258: 1, 449: 1, 188: 1, 364: 1, 664: 1, 631: 1, 329: 1, 228: 1, 269: 1, 643: 1, 121: 1, 218: 1, 427: 1, 262: 1, 236: 1, 124: 1, 595: 1, 199: 1, 452: 1, 150: 1, 529: 1, 248: 1, 270: 1, 183: 1, 663: 1, 135: 1, 647: 1, 412: 1, 215: 1, 639: 1, 542: 1, 265: 1, 481: 1, 448: 1, 403: 1, 433: 1, 295: 1, 511: 1, 557: 1, 250: 1, 338: 1, 324: 1, 475: 1, 442: 1, 378: 1, 285: 1, 222: 1, 597: 1, 122: 1, 355: 1, 477: 1, 402: 1, 294: 1, 432: 1, 350: 1, 616: 1, 562: 1, 451: 1, 252: 1, 158: 1, 348: 1, 308: 1, 553: 1, 605: 1, 406: 1, 322: 1, 657: 1, 376: 1, 243: 1, 545: 1, 444: 1, 216: 1, 470: 1, 602: 1, 366: 1, 495: 1, 225: 1, 385: 1, 609: 1, 599: 1, 472: 1, 591: 1, 581: 1, 548: 1, 214: 1, 491: 1, 315: 1, 187: 1, 540: 1, 500: 1, 264: 1, 536: 1, 367: 1, 431: 1, 283: 1, 296: 1, 238: 1, 276: 1, 652: 1, 407: 1, 363: 1, 105: 1, 287: 1, 459: 1, 629: 1, 537: 1, 492: 1, 343: 1, 531: 1, 386: 1, 280: 1, 413: 1, 532: 1, 175: 1, 227: 1, 391: 1, 615: 1, 457: 1, 621: 1, 357: 1, 361: 1, 456: 1, 522: 1, 601: 1, 259: 1, 359: 1, 582: 1, 669: 1, 358: 1, 242: 1, 189: 1, 395: 1, 598: 1, 174: 1, 311: 1, 387: 1, 517: 1, 603: 1, 479: 1, 374: 1, 525: 1, 410: 1, 414: 1, 535: 1, 314: 1, 224: 1, 396: 1, 411: 1, 434: 1, 486: 1, 263: 1, 356: 1, 551: 1, 671: 1, 165: 1, 518: 1, 383: 1, 164: 1, 351: 1, 244: 1, 559: 1, 257: 1, 550: 1, 103: 1, 303: 1, 181: 1, 345: 1, 460: 1, 438: 1, 425: 1, 445: 1, 190: 1, 131: 1, 153: 1, 148: 1, 106: 1, 507: 1, 339: 1, 142: 1, 673: 1, 325: 1, 226: 1, 436: 1, 430: 1, 473: 1, 239: 1, 229: 1, 453: 1, 463: 1, 344: 1, 146: 1, 504: 1, 510: 1, 313: 1, 400: 1, 565: 1, 458: 1, 167: 1, 41: 1, 440: 1, 162: 1, 157: 1, 398: 1, 478: 1, 505: 1, 623: 1, 231: 1, 299: 1, 497: 1, 108: 1, 636: 1, 161: 1, 310: 1, 217: 1, 587: 1, 384: 1, 336: 1, 202: 1, 539: 1, 622: 1, 662: 1, 418: 1, 454: 1, 254: 1, 408: 1, 297: 1, 129: 1, 112: 1, 650: 1, 304: 1, 496: 1, 321: 1, 207: 1, 334: 1, 468: 1, 388: 1, 300: 1, 284: 1, 420: 1, 665: 1, 589: 1, 166: 1, 349: 1, 637: 1, 114: 1, 555: 1, 415: 1, 653: 1, 111: 1, 417: 1, 305: 1, 656: 1, 640: 1, 180: 1, 274: 1, 340: 1, 610: 1, 136: 1, 558: 1, 480: 1, 219: 1, 293: 1, 232: 1, 661: 1, 130: 1, 654: 1, 464: 1, 147: 1, 318: 1, 288: 1, 234: 1, 206: 1, 633: 1, 566: 1, 506: 1, 509: 1, 533: 1, 369: 1, 422: 1, 278: 1, 104: 1, 572: 1, 607: 1, 220: 1, 530: 1, 268: 1, 330: 1, 123: 1, 476: 1, 176: 1, 567: 1, 649: 1, 604: 1, 594: 1, 128: 1, 272: 1, 381: 1, 646: 1, 342: 1, 666: 1, 573: 1, 307: 1, 233: 1, 632: 1, 393: 1, 266: 1, 428: 1, 347: 1, 552: 1, 561: 1, 494: 1, 134: 1, 109: 1, 580: 1, 117: 1, 126: 1, 163: 1, 261: 1, 173: 1, 392: 1, 141: 1}), *** len(Counter(labels_)): 676
sigma: 364.0377272717949
random_state: 42
Finished getting the projection matrix
Projected data
kjl on train set took 0.023871 seconds
Projecting test data
kjl on test set took 0.002484 seconds
self.sigma: 364.0377272717949, q=0.3
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 32, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.457811 seconds
Total train time: 18.69809 <= std_train_time: 0, seek_train_time: 18.216408, proj_train_time: 0.023871, model_train_time: 0.457811
'decision_function()' starts at 2020-12-31 19:25:49
'decision_function()' ends at 2020-12-31 19:25:49. It takes 0.0 mins
Test model takes 0.000762 seconds
APC: 0.9039442378702773
AUC: 0.871261111111111
Total test time: 0.003246 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.002484, model_test_time: 0.000762
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
meanshift_training, it took 18.551037 seconds
--all clusters (676) when (bandwidth:364.0377272717949, 364.0377272717949). However, only 32 clusters have at least 10 datapoints. Counter(labels_): Counter({0: 3009, 9: 126, 1: 101, 95: 75, 29: 73, 37: 66, 394: 58, 2: 56, 620: 44, 171: 42, 578: 35, 3: 35, 50: 31, 501: 29, 16: 27, 28: 24, 5: 23, 7: 23, 137: 22, 15: 21, 4: 21, 184: 20, 6: 19, 8: 18, 424: 17, 13: 16, 115: 13, 38: 13, 10: 13, 11: 11, 670: 10, 12: 10, 27: 9, 44: 9, 519: 8, 614: 8, 26: 7, 19: 7, 14: 7, 399: 7, 20: 7, 17: 7, 18: 7, 23: 6, 474: 6, 24: 6, 25: 6, 22: 6, 21: 6, 52: 6, 571: 5, 140: 5, 80: 5, 30: 5, 49: 5, 450: 5, 36: 5, 667: 5, 645: 4, 32: 4, 31: 4, 33: 4, 34: 4, 35: 4, 54: 4, 39: 4, 465: 3, 88: 3, 56: 3, 43: 3, 317: 3, 446: 3, 48: 3, 53: 3, 40: 3, 51: 3, 353: 3, 42: 3, 45: 3, 55: 3, 47: 3, 93: 3, 516: 3, 200: 3, 46: 3, 526: 2, 160: 2, 61: 2, 484: 2, 70: 2, 524: 2, 72: 2, 60: 2, 63: 2, 618: 2, 246: 2, 57: 2, 59: 2, 64: 2, 73: 2, 92: 2, 613: 2, 619: 2, 203: 2, 416: 2, 375: 2, 76: 2, 81: 2, 362: 2, 84: 2, 79: 2, 66: 2, 86: 2, 177: 2, 65: 2, 77: 2, 82: 2, 69: 2, 71: 2, 90: 2, 668: 2, 85: 2, 87: 2, 74: 2, 67: 2, 68: 2, 98: 2, 94: 2, 62: 2, 97: 2, 58: 2, 373: 2, 96: 2, 75: 2, 201: 2, 78: 2, 89: 2, 83: 2, 91: 2, 588: 1, 576: 1, 290: 1, 593: 1, 499: 1, 404: 1, 377: 1, 429: 1, 634: 1, 617: 1, 204: 1, 487: 1, 503: 1, 660: 1, 675: 1, 514: 1, 644: 1, 151: 1, 538: 1, 368: 1, 247: 1, 611: 1, 102: 1, 441: 1, 241: 1, 608: 1, 590: 1, 328: 1, 547: 1, 309: 1, 149: 1, 527: 1, 327: 1, 466: 1, 471: 1, 563: 1, 528: 1, 230: 1, 379: 1, 397: 1, 235: 1, 286: 1, 120: 1, 116: 1, 554: 1, 306: 1, 596: 1, 209: 1, 435: 1, 256: 1, 205: 1, 546: 1, 659: 1, 419: 1, 152: 1, 312: 1, 119: 1, 502: 1, 156: 1, 273: 1, 372: 1, 193: 1, 455: 1, 405: 1, 320: 1, 426: 1, 99: 1, 584: 1, 586: 1, 198: 1, 630: 1, 575: 1, 409: 1, 520: 1, 302: 1, 469: 1, 240: 1, 490: 1, 100: 1, 642: 1, 223: 1, 390: 1, 271: 1, 197: 1, 515: 1, 482: 1, 291: 1, 267: 1, 139: 1, 583: 1, 401: 1, 489: 1, 467: 1, 370: 1, 627: 1, 360: 1, 541: 1, 672: 1, 389: 1, 213: 1, 462: 1, 143: 1, 521: 1, 371: 1, 447: 1, 443: 1, 191: 1, 326: 1, 628: 1, 439: 1, 301: 1, 211: 1, 523: 1, 172: 1, 125: 1, 577: 1, 168: 1, 186: 1, 316: 1, 651: 1, 625: 1, 485: 1, 498: 1, 549: 1, 508: 1, 674: 1, 560: 1, 292: 1, 543: 1, 421: 1, 568: 1, 155: 1, 512: 1, 289: 1, 569: 1, 195: 1, 179: 1, 606: 1, 655: 1, 255: 1, 178: 1, 319: 1, 107: 1, 221: 1, 159: 1, 354: 1, 169: 1, 144: 1, 277: 1, 260: 1, 132: 1, 182: 1, 170: 1, 249: 1, 210: 1, 658: 1, 574: 1, 648: 1, 638: 1, 352: 1, 323: 1, 534: 1, 612: 1, 626: 1, 382: 1, 635: 1, 579: 1, 110: 1, 483: 1, 335: 1, 332: 1, 154: 1, 118: 1, 600: 1, 253: 1, 488: 1, 281: 1, 437: 1, 101: 1, 145: 1, 331: 1, 423: 1, 564: 1, 585: 1, 592: 1, 192: 1, 461: 1, 556: 1, 237: 1, 212: 1, 282: 1, 138: 1, 113: 1, 365: 1, 208: 1, 196: 1, 275: 1, 544: 1, 245: 1, 641: 1, 133: 1, 624: 1, 279: 1, 380: 1, 346: 1, 333: 1, 493: 1, 341: 1, 513: 1, 127: 1, 251: 1, 194: 1, 298: 1, 185: 1, 570: 1, 337: 1, 258: 1, 449: 1, 188: 1, 364: 1, 664: 1, 631: 1, 329: 1, 228: 1, 269: 1, 643: 1, 121: 1, 218: 1, 427: 1, 262: 1, 236: 1, 124: 1, 595: 1, 199: 1, 452: 1, 150: 1, 529: 1, 248: 1, 270: 1, 183: 1, 663: 1, 135: 1, 647: 1, 412: 1, 215: 1, 639: 1, 542: 1, 265: 1, 481: 1, 448: 1, 403: 1, 433: 1, 295: 1, 511: 1, 557: 1, 250: 1, 338: 1, 324: 1, 475: 1, 442: 1, 378: 1, 285: 1, 222: 1, 597: 1, 122: 1, 355: 1, 477: 1, 402: 1, 294: 1, 432: 1, 350: 1, 616: 1, 562: 1, 451: 1, 252: 1, 158: 1, 348: 1, 308: 1, 553: 1, 605: 1, 406: 1, 322: 1, 657: 1, 376: 1, 243: 1, 545: 1, 444: 1, 216: 1, 470: 1, 602: 1, 366: 1, 495: 1, 225: 1, 385: 1, 609: 1, 599: 1, 472: 1, 591: 1, 581: 1, 548: 1, 214: 1, 491: 1, 315: 1, 187: 1, 540: 1, 500: 1, 264: 1, 536: 1, 367: 1, 431: 1, 283: 1, 296: 1, 238: 1, 276: 1, 652: 1, 407: 1, 363: 1, 105: 1, 287: 1, 459: 1, 629: 1, 537: 1, 492: 1, 343: 1, 531: 1, 386: 1, 280: 1, 413: 1, 532: 1, 175: 1, 227: 1, 391: 1, 615: 1, 457: 1, 621: 1, 357: 1, 361: 1, 456: 1, 522: 1, 601: 1, 259: 1, 359: 1, 582: 1, 669: 1, 358: 1, 242: 1, 189: 1, 395: 1, 598: 1, 174: 1, 311: 1, 387: 1, 517: 1, 603: 1, 479: 1, 374: 1, 525: 1, 410: 1, 414: 1, 535: 1, 314: 1, 224: 1, 396: 1, 411: 1, 434: 1, 486: 1, 263: 1, 356: 1, 551: 1, 671: 1, 165: 1, 518: 1, 383: 1, 164: 1, 351: 1, 244: 1, 559: 1, 257: 1, 550: 1, 103: 1, 303: 1, 181: 1, 345: 1, 460: 1, 438: 1, 425: 1, 445: 1, 190: 1, 131: 1, 153: 1, 148: 1, 106: 1, 507: 1, 339: 1, 142: 1, 673: 1, 325: 1, 226: 1, 436: 1, 430: 1, 473: 1, 239: 1, 229: 1, 453: 1, 463: 1, 344: 1, 146: 1, 504: 1, 510: 1, 313: 1, 400: 1, 565: 1, 458: 1, 167: 1, 41: 1, 440: 1, 162: 1, 157: 1, 398: 1, 478: 1, 505: 1, 623: 1, 231: 1, 299: 1, 497: 1, 108: 1, 636: 1, 161: 1, 310: 1, 217: 1, 587: 1, 384: 1, 336: 1, 202: 1, 539: 1, 622: 1, 662: 1, 418: 1, 454: 1, 254: 1, 408: 1, 297: 1, 129: 1, 112: 1, 650: 1, 304: 1, 496: 1, 321: 1, 207: 1, 334: 1, 468: 1, 388: 1, 300: 1, 284: 1, 420: 1, 665: 1, 589: 1, 166: 1, 349: 1, 637: 1, 114: 1, 555: 1, 415: 1, 653: 1, 111: 1, 417: 1, 305: 1, 656: 1, 640: 1, 180: 1, 274: 1, 340: 1, 610: 1, 136: 1, 558: 1, 480: 1, 219: 1, 293: 1, 232: 1, 661: 1, 130: 1, 654: 1, 464: 1, 147: 1, 318: 1, 288: 1, 234: 1, 206: 1, 633: 1, 566: 1, 506: 1, 509: 1, 533: 1, 369: 1, 422: 1, 278: 1, 104: 1, 572: 1, 607: 1, 220: 1, 530: 1, 268: 1, 330: 1, 123: 1, 476: 1, 176: 1, 567: 1, 649: 1, 604: 1, 594: 1, 128: 1, 272: 1, 381: 1, 646: 1, 342: 1, 666: 1, 573: 1, 307: 1, 233: 1, 632: 1, 393: 1, 266: 1, 428: 1, 347: 1, 552: 1, 561: 1, 494: 1, 134: 1, 109: 1, 580: 1, 117: 1, 126: 1, 163: 1, 261: 1, 173: 1, 392: 1, 141: 1}), *** len(Counter(labels_)): 676
sigma: 364.0377272717949
random_state: 42
Finished getting the projection matrix
Projected data
kjl on train set took 0.02346 seconds
Projecting test data
kjl on test set took 0.002808 seconds
self.sigma: 364.0377272717949, q=0.3
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 32, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.68805 seconds
Total train time: 19.262547 <= std_train_time: 0, seek_train_time: 18.551037, proj_train_time: 0.02346, model_train_time: 0.68805
'decision_function()' starts at 2020-12-31 19:26:09
'decision_function()' ends at 2020-12-31 19:26:09. It takes 0.0 mins
Test model takes 0.001263 seconds
APC: 0.9039442378702773
AUC: 0.871261111111111
Total test time: 0.004071 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.002808, model_test_time: 0.001263
'get_best_results()' ends at 2020-12-31 19:26:09. It takes 0.681 mins


===4/5(n_repeats): {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': True, 'is_nystrom': False, 'is_quickshift': False, 'is_meanshift': True, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [], 'kjl_qs': [0.3], 'kjl_ns': [100], 'kjl_ds': [5], 'meanshift_qs': []}===
train: Counter({0: 5000}), val: Counter({0: 53, 1: 53})
'get_best_results()' starts at 2020-12-31 19:26:09
--is_gs: False, X_val == X_test
X_train.shape: (5000, 47), y_train: Counter({0: 5000})
X_val.shape: (600, 47), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 47), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:   20.6s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:   20.6s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
meanshift_training, it took 20.411923 seconds
--all clusters (648) when (bandwidth:371.3212849960182, 371.3212849960182). However, only 29 clusters have at least 10 datapoints. Counter(labels_): Counter({0: 3002, 9: 133, 50: 123, 1: 91, 2: 73, 77: 70, 93: 63, 43: 56, 36: 53, 590: 47, 198: 45, 3: 40, 7: 30, 4: 28, 436: 27, 78: 25, 396: 25, 12: 23, 51: 23, 5: 22, 6: 22, 8: 20, 331: 20, 41: 19, 10: 17, 11: 12, 500: 11, 506: 10, 561: 10, 19: 9, 366: 9, 102: 8, 13: 8, 40: 8, 15: 8, 22: 8, 215: 7, 182: 7, 14: 7, 636: 7, 20: 6, 17: 6, 16: 6, 25: 6, 74: 6, 18: 6, 21: 5, 23: 5, 28: 5, 111: 5, 530: 5, 58: 4, 32: 4, 27: 4, 24: 4, 26: 4, 73: 4, 33: 4, 30: 4, 360: 4, 31: 4, 29: 4, 422: 3, 37: 3, 44: 3, 35: 3, 553: 3, 39: 3, 91: 3, 45: 3, 514: 3, 164: 3, 84: 3, 63: 3, 42: 3, 38: 3, 34: 3, 79: 2, 80: 2, 61: 2, 69: 2, 85: 2, 95: 2, 71: 2, 70: 2, 87: 2, 48: 2, 534: 2, 46: 2, 60: 2, 59: 2, 53: 2, 75: 2, 67: 2, 62: 2, 54: 2, 83: 2, 193: 2, 88: 2, 591: 2, 86: 2, 49: 2, 76: 2, 437: 2, 484: 2, 92: 2, 72: 2, 90: 2, 56: 2, 94: 2, 352: 2, 625: 2, 297: 2, 296: 2, 273: 2, 65: 2, 361: 2, 68: 2, 64: 2, 47: 2, 81: 2, 82: 2, 593: 2, 55: 2, 52: 2, 57: 2, 503: 2, 66: 2, 89: 2, 267: 2, 578: 1, 343: 1, 615: 1, 563: 1, 409: 1, 235: 1, 231: 1, 386: 1, 301: 1, 337: 1, 219: 1, 349: 1, 333: 1, 554: 1, 430: 1, 637: 1, 480: 1, 603: 1, 362: 1, 565: 1, 175: 1, 374: 1, 501: 1, 316: 1, 277: 1, 521: 1, 507: 1, 448: 1, 594: 1, 485: 1, 112: 1, 135: 1, 249: 1, 209: 1, 588: 1, 631: 1, 497: 1, 405: 1, 476: 1, 443: 1, 315: 1, 328: 1, 372: 1, 389: 1, 568: 1, 142: 1, 427: 1, 214: 1, 406: 1, 257: 1, 320: 1, 115: 1, 176: 1, 204: 1, 327: 1, 632: 1, 130: 1, 628: 1, 557: 1, 643: 1, 621: 1, 629: 1, 113: 1, 285: 1, 212: 1, 288: 1, 402: 1, 576: 1, 127: 1, 525: 1, 548: 1, 211: 1, 433: 1, 468: 1, 383: 1, 284: 1, 375: 1, 348: 1, 619: 1, 492: 1, 339: 1, 147: 1, 410: 1, 513: 1, 423: 1, 441: 1, 312: 1, 239: 1, 397: 1, 511: 1, 329: 1, 493: 1, 336: 1, 363: 1, 417: 1, 271: 1, 354: 1, 201: 1, 221: 1, 466: 1, 260: 1, 475: 1, 353: 1, 159: 1, 274: 1, 293: 1, 614: 1, 613: 1, 152: 1, 180: 1, 286: 1, 233: 1, 580: 1, 610: 1, 452: 1, 601: 1, 223: 1, 387: 1, 526: 1, 400: 1, 264: 1, 108: 1, 429: 1, 390: 1, 519: 1, 581: 1, 604: 1, 499: 1, 454: 1, 586: 1, 246: 1, 226: 1, 585: 1, 538: 1, 195: 1, 488: 1, 567: 1, 275: 1, 428: 1, 644: 1, 248: 1, 342: 1, 571: 1, 299: 1, 137: 1, 160: 1, 357: 1, 382: 1, 103: 1, 225: 1, 369: 1, 595: 1, 520: 1, 496: 1, 335: 1, 442: 1, 191: 1, 232: 1, 559: 1, 573: 1, 388: 1, 364: 1, 505: 1, 187: 1, 473: 1, 384: 1, 609: 1, 444: 1, 395: 1, 564: 1, 398: 1, 414: 1, 451: 1, 244: 1, 471: 1, 434: 1, 144: 1, 547: 1, 598: 1, 635: 1, 145: 1, 340: 1, 291: 1, 381: 1, 162: 1, 131: 1, 549: 1, 645: 1, 140: 1, 582: 1, 611: 1, 197: 1, 149: 1, 107: 1, 620: 1, 261: 1, 259: 1, 311: 1, 174: 1, 365: 1, 307: 1, 618: 1, 482: 1, 583: 1, 181: 1, 136: 1, 238: 1, 177: 1, 240: 1, 481: 1, 262: 1, 155: 1, 332: 1, 153: 1, 236: 1, 416: 1, 599: 1, 460: 1, 96: 1, 432: 1, 325: 1, 440: 1, 247: 1, 133: 1, 208: 1, 438: 1, 641: 1, 602: 1, 350: 1, 148: 1, 404: 1, 439: 1, 124: 1, 237: 1, 608: 1, 125: 1, 122: 1, 556: 1, 196: 1, 537: 1, 546: 1, 109: 1, 276: 1, 242: 1, 393: 1, 118: 1, 380: 1, 217: 1, 486: 1, 533: 1, 161: 1, 642: 1, 508: 1, 188: 1, 157: 1, 216: 1, 283: 1, 528: 1, 270: 1, 154: 1, 572: 1, 512: 1, 306: 1, 338: 1, 179: 1, 210: 1, 399: 1, 570: 1, 253: 1, 510: 1, 272: 1, 287: 1, 584: 1, 345: 1, 560: 1, 408: 1, 172: 1, 151: 1, 527: 1, 418: 1, 138: 1, 517: 1, 298: 1, 524: 1, 391: 1, 252: 1, 314: 1, 183: 1, 445: 1, 646: 1, 358: 1, 415: 1, 566: 1, 456: 1, 170: 1, 351: 1, 545: 1, 281: 1, 596: 1, 295: 1, 110: 1, 589: 1, 612: 1, 269: 1, 205: 1, 355: 1, 278: 1, 569: 1, 356: 1, 515: 1, 334: 1, 592: 1, 158: 1, 309: 1, 213: 1, 465: 1, 304: 1, 255: 1, 551: 1, 413: 1, 467: 1, 165: 1, 478: 1, 479: 1, 597: 1, 552: 1, 203: 1, 186: 1, 178: 1, 558: 1, 446: 1, 627: 1, 202: 1, 378: 1, 600: 1, 218: 1, 622: 1, 104: 1, 574: 1, 647: 1, 280: 1, 532: 1, 318: 1, 435: 1, 379: 1, 132: 1, 420: 1, 562: 1, 577: 1, 289: 1, 344: 1, 419: 1, 100: 1, 463: 1, 192: 1, 617: 1, 426: 1, 317: 1, 190: 1, 509: 1, 173: 1, 222: 1, 541: 1, 630: 1, 455: 1, 535: 1, 540: 1, 575: 1, 494: 1, 265: 1, 322: 1, 256: 1, 324: 1, 97: 1, 623: 1, 624: 1, 305: 1, 220: 1, 483: 1, 518: 1, 228: 1, 258: 1, 462: 1, 321: 1, 243: 1, 359: 1, 128: 1, 373: 1, 394: 1, 319: 1, 199: 1, 638: 1, 502: 1, 472: 1, 241: 1, 292: 1, 523: 1, 310: 1, 477: 1, 371: 1, 168: 1, 424: 1, 470: 1, 114: 1, 392: 1, 411: 1, 489: 1, 403: 1, 279: 1, 490: 1, 101: 1, 245: 1, 326: 1, 169: 1, 250: 1, 134: 1, 640: 1, 146: 1, 536: 1, 341: 1, 498: 1, 150: 1, 98: 1, 457: 1, 579: 1, 266: 1, 605: 1, 421: 1, 163: 1, 633: 1, 639: 1, 116: 1, 126: 1, 516: 1, 303: 1, 251: 1, 407: 1, 504: 1, 376: 1, 367: 1, 531: 1, 587: 1, 385: 1, 459: 1, 401: 1, 469: 1, 425: 1, 129: 1, 616: 1, 464: 1, 166: 1, 227: 1, 377: 1, 449: 1, 302: 1, 555: 1, 254: 1, 474: 1, 185: 1, 491: 1, 230: 1, 461: 1, 542: 1, 171: 1, 156: 1, 294: 1, 184: 1, 495: 1, 453: 1, 313: 1, 106: 1, 229: 1, 139: 1, 634: 1, 487: 1, 323: 1, 330: 1, 290: 1, 123: 1, 529: 1, 607: 1, 120: 1, 167: 1, 119: 1, 370: 1, 550: 1, 347: 1, 626: 1, 522: 1, 308: 1, 105: 1, 544: 1, 606: 1, 224: 1, 189: 1, 447: 1, 234: 1, 117: 1, 207: 1, 263: 1, 194: 1, 346: 1, 539: 1, 450: 1, 458: 1, 206: 1, 99: 1, 431: 1, 143: 1, 368: 1, 543: 1, 412: 1, 268: 1, 141: 1, 300: 1, 282: 1, 121: 1, 200: 1}), *** len(Counter(labels_)): 648
sigma: 371.3212849960182
random_state: 42
Finished getting the projection matrix
Projected data
kjl on train set took 0.024141 seconds
Projecting test data
kjl on test set took 0.002543 seconds
self.sigma: 371.3212849960182, q=0.3
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 29, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.35139 seconds
Total train time: 20.787454 <= std_train_time: 0, seek_train_time: 20.411923, proj_train_time: 0.024141, model_train_time: 0.35139
'decision_function()' starts at 2020-12-31 19:26:32
'decision_function()' ends at 2020-12-31 19:26:32. It takes 0.0 mins
Test model takes 0.000734 seconds
APC: 0.8739234559249218
AUC: 0.8594277777777778
Total test time: 0.003277 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.002543, model_test_time: 0.000734
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
meanshift_training, it took 20.656202 seconds
--all clusters (648) when (bandwidth:371.3212849960182, 371.3212849960182). However, only 29 clusters have at least 10 datapoints. Counter(labels_): Counter({0: 3002, 9: 133, 50: 123, 1: 91, 2: 73, 77: 70, 93: 63, 43: 56, 36: 53, 590: 47, 198: 45, 3: 40, 7: 30, 4: 28, 436: 27, 78: 25, 396: 25, 12: 23, 51: 23, 5: 22, 6: 22, 8: 20, 331: 20, 41: 19, 10: 17, 11: 12, 500: 11, 506: 10, 561: 10, 19: 9, 366: 9, 102: 8, 13: 8, 40: 8, 15: 8, 22: 8, 215: 7, 182: 7, 14: 7, 636: 7, 20: 6, 17: 6, 16: 6, 25: 6, 74: 6, 18: 6, 21: 5, 23: 5, 28: 5, 111: 5, 530: 5, 58: 4, 32: 4, 27: 4, 24: 4, 26: 4, 73: 4, 33: 4, 30: 4, 360: 4, 31: 4, 29: 4, 422: 3, 37: 3, 44: 3, 35: 3, 553: 3, 39: 3, 91: 3, 45: 3, 514: 3, 164: 3, 84: 3, 63: 3, 42: 3, 38: 3, 34: 3, 79: 2, 80: 2, 61: 2, 69: 2, 85: 2, 95: 2, 71: 2, 70: 2, 87: 2, 48: 2, 534: 2, 46: 2, 60: 2, 59: 2, 53: 2, 75: 2, 67: 2, 62: 2, 54: 2, 83: 2, 193: 2, 88: 2, 591: 2, 86: 2, 49: 2, 76: 2, 437: 2, 484: 2, 92: 2, 72: 2, 90: 2, 56: 2, 94: 2, 352: 2, 625: 2, 297: 2, 296: 2, 273: 2, 65: 2, 361: 2, 68: 2, 64: 2, 47: 2, 81: 2, 82: 2, 593: 2, 55: 2, 52: 2, 57: 2, 503: 2, 66: 2, 89: 2, 267: 2, 578: 1, 343: 1, 615: 1, 563: 1, 409: 1, 235: 1, 231: 1, 386: 1, 301: 1, 337: 1, 219: 1, 349: 1, 333: 1, 554: 1, 430: 1, 637: 1, 480: 1, 603: 1, 362: 1, 565: 1, 175: 1, 374: 1, 501: 1, 316: 1, 277: 1, 521: 1, 507: 1, 448: 1, 594: 1, 485: 1, 112: 1, 135: 1, 249: 1, 209: 1, 588: 1, 631: 1, 497: 1, 405: 1, 476: 1, 443: 1, 315: 1, 328: 1, 372: 1, 389: 1, 568: 1, 142: 1, 427: 1, 214: 1, 406: 1, 257: 1, 320: 1, 115: 1, 176: 1, 204: 1, 327: 1, 632: 1, 130: 1, 628: 1, 557: 1, 643: 1, 621: 1, 629: 1, 113: 1, 285: 1, 212: 1, 288: 1, 402: 1, 576: 1, 127: 1, 525: 1, 548: 1, 211: 1, 433: 1, 468: 1, 383: 1, 284: 1, 375: 1, 348: 1, 619: 1, 492: 1, 339: 1, 147: 1, 410: 1, 513: 1, 423: 1, 441: 1, 312: 1, 239: 1, 397: 1, 511: 1, 329: 1, 493: 1, 336: 1, 363: 1, 417: 1, 271: 1, 354: 1, 201: 1, 221: 1, 466: 1, 260: 1, 475: 1, 353: 1, 159: 1, 274: 1, 293: 1, 614: 1, 613: 1, 152: 1, 180: 1, 286: 1, 233: 1, 580: 1, 610: 1, 452: 1, 601: 1, 223: 1, 387: 1, 526: 1, 400: 1, 264: 1, 108: 1, 429: 1, 390: 1, 519: 1, 581: 1, 604: 1, 499: 1, 454: 1, 586: 1, 246: 1, 226: 1, 585: 1, 538: 1, 195: 1, 488: 1, 567: 1, 275: 1, 428: 1, 644: 1, 248: 1, 342: 1, 571: 1, 299: 1, 137: 1, 160: 1, 357: 1, 382: 1, 103: 1, 225: 1, 369: 1, 595: 1, 520: 1, 496: 1, 335: 1, 442: 1, 191: 1, 232: 1, 559: 1, 573: 1, 388: 1, 364: 1, 505: 1, 187: 1, 473: 1, 384: 1, 609: 1, 444: 1, 395: 1, 564: 1, 398: 1, 414: 1, 451: 1, 244: 1, 471: 1, 434: 1, 144: 1, 547: 1, 598: 1, 635: 1, 145: 1, 340: 1, 291: 1, 381: 1, 162: 1, 131: 1, 549: 1, 645: 1, 140: 1, 582: 1, 611: 1, 197: 1, 149: 1, 107: 1, 620: 1, 261: 1, 259: 1, 311: 1, 174: 1, 365: 1, 307: 1, 618: 1, 482: 1, 583: 1, 181: 1, 136: 1, 238: 1, 177: 1, 240: 1, 481: 1, 262: 1, 155: 1, 332: 1, 153: 1, 236: 1, 416: 1, 599: 1, 460: 1, 96: 1, 432: 1, 325: 1, 440: 1, 247: 1, 133: 1, 208: 1, 438: 1, 641: 1, 602: 1, 350: 1, 148: 1, 404: 1, 439: 1, 124: 1, 237: 1, 608: 1, 125: 1, 122: 1, 556: 1, 196: 1, 537: 1, 546: 1, 109: 1, 276: 1, 242: 1, 393: 1, 118: 1, 380: 1, 217: 1, 486: 1, 533: 1, 161: 1, 642: 1, 508: 1, 188: 1, 157: 1, 216: 1, 283: 1, 528: 1, 270: 1, 154: 1, 572: 1, 512: 1, 306: 1, 338: 1, 179: 1, 210: 1, 399: 1, 570: 1, 253: 1, 510: 1, 272: 1, 287: 1, 584: 1, 345: 1, 560: 1, 408: 1, 172: 1, 151: 1, 527: 1, 418: 1, 138: 1, 517: 1, 298: 1, 524: 1, 391: 1, 252: 1, 314: 1, 183: 1, 445: 1, 646: 1, 358: 1, 415: 1, 566: 1, 456: 1, 170: 1, 351: 1, 545: 1, 281: 1, 596: 1, 295: 1, 110: 1, 589: 1, 612: 1, 269: 1, 205: 1, 355: 1, 278: 1, 569: 1, 356: 1, 515: 1, 334: 1, 592: 1, 158: 1, 309: 1, 213: 1, 465: 1, 304: 1, 255: 1, 551: 1, 413: 1, 467: 1, 165: 1, 478: 1, 479: 1, 597: 1, 552: 1, 203: 1, 186: 1, 178: 1, 558: 1, 446: 1, 627: 1, 202: 1, 378: 1, 600: 1, 218: 1, 622: 1, 104: 1, 574: 1, 647: 1, 280: 1, 532: 1, 318: 1, 435: 1, 379: 1, 132: 1, 420: 1, 562: 1, 577: 1, 289: 1, 344: 1, 419: 1, 100: 1, 463: 1, 192: 1, 617: 1, 426: 1, 317: 1, 190: 1, 509: 1, 173: 1, 222: 1, 541: 1, 630: 1, 455: 1, 535: 1, 540: 1, 575: 1, 494: 1, 265: 1, 322: 1, 256: 1, 324: 1, 97: 1, 623: 1, 624: 1, 305: 1, 220: 1, 483: 1, 518: 1, 228: 1, 258: 1, 462: 1, 321: 1, 243: 1, 359: 1, 128: 1, 373: 1, 394: 1, 319: 1, 199: 1, 638: 1, 502: 1, 472: 1, 241: 1, 292: 1, 523: 1, 310: 1, 477: 1, 371: 1, 168: 1, 424: 1, 470: 1, 114: 1, 392: 1, 411: 1, 489: 1, 403: 1, 279: 1, 490: 1, 101: 1, 245: 1, 326: 1, 169: 1, 250: 1, 134: 1, 640: 1, 146: 1, 536: 1, 341: 1, 498: 1, 150: 1, 98: 1, 457: 1, 579: 1, 266: 1, 605: 1, 421: 1, 163: 1, 633: 1, 639: 1, 116: 1, 126: 1, 516: 1, 303: 1, 251: 1, 407: 1, 504: 1, 376: 1, 367: 1, 531: 1, 587: 1, 385: 1, 459: 1, 401: 1, 469: 1, 425: 1, 129: 1, 616: 1, 464: 1, 166: 1, 227: 1, 377: 1, 449: 1, 302: 1, 555: 1, 254: 1, 474: 1, 185: 1, 491: 1, 230: 1, 461: 1, 542: 1, 171: 1, 156: 1, 294: 1, 184: 1, 495: 1, 453: 1, 313: 1, 106: 1, 229: 1, 139: 1, 634: 1, 487: 1, 323: 1, 330: 1, 290: 1, 123: 1, 529: 1, 607: 1, 120: 1, 167: 1, 119: 1, 370: 1, 550: 1, 347: 1, 626: 1, 522: 1, 308: 1, 105: 1, 544: 1, 606: 1, 224: 1, 189: 1, 447: 1, 234: 1, 117: 1, 207: 1, 263: 1, 194: 1, 346: 1, 539: 1, 450: 1, 458: 1, 206: 1, 99: 1, 431: 1, 143: 1, 368: 1, 543: 1, 412: 1, 268: 1, 141: 1, 300: 1, 282: 1, 121: 1, 200: 1}), *** len(Counter(labels_)): 648
sigma: 371.3212849960182
random_state: 42
Finished getting the projection matrix
Projected data
kjl on train set took 0.025638 seconds
Projecting test data
kjl on test set took 0.002907 seconds
self.sigma: 371.3212849960182, q=0.3
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 29, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.504504 seconds
Total train time: 21.186344000000002 <= std_train_time: 0, seek_train_time: 20.656202, proj_train_time: 0.025638, model_train_time: 0.504504
'decision_function()' starts at 2020-12-31 19:26:54
'decision_function()' ends at 2020-12-31 19:26:54. It takes 0.0 mins
Test model takes 0.001193 seconds
APC: 0.8739234559249218
AUC: 0.8594277777777778
Total test time: 0.0040999999999999995 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.002907, model_test_time: 0.001193
'get_best_results()' ends at 2020-12-31 19:26:54. It takes 0.7473 mins


===5/5(n_repeats): {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': True, 'is_nystrom': False, 'is_quickshift': False, 'is_meanshift': True, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [], 'kjl_qs': [0.3], 'kjl_ns': [100], 'kjl_ds': [5], 'meanshift_qs': []}===
train: Counter({0: 5000}), val: Counter({0: 53, 1: 53})
'get_best_results()' starts at 2020-12-31 19:26:54
--is_gs: False, X_val == X_test
X_train.shape: (5000, 47), y_train: Counter({0: 5000})
X_val.shape: (600, 47), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 47), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:   22.7s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:   22.7s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
---get accurate time of training and testing with the best params---
meanshift_training, it took 18.553841 seconds
--all clusters (683) when (bandwidth:364.14677290848573, 364.14677290848573). However, only 32 clusters have at least 10 datapoints. Counter(labels_): Counter({0: 3013, 18: 145, 54: 127, 31: 110, 621: 60, 6: 58, 2: 57, 1: 56, 3: 52, 507: 36, 16: 33, 453: 31, 358: 29, 343: 28, 508: 28, 9: 24, 4: 24, 5: 20, 614: 17, 8: 16, 21: 15, 11: 14, 20: 14, 7: 14, 10: 14, 37: 13, 574: 12, 17: 12, 52: 11, 125: 10, 13: 10, 12: 10, 19: 9, 15: 9, 24: 9, 22: 8, 41: 8, 14: 8, 664: 7, 678: 7, 23: 7, 25: 6, 129: 6, 27: 6, 610: 5, 101: 5, 28: 5, 26: 5, 29: 5, 671: 4, 59: 4, 30: 4, 38: 4, 33: 4, 32: 4, 427: 4, 43: 4, 34: 4, 35: 4, 242: 4, 56: 4, 36: 4, 234: 3, 50: 3, 49: 3, 108: 3, 45: 3, 77: 3, 356: 3, 48: 3, 39: 3, 42: 3, 44: 3, 344: 3, 53: 3, 72: 3, 51: 3, 40: 3, 70: 3, 47: 3, 55: 3, 46: 3, 73: 3, 407: 2, 95: 2, 184: 2, 63: 2, 82: 2, 338: 2, 97: 2, 83: 2, 78: 2, 107: 2, 102: 2, 96: 2, 199: 2, 253: 2, 67: 2, 91: 2, 88: 2, 100: 2, 64: 2, 74: 2, 201: 2, 585: 2, 103: 2, 58: 2, 65: 2, 667: 2, 99: 2, 76: 2, 68: 2, 61: 2, 69: 2, 104: 2, 93: 2, 75: 2, 573: 2, 84: 2, 98: 2, 62: 2, 81: 2, 87: 2, 346: 2, 89: 2, 57: 2, 105: 2, 85: 2, 616: 2, 451: 2, 90: 2, 80: 2, 66: 2, 86: 2, 79: 2, 92: 2, 106: 2, 60: 2, 71: 2, 94: 2, 132: 1, 110: 1, 330: 1, 465: 1, 398: 1, 177: 1, 600: 1, 552: 1, 436: 1, 255: 1, 443: 1, 418: 1, 675: 1, 141: 1, 412: 1, 569: 1, 155: 1, 422: 1, 673: 1, 111: 1, 472: 1, 350: 1, 497: 1, 286: 1, 213: 1, 419: 1, 586: 1, 394: 1, 181: 1, 592: 1, 216: 1, 211: 1, 447: 1, 568: 1, 580: 1, 572: 1, 591: 1, 385: 1, 500: 1, 467: 1, 496: 1, 261: 1, 233: 1, 440: 1, 207: 1, 471: 1, 562: 1, 529: 1, 461: 1, 392: 1, 565: 1, 421: 1, 115: 1, 382: 1, 509: 1, 498: 1, 349: 1, 243: 1, 185: 1, 470: 1, 445: 1, 628: 1, 353: 1, 522: 1, 597: 1, 114: 1, 409: 1, 428: 1, 601: 1, 310: 1, 221: 1, 433: 1, 280: 1, 630: 1, 627: 1, 423: 1, 149: 1, 264: 1, 325: 1, 587: 1, 169: 1, 127: 1, 372: 1, 434: 1, 493: 1, 193: 1, 220: 1, 430: 1, 501: 1, 240: 1, 555: 1, 166: 1, 327: 1, 153: 1, 305: 1, 281: 1, 236: 1, 442: 1, 171: 1, 150: 1, 302: 1, 401: 1, 473: 1, 389: 1, 460: 1, 462: 1, 179: 1, 317: 1, 655: 1, 651: 1, 109: 1, 438: 1, 643: 1, 200: 1, 277: 1, 425: 1, 303: 1, 518: 1, 120: 1, 376: 1, 617: 1, 210: 1, 262: 1, 429: 1, 254: 1, 306: 1, 189: 1, 246: 1, 468: 1, 152: 1, 595: 1, 411: 1, 589: 1, 553: 1, 182: 1, 117: 1, 476: 1, 160: 1, 482: 1, 332: 1, 420: 1, 560: 1, 456: 1, 312: 1, 267: 1, 351: 1, 139: 1, 454: 1, 459: 1, 647: 1, 452: 1, 301: 1, 241: 1, 244: 1, 393: 1, 229: 1, 248: 1, 554: 1, 370: 1, 403: 1, 551: 1, 395: 1, 283: 1, 402: 1, 118: 1, 513: 1, 341: 1, 624: 1, 378: 1, 563: 1, 478: 1, 190: 1, 559: 1, 623: 1, 329: 1, 649: 1, 611: 1, 450: 1, 669: 1, 147: 1, 598: 1, 391: 1, 176: 1, 131: 1, 414: 1, 163: 1, 564: 1, 437: 1, 439: 1, 550: 1, 682: 1, 140: 1, 680: 1, 367: 1, 206: 1, 148: 1, 203: 1, 321: 1, 151: 1, 656: 1, 279: 1, 469: 1, 644: 1, 366: 1, 489: 1, 527: 1, 474: 1, 455: 1, 136: 1, 219: 1, 404: 1, 235: 1, 485: 1, 112: 1, 308: 1, 665: 1, 530: 1, 618: 1, 505: 1, 526: 1, 613: 1, 143: 1, 516: 1, 558: 1, 257: 1, 653: 1, 578: 1, 672: 1, 116: 1, 634: 1, 186: 1, 544: 1, 670: 1, 383: 1, 191: 1, 458: 1, 119: 1, 375: 1, 400: 1, 377: 1, 570: 1, 373: 1, 652: 1, 648: 1, 252: 1, 276: 1, 503: 1, 284: 1, 202: 1, 535: 1, 212: 1, 313: 1, 165: 1, 156: 1, 187: 1, 446: 1, 271: 1, 625: 1, 299: 1, 548: 1, 464: 1, 540: 1, 543: 1, 274: 1, 342: 1, 466: 1, 424: 1, 384: 1, 435: 1, 260: 1, 167: 1, 406: 1, 222: 1, 209: 1, 162: 1, 275: 1, 320: 1, 417: 1, 228: 1, 463: 1, 270: 1, 355: 1, 214: 1, 444: 1, 612: 1, 541: 1, 415: 1, 259: 1, 170: 1, 397: 1, 576: 1, 396: 1, 484: 1, 217: 1, 272: 1, 374: 1, 311: 1, 629: 1, 316: 1, 204: 1, 379: 1, 294: 1, 339: 1, 278: 1, 486: 1, 287: 1, 323: 1, 336: 1, 619: 1, 666: 1, 174: 1, 188: 1, 218: 1, 571: 1, 593: 1, 168: 1, 249: 1, 607: 1, 661: 1, 531: 1, 487: 1, 449: 1, 258: 1, 635: 1, 180: 1, 432: 1, 681: 1, 158: 1, 121: 1, 637: 1, 335: 1, 195: 1, 309: 1, 285: 1, 577: 1, 633: 1, 159: 1, 225: 1, 536: 1, 615: 1, 659: 1, 365: 1, 604: 1, 318: 1, 410: 1, 549: 1, 603: 1, 352: 1, 658: 1, 492: 1, 510: 1, 431: 1, 273: 1, 314: 1, 441: 1, 137: 1, 293: 1, 198: 1, 532: 1, 561: 1, 646: 1, 584: 1, 483: 1, 545: 1, 477: 1, 520: 1, 596: 1, 331: 1, 638: 1, 334: 1, 668: 1, 333: 1, 519: 1, 525: 1, 328: 1, 524: 1, 608: 1, 636: 1, 307: 1, 164: 1, 364: 1, 537: 1, 268: 1, 521: 1, 448: 1, 161: 1, 138: 1, 135: 1, 230: 1, 539: 1, 502: 1, 506: 1, 499: 1, 645: 1, 650: 1, 205: 1, 251: 1, 380: 1, 657: 1, 130: 1, 405: 1, 360: 1, 677: 1, 224: 1, 146: 1, 256: 1, 511: 1, 322: 1, 113: 1, 660: 1, 337: 1, 408: 1, 361: 1, 490: 1, 579: 1, 523: 1, 620: 1, 512: 1, 208: 1, 300: 1, 319: 1, 399: 1, 269: 1, 457: 1, 480: 1, 534: 1, 602: 1, 494: 1, 292: 1, 124: 1, 626: 1, 231: 1, 528: 1, 491: 1, 599: 1, 662: 1, 232: 1, 345: 1, 594: 1, 298: 1, 588: 1, 340: 1, 557: 1, 172: 1, 263: 1, 363: 1, 371: 1, 413: 1, 609: 1, 390: 1, 679: 1, 556: 1, 368: 1, 354: 1, 128: 1, 304: 1, 297: 1, 197: 1, 495: 1, 622: 1, 348: 1, 295: 1, 475: 1, 515: 1, 347: 1, 567: 1, 642: 1, 517: 1, 357: 1, 245: 1, 250: 1, 514: 1, 126: 1, 296: 1, 538: 1, 227: 1, 157: 1, 196: 1, 488: 1, 315: 1, 566: 1, 238: 1, 145: 1, 142: 1, 178: 1, 223: 1, 533: 1, 144: 1, 226: 1, 547: 1, 122: 1, 641: 1, 288: 1, 582: 1, 282: 1, 265: 1, 676: 1, 654: 1, 426: 1, 386: 1, 479: 1, 134: 1, 663: 1, 266: 1, 381: 1, 575: 1, 639: 1, 631: 1, 581: 1, 247: 1, 542: 1, 583: 1, 359: 1, 640: 1, 606: 1, 504: 1, 388: 1, 362: 1, 546: 1, 123: 1, 173: 1, 324: 1, 605: 1, 133: 1, 416: 1, 175: 1, 192: 1, 289: 1, 183: 1, 387: 1, 481: 1, 326: 1, 674: 1, 291: 1, 369: 1, 194: 1, 215: 1, 290: 1, 239: 1, 154: 1, 632: 1, 590: 1, 237: 1}), *** len(Counter(labels_)): 683
sigma: 364.14677290848573
random_state: 42
Finished getting the projection matrix
Projected data
kjl on train set took 0.025246 seconds
Projecting test data
kjl on test set took 0.002813 seconds
self.sigma: 364.14677290848573, q=0.3
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 32, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.760558 seconds
Total train time: 19.339644999999997 <= std_train_time: 0, seek_train_time: 18.553841, proj_train_time: 0.025246, model_train_time: 0.760558
'decision_function()' starts at 2020-12-31 19:27:35
'decision_function()' ends at 2020-12-31 19:27:35. It takes 0.0 mins
Test model takes 0.001263 seconds
APC: 0.8943067560562912
AUC: 0.8666999999999999
Total test time: 0.004076 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.002813, model_test_time: 0.001263
'get_best_results()' ends at 2020-12-31 19:27:35. It takes 0.682 mins
speedup/data/src_dst/iat_size/UNB3/gs_False-diag/case6.dat
single_main.kwargs: dict_items([('data', (('UNB5', 'speedup/data/src_dst/iat_size/UNB5/Xy-normal-abnormal.dat'), (array([[5.00679016e-06, 7.00000000e+01, 9.53674316e-07, ...,
        9.53674316e-07, 7.00000000e+01, 9.53674316e-07],
       [9.53674316e-07, 7.60000000e+01, 9.88418102e-01, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
       [2.86102295e-06, 9.20000000e+01, 9.20000000e+01, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
       ...,
       [5.28975964e-01, 6.60000000e+01, 5.15614986e-01, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
       [5.13157129e-01, 6.60000000e+01, 5.15626907e-01, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
       [5.28997898e-01, 6.60000000e+01, 5.15608072e-01, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]]), array(['normal_0', 'normal_0', 'normal_0', ..., 'abnormal_0',
       'abnormal_0', 'abnormal_0'], dtype='<U10')))), ('params', ('case1', {'detector_name': 'OCSVM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': False, 'is_nystrom': False, 'is_quickshift': False, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'OCSVM_qs': [0.3], 'OCSVM_nus': [0.5]}))])
X.shape: (30855, 49), y: Counter({0: 30286, 1: 569})
left: Counter({0: 29986, 1: 269}), test: Counter({0: 300, 1: 300})meanshift_training, it took 18.181502 seconds
--all clusters (683) when (bandwidth:364.14677290848573, 364.14677290848573). However, only 32 clusters have at least 10 datapoints. Counter(labels_): Counter({0: 3013, 18: 145, 54: 127, 31: 110, 621: 60, 6: 58, 2: 57, 1: 56, 3: 52, 507: 36, 16: 33, 453: 31, 358: 29, 343: 28, 508: 28, 9: 24, 4: 24, 5: 20, 614: 17, 8: 16, 21: 15, 11: 14, 20: 14, 7: 14, 10: 14, 37: 13, 574: 12, 17: 12, 52: 11, 125: 10, 13: 10, 12: 10, 19: 9, 15: 9, 24: 9, 22: 8, 41: 8, 14: 8, 664: 7, 678: 7, 23: 7, 25: 6, 129: 6, 27: 6, 610: 5, 101: 5, 28: 5, 26: 5, 29: 5, 671: 4, 59: 4, 30: 4, 38: 4, 33: 4, 32: 4, 427: 4, 43: 4, 34: 4, 35: 4, 242: 4, 56: 4, 36: 4, 234: 3, 50: 3, 49: 3, 108: 3, 45: 3, 77: 3, 356: 3, 48: 3, 39: 3, 42: 3, 44: 3, 344: 3, 53: 3, 72: 3, 51: 3, 40: 3, 70: 3, 47: 3, 55: 3, 46: 3, 73: 3, 407: 2, 95: 2, 184: 2, 63: 2, 82: 2, 338: 2, 97: 2, 83: 2, 78: 2, 107: 2, 102: 2, 96: 2, 199: 2, 253: 2, 67: 2, 91: 2, 88: 2, 100: 2, 64: 2, 74: 2, 201: 2, 585: 2, 103: 2, 58: 2, 65: 2, 667: 2, 99: 2, 76: 2, 68: 2, 61: 2, 69: 2, 104: 2, 93: 2, 75: 2, 573: 2, 84: 2, 98: 2, 62: 2, 81: 2, 87: 2, 346: 2, 89: 2, 57: 2, 105: 2, 85: 2, 616: 2, 451: 2, 90: 2, 80: 2, 66: 2, 86: 2, 79: 2, 92: 2, 106: 2, 60: 2, 71: 2, 94: 2, 132: 1, 110: 1, 330: 1, 465: 1, 398: 1, 177: 1, 600: 1, 552: 1, 436: 1, 255: 1, 443: 1, 418: 1, 675: 1, 141: 1, 412: 1, 569: 1, 155: 1, 422: 1, 673: 1, 111: 1, 472: 1, 350: 1, 497: 1, 286: 1, 213: 1, 419: 1, 586: 1, 394: 1, 181: 1, 592: 1, 216: 1, 211: 1, 447: 1, 568: 1, 580: 1, 572: 1, 591: 1, 385: 1, 500: 1, 467: 1, 496: 1, 261: 1, 233: 1, 440: 1, 207: 1, 471: 1, 562: 1, 529: 1, 461: 1, 392: 1, 565: 1, 421: 1, 115: 1, 382: 1, 509: 1, 498: 1, 349: 1, 243: 1, 185: 1, 470: 1, 445: 1, 628: 1, 353: 1, 522: 1, 597: 1, 114: 1, 409: 1, 428: 1, 601: 1, 310: 1, 221: 1, 433: 1, 280: 1, 630: 1, 627: 1, 423: 1, 149: 1, 264: 1, 325: 1, 587: 1, 169: 1, 127: 1, 372: 1, 434: 1, 493: 1, 193: 1, 220: 1, 430: 1, 501: 1, 240: 1, 555: 1, 166: 1, 327: 1, 153: 1, 305: 1, 281: 1, 236: 1, 442: 1, 171: 1, 150: 1, 302: 1, 401: 1, 473: 1, 389: 1, 460: 1, 462: 1, 179: 1, 317: 1, 655: 1, 651: 1, 109: 1, 438: 1, 643: 1, 200: 1, 277: 1, 425: 1, 303: 1, 518: 1, 120: 1, 376: 1, 617: 1, 210: 1, 262: 1, 429: 1, 254: 1, 306: 1, 189: 1, 246: 1, 468: 1, 152: 1, 595: 1, 411: 1, 589: 1, 553: 1, 182: 1, 117: 1, 476: 1, 160: 1, 482: 1, 332: 1, 420: 1, 560: 1, 456: 1, 312: 1, 267: 1, 351: 1, 139: 1, 454: 1, 459: 1, 647: 1, 452: 1, 301: 1, 241: 1, 244: 1, 393: 1, 229: 1, 248: 1, 554: 1, 370: 1, 403: 1, 551: 1, 395: 1, 283: 1, 402: 1, 118: 1, 513: 1, 341: 1, 624: 1, 378: 1, 563: 1, 478: 1, 190: 1, 559: 1, 623: 1, 329: 1, 649: 1, 611: 1, 450: 1, 669: 1, 147: 1, 598: 1, 391: 1, 176: 1, 131: 1, 414: 1, 163: 1, 564: 1, 437: 1, 439: 1, 550: 1, 682: 1, 140: 1, 680: 1, 367: 1, 206: 1, 148: 1, 203: 1, 321: 1, 151: 1, 656: 1, 279: 1, 469: 1, 644: 1, 366: 1, 489: 1, 527: 1, 474: 1, 455: 1, 136: 1, 219: 1, 404: 1, 235: 1, 485: 1, 112: 1, 308: 1, 665: 1, 530: 1, 618: 1, 505: 1, 526: 1, 613: 1, 143: 1, 516: 1, 558: 1, 257: 1, 653: 1, 578: 1, 672: 1, 116: 1, 634: 1, 186: 1, 544: 1, 670: 1, 383: 1, 191: 1, 458: 1, 119: 1, 375: 1, 400: 1, 377: 1, 570: 1, 373: 1, 652: 1, 648: 1, 252: 1, 276: 1, 503: 1, 284: 1, 202: 1, 535: 1, 212: 1, 313: 1, 165: 1, 156: 1, 187: 1, 446: 1, 271: 1, 625: 1, 299: 1, 548: 1, 464: 1, 540: 1, 543: 1, 274: 1, 342: 1, 466: 1, 424: 1, 384: 1, 435: 1, 260: 1, 167: 1, 406: 1, 222: 1, 209: 1, 162: 1, 275: 1, 320: 1, 417: 1, 228: 1, 463: 1, 270: 1, 355: 1, 214: 1, 444: 1, 612: 1, 541: 1, 415: 1, 259: 1, 170: 1, 397: 1, 576: 1, 396: 1, 484: 1, 217: 1, 272: 1, 374: 1, 311: 1, 629: 1, 316: 1, 204: 1, 379: 1, 294: 1, 339: 1, 278: 1, 486: 1, 287: 1, 323: 1, 336: 1, 619: 1, 666: 1, 174: 1, 188: 1, 218: 1, 571: 1, 593: 1, 168: 1, 249: 1, 607: 1, 661: 1, 531: 1, 487: 1, 449: 1, 258: 1, 635: 1, 180: 1, 432: 1, 681: 1, 158: 1, 121: 1, 637: 1, 335: 1, 195: 1, 309: 1, 285: 1, 577: 1, 633: 1, 159: 1, 225: 1, 536: 1, 615: 1, 659: 1, 365: 1, 604: 1, 318: 1, 410: 1, 549: 1, 603: 1, 352: 1, 658: 1, 492: 1, 510: 1, 431: 1, 273: 1, 314: 1, 441: 1, 137: 1, 293: 1, 198: 1, 532: 1, 561: 1, 646: 1, 584: 1, 483: 1, 545: 1, 477: 1, 520: 1, 596: 1, 331: 1, 638: 1, 334: 1, 668: 1, 333: 1, 519: 1, 525: 1, 328: 1, 524: 1, 608: 1, 636: 1, 307: 1, 164: 1, 364: 1, 537: 1, 268: 1, 521: 1, 448: 1, 161: 1, 138: 1, 135: 1, 230: 1, 539: 1, 502: 1, 506: 1, 499: 1, 645: 1, 650: 1, 205: 1, 251: 1, 380: 1, 657: 1, 130: 1, 405: 1, 360: 1, 677: 1, 224: 1, 146: 1, 256: 1, 511: 1, 322: 1, 113: 1, 660: 1, 337: 1, 408: 1, 361: 1, 490: 1, 579: 1, 523: 1, 620: 1, 512: 1, 208: 1, 300: 1, 319: 1, 399: 1, 269: 1, 457: 1, 480: 1, 534: 1, 602: 1, 494: 1, 292: 1, 124: 1, 626: 1, 231: 1, 528: 1, 491: 1, 599: 1, 662: 1, 232: 1, 345: 1, 594: 1, 298: 1, 588: 1, 340: 1, 557: 1, 172: 1, 263: 1, 363: 1, 371: 1, 413: 1, 609: 1, 390: 1, 679: 1, 556: 1, 368: 1, 354: 1, 128: 1, 304: 1, 297: 1, 197: 1, 495: 1, 622: 1, 348: 1, 295: 1, 475: 1, 515: 1, 347: 1, 567: 1, 642: 1, 517: 1, 357: 1, 245: 1, 250: 1, 514: 1, 126: 1, 296: 1, 538: 1, 227: 1, 157: 1, 196: 1, 488: 1, 315: 1, 566: 1, 238: 1, 145: 1, 142: 1, 178: 1, 223: 1, 533: 1, 144: 1, 226: 1, 547: 1, 122: 1, 641: 1, 288: 1, 582: 1, 282: 1, 265: 1, 676: 1, 654: 1, 426: 1, 386: 1, 479: 1, 134: 1, 663: 1, 266: 1, 381: 1, 575: 1, 639: 1, 631: 1, 581: 1, 247: 1, 542: 1, 583: 1, 359: 1, 640: 1, 606: 1, 504: 1, 388: 1, 362: 1, 546: 1, 123: 1, 173: 1, 324: 1, 605: 1, 133: 1, 416: 1, 175: 1, 192: 1, 289: 1, 183: 1, 387: 1, 481: 1, 326: 1, 674: 1, 291: 1, 369: 1, 194: 1, 215: 1, 290: 1, 239: 1, 154: 1, 632: 1, 590: 1, 237: 1}), *** len(Counter(labels_)): 683
sigma: 364.14677290848573
random_state: 42
Finished getting the projection matrix
Projected data
kjl on train set took 0.022607 seconds
Projecting test data
kjl on test set took 0.002274 seconds
self.sigma: 364.14677290848573, q=0.3
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 32, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.521532 seconds
Total train time: 18.725641 <= std_train_time: 0, seek_train_time: 18.181502, proj_train_time: 0.022607, model_train_time: 0.521532
'decision_function()' starts at 2020-12-31 19:27:15
'decision_function()' ends at 2020-12-31 19:27:15. It takes 0.0 mins
Test model takes 0.000779 seconds
APC: 0.8943067560562912
AUC: 0.8666999999999999
Total test time: 0.003053 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.002274, model_test_time: 0.000779
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)



===1/5(n_repeats): {'detector_name': 'OCSVM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': False, 'is_nystrom': False, 'is_quickshift': False, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'OCSVM_qs': [0.3], 'OCSVM_nus': [0.5]}===
train: Counter({0: 5000}), val: Counter({0: 75, 1: 75})
'get_best_results()' starts at 2020-12-31 19:27:35
--is_gs: False, X_val == X_test
X_train.shape: (5000, 49), y_train: Counter({0: 5000})
X_val.shape: (600, 49), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 49), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:   20.6s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:   20.6s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
model_sigma: 397.8053110448618, model_gamma: 6.319152639978407e-06, q=0.3
model.get_params()L {'cache_size': 200, 'coef0': 0.0, 'degree': 3, 'gamma': 6.319152639978407e-06, 'kernel': 'rbf', 'max_iter': -1, 'nu': 0.5, 'random_state': None, 'shrinking': True, 'tol': 0.001, 'verbose': False}
Fitting model takes 1.60119 seconds
Total train time: 1.60119 <= std_train_time: 0, seek_train_time: 0, kjl_train_time: 0, model_train_time: 1.60119
Test model takes 0.103525 seconds
APC: 0.3570695704008199
AUC: 0.21377777777777782
Total test time: 0.103525 <= std_test_time: 0, seek_test_time: 0, kjl_test_time: 0, model_test_time: 0.103525
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
model_sigma: 397.8053110448618, model_gamma: 6.319152639978407e-06, q=0.3
model.get_params()L {'cache_size': 200, 'coef0': 0.0, 'degree': 3, 'gamma': 6.319152639978407e-06, 'kernel': 'rbf', 'max_iter': -1, 'nu': 0.5, 'random_state': None, 'shrinking': True, 'tol': 0.001, 'verbose': False}
Fitting model takes 1.442844 seconds
Total train time: 1.442844 <= std_train_time: 0, seek_train_time: 0, kjl_train_time: 0, model_train_time: 1.442844
Test model takes 0.097094 seconds
APC: 0.3570695704008199
AUC: 0.21377777777777782
Total test time: 0.097094 <= std_test_time: 0, seek_test_time: 0, kjl_test_time: 0, model_test_time: 0.097094
'get_best_results()' ends at 2020-12-31 19:27:41. It takes 0.1025 mins


===2/5(n_repeats): {'detector_name': 'OCSVM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': False, 'is_nystrom': False, 'is_quickshift': False, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'OCSVM_qs': [0.3], 'OCSVM_nus': [0.5]}===
train: Counter({0: 5000}), val: Counter({0: 75, 1: 75})
'get_best_results()' starts at 2020-12-31 19:27:41
--is_gs: False, X_val == X_test
X_train.shape: (5000, 49), y_train: Counter({0: 5000})
X_val.shape: (600, 49), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 49), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:    3.6s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:    3.6s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
model_sigma: 368.6397460634423, model_gamma: 7.358608258325533e-06, q=0.3
model.get_params()L {'cache_size': 200, 'coef0': 0.0, 'degree': 3, 'gamma': 7.358608258325533e-06, 'kernel': 'rbf', 'max_iter': -1, 'nu': 0.5, 'random_state': None, 'shrinking': True, 'tol': 0.001, 'verbose': False}
Fitting model takes 1.540769 seconds
Total train time: 1.540769 <= std_train_time: 0, seek_train_time: 0, kjl_train_time: 0, model_train_time: 1.540769
Test model takes 0.09741 seconds
APC: 0.3549127086927485
AUC: 0.20631111111111106
Total test time: 0.09741 <= std_test_time: 0, seek_test_time: 0, kjl_test_time: 0, model_test_time: 0.09741
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
model_sigma: 368.6397460634423, model_gamma: 7.358608258325533e-06, q=0.3
model.get_params()L {'cache_size': 200, 'coef0': 0.0, 'degree': 3, 'gamma': 7.358608258325533e-06, 'kernel': 'rbf', 'max_iter': -1, 'nu': 0.5, 'random_state': None, 'shrinking': True, 'tol': 0.001, 'verbose': False}
Fitting model takes 1.440454 seconds
Total train time: 1.440454 <= std_train_time: 0, seek_train_time: 0, kjl_train_time: 0, model_train_time: 1.440454
Test model takes 0.097434 seconds
APC: 0.3549127086927485
AUC: 0.20631111111111106
Total test time: 0.097434 <= std_test_time: 0, seek_test_time: 0, kjl_test_time: 0, model_test_time: 0.097434
'get_best_results()' ends at 2020-12-31 19:27:47. It takes 0.0989 mins


===3/5(n_repeats): {'detector_name': 'OCSVM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': False, 'is_nystrom': False, 'is_quickshift': False, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'OCSVM_qs': [0.3], 'OCSVM_nus': [0.5]}===
train: Counter({0: 5000}), val: Counter({0: 75, 1: 75})
'get_best_results()' starts at 2020-12-31 19:27:47
--is_gs: False, X_val == X_test
X_train.shape: (5000, 49), y_train: Counter({0: 5000})
X_val.shape: (600, 49), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 49), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:    3.4s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:    3.4s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
model_sigma: 409.72671843870285, model_gamma: 5.956778196315307e-06, q=0.3
model.get_params()L {'cache_size': 200, 'coef0': 0.0, 'degree': 3, 'gamma': 5.956778196315307e-06, 'kernel': 'rbf', 'max_iter': -1, 'nu': 0.5, 'random_state': None, 'shrinking': True, 'tol': 0.001, 'verbose': False}
Fitting model takes 1.547084 seconds
Total train time: 1.547084 <= std_train_time: 0, seek_train_time: 0, kjl_train_time: 0, model_train_time: 1.547084
Test model takes 0.097097 seconds
APC: 0.35679056010441834
AUC: 0.21266666666666664
Total test time: 0.097097 <= std_test_time: 0, seek_test_time: 0, kjl_test_time: 0, model_test_time: 0.097097
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
model_sigma: 409.72671843870285, model_gamma: 5.956778196315307e-06, q=0.3
model.get_params()L {'cache_size': 200, 'coef0': 0.0, 'degree': 3, 'gamma': 5.956778196315307e-06, 'kernel': 'rbf', 'max_iter': -1, 'nu': 0.5, 'random_state': None, 'shrinking': True, 'tol': 0.001, 'verbose': False}
Fitting model takes 1.44974 seconds
Total train time: 1.44974 <= std_train_time: 0, seek_train_time: 0, kjl_train_time: 0, model_train_time: 1.44974
Test model takes 0.096972 seconds
APC: 0.35679056010441834
AUC: 0.21266666666666664
Total test time: 0.096972 <= std_test_time: 0, seek_test_time: 0, kjl_test_time: 0, model_test_time: 0.096972
'get_best_results()' ends at 2020-12-31 19:27:53. It takes 0.1016 mins


===4/5(n_repeats): {'detector_name': 'OCSVM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': False, 'is_nystrom': False, 'is_quickshift': False, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'OCSVM_qs': [0.3], 'OCSVM_nus': [0.5]}===
train: Counter({0: 5000}), val: Counter({0: 75, 1: 75})
'get_best_results()' starts at 2020-12-31 19:27:53
--is_gs: False, X_val == X_test
X_train.shape: (5000, 49), y_train: Counter({0: 5000})
X_val.shape: (600, 49), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 49), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:    3.5s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:    3.5s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
model_sigma: 382.2356612039605, model_gamma: 6.8444348600489355e-06, q=0.3
model.get_params()L {'cache_size': 200, 'coef0': 0.0, 'degree': 3, 'gamma': 6.8444348600489355e-06, 'kernel': 'rbf', 'max_iter': -1, 'nu': 0.5, 'random_state': None, 'shrinking': True, 'tol': 0.001, 'verbose': False}
Fitting model takes 1.563791 seconds
Total train time: 1.563791 <= std_train_time: 0, seek_train_time: 0, kjl_train_time: 0, model_train_time: 1.563791
Test model takes 0.097595 seconds
APC: 0.35553137921367967
AUC: 0.2091
Total test time: 0.097595 <= std_test_time: 0, seek_test_time: 0, kjl_test_time: 0, model_test_time: 0.097595
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
model_sigma: 382.2356612039605, model_gamma: 6.8444348600489355e-06, q=0.3
model.get_params()L {'cache_size': 200, 'coef0': 0.0, 'degree': 3, 'gamma': 6.8444348600489355e-06, 'kernel': 'rbf', 'max_iter': -1, 'nu': 0.5, 'random_state': None, 'shrinking': True, 'tol': 0.001, 'verbose': False}
Fitting model takes 1.467885 seconds
Total train time: 1.467885 <= std_train_time: 0, seek_train_time: 0, kjl_train_time: 0, model_train_time: 1.467885
Test model takes 0.097497 seconds
APC: 0.35553137921367967
AUC: 0.2091
Total test time: 0.097497 <= std_test_time: 0, seek_test_time: 0, kjl_test_time: 0, model_test_time: 0.097497
'get_best_results()' ends at 2020-12-31 19:27:59. It takes 0.1023 mins


===5/5(n_repeats): {'detector_name': 'OCSVM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': False, 'is_nystrom': False, 'is_quickshift': False, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'OCSVM_qs': [0.3], 'OCSVM_nus': [0.5]}===
train: Counter({0: 5000}), val: Counter({0: 75, 1: 75})
'get_best_results()' starts at 2020-12-31 19:27:59
--is_gs: False, X_val == X_test
X_train.shape: (5000, 49), y_train: Counter({0: 5000})
X_val.shape: (600, 49), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 49), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:    3.5s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:    3.5s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
model_sigma: 387.9412582427242, model_gamma: 6.644588036319366e-06, q=0.3
model.get_params()L {'cache_size': 200, 'coef0': 0.0, 'degree': 3, 'gamma': 6.644588036319366e-06, 'kernel': 'rbf', 'max_iter': -1, 'nu': 0.5, 'random_state': None, 'shrinking': True, 'tol': 0.001, 'verbose': False}
Fitting model takes 1.599602 seconds
Total train time: 1.599602 <= std_train_time: 0, seek_train_time: 0, kjl_train_time: 0, model_train_time: 1.599602
Test model takes 0.101242 seconds
APC: 0.3562953786004882
AUC: 0.20685555555555551
Total test time: 0.101242 <= std_test_time: 0, seek_test_time: 0, kjl_test_time: 0, model_test_time: 0.101242
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
model_sigma: 387.9412582427242, model_gamma: 6.644588036319366e-06, q=0.3
model.get_params()L {'cache_size': 200, 'coef0': 0.0, 'degree': 3, 'gamma': 6.644588036319366e-06, 'kernel': 'rbf', 'max_iter': -1, 'nu': 0.5, 'random_state': None, 'shrinking': True, 'tol': 0.001, 'verbose': False}
Fitting model takes 1.457686 seconds
Total train time: 1.457686 <= std_train_time: 0, seek_train_time: 0, kjl_train_time: 0, model_train_time: 1.457686
Test model takes 0.097286 seconds
APC: 0.3562953786004882
AUC: 0.20685555555555551
Total test time: 0.097286 <= std_test_time: 0, seek_test_time: 0, kjl_test_time: 0, model_test_time: 0.097286
'get_best_results()' ends at 2020-12-31 19:28:05. It takes 0.1012 mins
single_main.kwargs: dict_items([('data', (('UNB5', 'speedup/data/src_dst/iat_size/UNB5/Xy-normal-abnormal.dat'), (array([[5.00679016e-06, 7.00000000e+01, 9.53674316e-07, ...,
        9.53674316e-07, 7.00000000e+01, 9.53674316e-07],
       [9.53674316e-07, 7.60000000e+01, 9.88418102e-01, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
       [2.86102295e-06, 9.20000000e+01, 9.20000000e+01, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
       ...,
       [5.28975964e-01, 6.60000000e+01, 5.15614986e-01, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
       [5.13157129e-01, 6.60000000e+01, 5.15626907e-01, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
       [5.28997898e-01, 6.60000000e+01, 5.15608072e-01, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]]), array(['normal_0', 'normal_0', 'normal_0', ..., 'abnormal_0',
       'abnormal_0', 'abnormal_0'], dtype='<U10')))), ('params', ('case2', {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': False, 'is_nystrom': False, 'is_quickshift': False, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [1]}))])
X.shape: (30855, 49), y: Counter({0: 30286, 1: 569})
left: Counter({0: 29986, 1: 269}), test: Counter({0: 300, 1: 300})


===1/5(n_repeats): {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': False, 'is_nystrom': False, 'is_quickshift': False, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [1]}===
train: Counter({0: 5000}), val: Counter({0: 75, 1: 75})
'get_best_results()' starts at 2020-12-31 19:28:05
--is_gs: False, X_val == X_test
X_train.shape: (5000, 49), y_train: Counter({0: 5000})
X_val.shape: (600, 49), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 49), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:    3.6s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:    3.6s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.01756 seconds
Total train time: 0.01756 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0, model_train_time: 0.01756
'decision_function()' starts at 2020-12-31 19:28:07
'decision_function()' ends at 2020-12-31 19:28:07. It takes 0.0 mins
Test model takes 0.000324 seconds
APC: 0.49081728103003097
AUC: 0.5146333333333333
Total test time: 0.000324 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0, model_test_time: 0.000324
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.053265 seconds
Total train time: 0.053265 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0, model_train_time: 0.053265
'decision_function()' starts at 2020-12-31 19:28:07
'decision_function()' ends at 2020-12-31 19:28:07. It takes 0.0 mins
Test model takes 0.000728 seconds
APC: 0.49081728103003097
AUC: 0.5146333333333333
Total test time: 0.000728 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0, model_test_time: 0.000728
'get_best_results()' ends at 2020-12-31 19:28:07. It takes 0.0257 mins


===2/5(n_repeats): {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': False, 'is_nystrom': False, 'is_quickshift': False, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [1]}===
train: Counter({0: 5000}), val: Counter({0: 75, 1: 75})
'get_best_results()' starts at 2020-12-31 19:28:07
--is_gs: False, X_val == X_test
X_train.shape: (5000, 49), y_train: Counter({0: 5000})
X_val.shape: (600, 49), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 49), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:    1.2s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:    1.2s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.017615 seconds
Total train time: 0.017615 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0, model_train_time: 0.017615
'decision_function()' starts at 2020-12-31 19:28:08
'decision_function()' ends at 2020-12-31 19:28:08. It takes 0.0 mins
Test model takes 0.000335 seconds
APC: 0.4864024768377473
AUC: 0.5016444444444444
Total test time: 0.000335 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0, model_test_time: 0.000335
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.041315 seconds
Total train time: 0.041315 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0, model_train_time: 0.041315
'decision_function()' starts at 2020-12-31 19:28:08
'decision_function()' ends at 2020-12-31 19:28:08. It takes 0.0 mins
Test model takes 0.000997 seconds
APC: 0.4864024768377473
AUC: 0.5016444444444444
Total test time: 0.000997 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0, model_test_time: 0.000997
'get_best_results()' ends at 2020-12-31 19:28:08. It takes 0.0246 mins


===3/5(n_repeats): {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': False, 'is_nystrom': False, 'is_quickshift': False, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [1]}===
train: Counter({0: 5000}), val: Counter({0: 75, 1: 75})
'get_best_results()' starts at 2020-12-31 19:28:08
--is_gs: False, X_val == X_test
X_train.shape: (5000, 49), y_train: Counter({0: 5000})
X_val.shape: (600, 49), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 49), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:    1.2s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:    1.2s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.017459 seconds
Total train time: 0.017459 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0, model_train_time: 0.017459
'decision_function()' starts at 2020-12-31 19:28:10
'decision_function()' ends at 2020-12-31 19:28:10. It takes 0.0 mins
Test model takes 0.000326 seconds
APC: 0.49193501556147085
AUC: 0.513611111111111
Total test time: 0.000326 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0, model_test_time: 0.000326
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.039053 seconds
Total train time: 0.039053 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0, model_train_time: 0.039053
'decision_function()' starts at 2020-12-31 19:28:10
'decision_function()' ends at 2020-12-31 19:28:10. It takes 0.0 mins
Test model takes 0.000815 seconds
APC: 0.49193501556147085
AUC: 0.513611111111111
Total test time: 0.000815 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0, model_test_time: 0.000815
'get_best_results()' ends at 2020-12-31 19:28:10. It takes 0.0263 mins


===4/5(n_repeats): {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': False, 'is_nystrom': False, 'is_quickshift': False, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [1]}===
train: Counter({0: 5000}), val: Counter({0: 75, 1: 75})
'get_best_results()' starts at 2020-12-31 19:28:10
--is_gs: False, X_val == X_test
X_train.shape: (5000, 49), y_train: Counter({0: 5000})
X_val.shape: (600, 49), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 49), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:    1.3s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:    1.3s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.017579 seconds
Total train time: 0.017579 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0, model_train_time: 0.017579
'decision_function()' starts at 2020-12-31 19:28:12
'decision_function()' ends at 2020-12-31 19:28:12. It takes 0.0 mins
Test model takes 0.00032 seconds
APC: 0.493300646000978
AUC: 0.5094111111111111
Total test time: 0.00032 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0, model_test_time: 0.00032
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.046603 seconds
Total train time: 0.046603 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0, model_train_time: 0.046603
'decision_function()' starts at 2020-12-31 19:28:12
'decision_function()' ends at 2020-12-31 19:28:12. It takes 0.0 mins
Test model takes 0.000802 seconds
APC: 0.493300646000978
AUC: 0.5094111111111111
Total test time: 0.000802 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0, model_test_time: 0.000802
'get_best_results()' ends at 2020-12-31 19:28:12. It takes 0.0265 mins


===5/5(n_repeats): {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': False, 'is_nystrom': False, 'is_quickshift': False, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [1]}===
train: Counter({0: 5000}), val: Counter({0: 75, 1: 75})
'get_best_results()' starts at 2020-12-31 19:28:12
--is_gs: False, X_val == X_test
X_train.shape: (5000, 49), y_train: Counter({0: 5000})
X_val.shape: (600, 49), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 49), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:    1.3s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:    1.3s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.017414 seconds
Total train time: 0.017414 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0, model_train_time: 0.017414
'decision_function()' starts at 2020-12-31 19:28:13
'decision_function()' ends at 2020-12-31 19:28:13. It takes 0.0 mins
Test model takes 0.000325 seconds
APC: 0.48627415701091914
AUC: 0.5094555555555556
Total test time: 0.000325 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0, model_test_time: 0.000325
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.046998 seconds
Total train time: 0.046998 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0, model_train_time: 0.046998
'decision_function()' starts at 2020-12-31 19:28:13
'decision_function()' ends at 2020-12-31 19:28:13. It takes 0.0 mins
Test model takes 0.00093 seconds
APC: 0.48627415701091914
AUC: 0.5094555555555556
Total test time: 0.00093 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0, model_test_time: 0.00093
'get_best_results()' ends at 2020-12-31 19:28:13. It takes 0.024 mins
single_main.kwargs: dict_items([('data', (('UNB5', 'speedup/data/src_dst/iat_size/UNB5/Xy-normal-abnormal.dat'), (array([[5.00679016e-06, 7.00000000e+01, 9.53674316e-07, ...,
        9.53674316e-07, 7.00000000e+01, 9.53674316e-07],
       [9.53674316e-07, 7.60000000e+01, 9.88418102e-01, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
       [2.86102295e-06, 9.20000000e+01, 9.20000000e+01, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
       ...,
       [5.28975964e-01, 6.60000000e+01, 5.15614986e-01, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
       [5.13157129e-01, 6.60000000e+01, 5.15626907e-01, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
       [5.28997898e-01, 6.60000000e+01, 5.15608072e-01, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]]), array(['normal_0', 'normal_0', 'normal_0', ..., 'abnormal_0',
       'abnormal_0', 'abnormal_0'], dtype='<U10')))), ('params', ('case3', {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': True, 'is_nystrom': False, 'is_quickshift': False, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [1], 'kjl_qs': [0.3], 'kjl_ns': [100], 'kjl_ds': [5]}))])
X.shape: (30855, 49), y: Counter({0: 30286, 1: 569})
left: Counter({0: 29986, 1: 269}), test: Counter({0: 300, 1: 300})


===1/5(n_repeats): {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': True, 'is_nystrom': False, 'is_quickshift': False, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [1], 'kjl_qs': [0.3], 'kjl_ns': [100], 'kjl_ds': [5]}===
train: Counter({0: 5000}), val: Counter({0: 75, 1: 75})
'get_best_results()' starts at 2020-12-31 19:28:13
--is_gs: False, X_val == X_test
X_train.shape: (5000, 49), y_train: Counter({0: 5000})
X_val.shape: (600, 49), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 49), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:    1.2s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:    1.2s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
sigma: 397.8053110448618
random_state: 42
Finished getting the projection matrix
Projected data
kjl on train set took 0.672878 seconds
Projecting test data
kjl on test set took 0.00257 seconds
self.sigma: 397.8053110448618, q=0.3
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.005109 seconds
Total train time: 0.677987 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0.672878, model_train_time: 0.005109
'decision_function()' starts at 2020-12-31 19:28:15
'decision_function()' ends at 2020-12-31 19:28:15. It takes 0.0 mins
Test model takes 0.000273 seconds
APC: 0.33532097274404227
AUC: 0.15794444444444444
Total test time: 0.002843 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.00257, model_test_time: 0.000273
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
sigma: 397.8053110448618
random_state: 42
Finished getting the projection matrix
Projected data
kjl on train set took 0.78626 seconds
Projecting test data
kjl on test set took 0.004072 seconds
self.sigma: 397.8053110448618, q=0.3
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.008141 seconds
Total train time: 0.7944009999999999 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0.78626, model_train_time: 0.008141
'decision_function()' starts at 2020-12-31 19:28:16
'decision_function()' ends at 2020-12-31 19:28:16. It takes 0.0 mins
Test model takes 0.000407 seconds
APC: 0.33532097274404227
AUC: 0.15797777777777777
Total test time: 0.004479 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.004072, model_test_time: 0.000407
'get_best_results()' ends at 2020-12-31 19:28:16. It takes 0.0497 mins


===2/5(n_repeats): {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': True, 'is_nystrom': False, 'is_quickshift': False, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [1], 'kjl_qs': [0.3], 'kjl_ns': [100], 'kjl_ds': [5]}===
train: Counter({0: 5000}), val: Counter({0: 75, 1: 75})
'get_best_results()' starts at 2020-12-31 19:28:16
--is_gs: False, X_val == X_test
X_train.shape: (5000, 49), y_train: Counter({0: 5000})
X_val.shape: (600, 49), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 49), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:    1.9s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:    1.9s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
sigma: 368.6397460634423
random_state: 42
Finished getting the projection matrix
Projected data
kjl on train set took 0.713038 seconds
Projecting test data
kjl on test set took 0.002567 seconds
self.sigma: 368.6397460634423, q=0.3
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.004996 seconds
Total train time: 0.718034 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0.713038, model_train_time: 0.004996
'decision_function()' starts at 2020-12-31 19:28:18
'decision_function()' ends at 2020-12-31 19:28:18. It takes 0.0 mins
Test model takes 0.000269 seconds
APC: 0.3724771358014257
AUC: 0.28811111111111115
Total test time: 0.002836 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.002567, model_test_time: 0.000269
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
sigma: 368.6397460634423
random_state: 42
Finished getting the projection matrix
Projected data
kjl on train set took 0.732553 seconds
Projecting test data
kjl on test set took 0.003681 seconds
self.sigma: 368.6397460634423, q=0.3
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.008004 seconds
Total train time: 0.740557 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0.732553, model_train_time: 0.008004
'decision_function()' starts at 2020-12-31 19:28:19
'decision_function()' ends at 2020-12-31 19:28:19. It takes 0.0 mins
Test model takes 0.000402 seconds
APC: 0.3724771358014257
AUC: 0.28811111111111115
Total test time: 0.004083 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.003681, model_test_time: 0.000402
'get_best_results()' ends at 2020-12-31 19:28:19. It takes 0.0494 mins


===3/5(n_repeats): {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': True, 'is_nystrom': False, 'is_quickshift': False, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [1], 'kjl_qs': [0.3], 'kjl_ns': [100], 'kjl_ds': [5]}===
train: Counter({0: 5000}), val: Counter({0: 75, 1: 75})
'get_best_results()' starts at 2020-12-31 19:28:19
--is_gs: False, X_val == X_test
X_train.shape: (5000, 49), y_train: Counter({0: 5000})
X_val.shape: (600, 49), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 49), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:    2.0s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:    2.0s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
sigma: 409.72671843870285
random_state: 42
Finished getting the projection matrix
Projected data
kjl on train set took 0.696895 seconds
Projecting test data
kjl on test set took 0.002556 seconds
self.sigma: 409.72671843870285, q=0.3
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.005076 seconds
Total train time: 0.701971 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0.696895, model_train_time: 0.005076
'decision_function()' starts at 2020-12-31 19:28:21
'decision_function()' ends at 2020-12-31 19:28:21. It takes 0.0 mins
Test model takes 0.000262 seconds
APC: 0.3333579777223948
AUC: 0.15032222222222222
Total test time: 0.002818 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.002556, model_test_time: 0.000262
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
sigma: 409.72671843870285
random_state: 42
Finished getting the projection matrix
Projected data
kjl on train set took 0.814844 seconds
Projecting test data
kjl on test set took 0.002947 seconds
self.sigma: 409.72671843870285, q=0.3
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.005716 seconds
Total train time: 0.8205600000000001 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0.814844, model_train_time: 0.005716
'decision_function()' starts at 2020-12-31 19:28:22
'decision_function()' ends at 2020-12-31 19:28:22. It takes 0.0 mins
Test model takes 0.000307 seconds
APC: 0.3333579777223948
AUC: 0.15032222222222222
Total test time: 0.003254 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.002947, model_test_time: 0.000307
'get_best_results()' ends at 2020-12-31 19:28:22. It takes 0.0508 mins


===4/5(n_repeats): {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': True, 'is_nystrom': False, 'is_quickshift': False, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [1], 'kjl_qs': [0.3], 'kjl_ns': [100], 'kjl_ds': [5]}===
train: Counter({0: 5000}), val: Counter({0: 75, 1: 75})
'get_best_results()' starts at 2020-12-31 19:28:22
--is_gs: False, X_val == X_test
X_train.shape: (5000, 49), y_train: Counter({0: 5000})
X_val.shape: (600, 49), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 49), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:    2.0s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:    2.0s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
sigma: 382.2356612039605
random_state: 42
Finished getting the projection matrix
Projected data
kjl on train set took 0.714176 seconds
Projecting test data
kjl on test set took 0.002551 seconds
self.sigma: 382.2356612039605, q=0.3
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.004983 seconds
Total train time: 0.719159 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0.714176, model_train_time: 0.004983
'decision_function()' starts at 2020-12-31 19:28:25
'decision_function()' ends at 2020-12-31 19:28:25. It takes 0.0 mins
Test model takes 0.000263 seconds
APC: 0.3329161170687447
AUC: 0.14675555555555556
Total test time: 0.0028139999999999997 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.002551, model_test_time: 0.000263
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
sigma: 382.2356612039605
random_state: 42
Finished getting the projection matrix
Projected data
kjl on train set took 0.795504 seconds
Projecting test data
kjl on test set took 0.002828 seconds
self.sigma: 382.2356612039605, q=0.3
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.005884 seconds
Total train time: 0.801388 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0.795504, model_train_time: 0.005884
'decision_function()' starts at 2020-12-31 19:28:25
'decision_function()' ends at 2020-12-31 19:28:25. It takes 0.0 mins
Test model takes 0.000331 seconds
APC: 0.3329161170687447
AUC: 0.14675555555555556
Total test time: 0.003159 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.002828, model_test_time: 0.000331
'get_best_results()' ends at 2020-12-31 19:28:25. It takes 0.051 mins


===5/5(n_repeats): {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': True, 'is_nystrom': False, 'is_quickshift': False, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [1], 'kjl_qs': [0.3], 'kjl_ns': [100], 'kjl_ds': [5]}===
train: Counter({0: 5000}), val: Counter({0: 75, 1: 75})
'get_best_results()' starts at 2020-12-31 19:28:25
--is_gs: False, X_val == X_test
X_train.shape: (5000, 49), y_train: Counter({0: 5000})
X_val.shape: (600, 49), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 49), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:    2.0s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:    2.0s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
sigma: 387.9412582427242
random_state: 42
Finished getting the projection matrix
Projected data
kjl on train set took 0.691954 seconds
Projecting test data
kjl on test set took 0.00255 seconds
self.sigma: 387.9412582427242, q=0.3
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.005252 seconds
Total train time: 0.697206 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0.691954, model_train_time: 0.005252
'decision_function()' starts at 2020-12-31 19:28:27
'decision_function()' ends at 2020-12-31 19:28:27. It takes 0.0 mins
Test model takes 0.000271 seconds
APC: 0.34008269819706805
AUC: 0.17704444444444445
Total test time: 0.002821 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.00255, model_test_time: 0.000271
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
sigma: 387.9412582427242
random_state: 42
Finished getting the projection matrix
Projected data
kjl on train set took 0.700816 seconds
Projecting test data
kjl on test set took 0.003664 seconds
self.sigma: 387.9412582427242, q=0.3
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.008214 seconds
Total train time: 0.70903 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0.700816, model_train_time: 0.008214
'decision_function()' starts at 2020-12-31 19:28:28
'decision_function()' ends at 2020-12-31 19:28:28. It takes 0.0 mins
Test model takes 0.000408 seconds
APC: 0.34008269819706805
AUC: 0.17704444444444445
Total test time: 0.004072 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.003664, model_test_time: 0.000408
'get_best_results()' ends at 2020-12-31 19:28:28. It takes 0.0471 mins
single_main.kwargs: dict_items([('data', (('UNB5', 'speedup/data/src_dst/iat_size/UNB5/Xy-normal-abnormal.dat'), (array([[5.00679016e-06, 7.00000000e+01, 9.53674316e-07, ...,
        9.53674316e-07, 7.00000000e+01, 9.53674316e-07],
       [9.53674316e-07, 7.60000000e+01, 9.88418102e-01, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
       [2.86102295e-06, 9.20000000e+01, 9.20000000e+01, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
       ...,
       [5.28975964e-01, 6.60000000e+01, 5.15614986e-01, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
       [5.13157129e-01, 6.60000000e+01, 5.15626907e-01, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
       [5.28997898e-01, 6.60000000e+01, 5.15608072e-01, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]]), array(['normal_0', 'normal_0', 'normal_0', ..., 'abnormal_0',
       'abnormal_0', 'abnormal_0'], dtype='<U10')))), ('params', ('case4', {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': False, 'is_nystrom': True, 'is_quickshift': False, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [1], 'nystrom_qs': [0.3], 'nystrom_ns': [100], 'nystrom_ds': [5]}))])
X.shape: (30855, 49), y: Counter({0: 30286, 1: 569})
left: Counter({0: 29986, 1: 269}), test: Counter({0: 300, 1: 300})


===1/5(n_repeats): {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': False, 'is_nystrom': True, 'is_quickshift': False, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [1], 'nystrom_qs': [0.3], 'nystrom_ns': [100], 'nystrom_ds': [5]}===
train: Counter({0: 5000}), val: Counter({0: 75, 1: 75})
'get_best_results()' starts at 2020-12-31 19:28:28
--is_gs: False, X_val == X_test
X_train.shape: (5000, 49), y_train: Counter({0: 5000})
X_val.shape: (600, 49), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 49), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:    1.9s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:    1.9s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
sigma: 397.8053110448618
nystrom on train set took 0.721571 seconds
Projecting test data
nystrom on test set took 0.002492 seconds
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.005108 seconds
Total train time: 0.726679 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0.721571, model_train_time: 0.005108
'decision_function()' starts at 2020-12-31 19:28:30
'decision_function()' ends at 2020-12-31 19:28:30. It takes 0.0 mins
Test model takes 0.000265 seconds
APC: 0.520467800491834
AUC: 0.5846555555555556
Total test time: 0.002757 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.002492, model_test_time: 0.000265
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
sigma: 397.8053110448618
nystrom on train set took 0.760953 seconds
Projecting test data
nystrom on test set took 0.004336 seconds
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.008237 seconds
Total train time: 0.76919 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0.760953, model_train_time: 0.008237
'decision_function()' starts at 2020-12-31 19:28:31
'decision_function()' ends at 2020-12-31 19:28:31. It takes 0.0 mins
Test model takes 0.000415 seconds
APC: 0.520467800491834
AUC: 0.5846555555555556
Total test time: 0.004751 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.004336, model_test_time: 0.000415
'get_best_results()' ends at 2020-12-31 19:28:31. It takes 0.0488 mins


===2/5(n_repeats): {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': False, 'is_nystrom': True, 'is_quickshift': False, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [1], 'nystrom_qs': [0.3], 'nystrom_ns': [100], 'nystrom_ds': [5]}===
train: Counter({0: 5000}), val: Counter({0: 75, 1: 75})
'get_best_results()' starts at 2020-12-31 19:28:31
--is_gs: False, X_val == X_test
X_train.shape: (5000, 49), y_train: Counter({0: 5000})
X_val.shape: (600, 49), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 49), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:    1.9s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:    1.9s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
sigma: 368.6397460634423
nystrom on train set took 0.715237 seconds
Projecting test data
nystrom on test set took 0.002465 seconds
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.00502 seconds
Total train time: 0.720257 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0.715237, model_train_time: 0.00502
'decision_function()' starts at 2020-12-31 19:28:33
'decision_function()' ends at 2020-12-31 19:28:33. It takes 0.0 mins
Test model takes 0.000251 seconds
APC: 0.5157536143306615
AUC: 0.5928222222222223
Total test time: 0.002716 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.002465, model_test_time: 0.000251
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
sigma: 368.6397460634423
nystrom on train set took 0.730861 seconds
Projecting test data
nystrom on test set took 0.004378 seconds
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.008179 seconds
Total train time: 0.73904 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0.730861, model_train_time: 0.008179
'decision_function()' starts at 2020-12-31 19:28:34
'decision_function()' ends at 2020-12-31 19:28:34. It takes 0.0 mins
Test model takes 0.000412 seconds
APC: 0.5157536143306615
AUC: 0.5928222222222223
Total test time: 0.00479 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.004378, model_test_time: 0.000412
'get_best_results()' ends at 2020-12-31 19:28:34. It takes 0.05 mins


===3/5(n_repeats): {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': False, 'is_nystrom': True, 'is_quickshift': False, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [1], 'nystrom_qs': [0.3], 'nystrom_ns': [100], 'nystrom_ds': [5]}===
train: Counter({0: 5000}), val: Counter({0: 75, 1: 75})
'get_best_results()' starts at 2020-12-31 19:28:34
--is_gs: False, X_val == X_test
X_train.shape: (5000, 49), y_train: Counter({0: 5000})
X_val.shape: (600, 49), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 49), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:    2.0s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:    2.0s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
sigma: 409.72671843870285
nystrom on train set took 0.738819 seconds
Projecting test data
nystrom on test set took 0.002484 seconds
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.005083 seconds
Total train time: 0.743902 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0.738819, model_train_time: 0.005083
'decision_function()' starts at 2020-12-31 19:28:36
'decision_function()' ends at 2020-12-31 19:28:36. It takes 0.0 mins
Test model takes 0.000259 seconds
APC: 0.4852703449108681
AUC: 0.5538333333333334
Total test time: 0.002743 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.002484, model_test_time: 0.000259
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
sigma: 409.72671843870285
nystrom on train set took 0.757988 seconds
Projecting test data
nystrom on test set took 0.003288 seconds
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.005847 seconds
Total train time: 0.763835 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0.757988, model_train_time: 0.005847
'decision_function()' starts at 2020-12-31 19:28:37
'decision_function()' ends at 2020-12-31 19:28:37. It takes 0.0 mins
Test model takes 0.000313 seconds
APC: 0.4852703449108681
AUC: 0.5538333333333334
Total test time: 0.003601 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.003288, model_test_time: 0.000313
'get_best_results()' ends at 2020-12-31 19:28:37. It takes 0.0493 mins


===4/5(n_repeats): {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': False, 'is_nystrom': True, 'is_quickshift': False, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [1], 'nystrom_qs': [0.3], 'nystrom_ns': [100], 'nystrom_ds': [5]}===
train: Counter({0: 5000}), val: Counter({0: 75, 1: 75})
'get_best_results()' starts at 2020-12-31 19:28:37
--is_gs: False, X_val == X_test
X_train.shape: (5000, 49), y_train: Counter({0: 5000})
X_val.shape: (600, 49), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 49), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:    1.9s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:    1.9s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
sigma: 382.2356612039605
nystrom on train set took 0.71967 seconds
Projecting test data
nystrom on test set took 0.002479 seconds
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.005198 seconds
Total train time: 0.7248680000000001 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0.71967, model_train_time: 0.005198
'decision_function()' starts at 2020-12-31 19:28:39
'decision_function()' ends at 2020-12-31 19:28:39. It takes 0.0 mins
Test model takes 0.000259 seconds
APC: 0.5494481337790418
AUC: 0.6237222222222223
Total test time: 0.002738 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.002479, model_test_time: 0.000259
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
sigma: 382.2356612039605
nystrom on train set took 0.825801 seconds
Projecting test data
nystrom on test set took 0.003305 seconds
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.005763 seconds
Total train time: 0.831564 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0.825801, model_train_time: 0.005763
'decision_function()' starts at 2020-12-31 19:28:40
'decision_function()' ends at 2020-12-31 19:28:40. It takes 0.0 mins
Test model takes 0.000299 seconds
APC: 0.5494481337790418
AUC: 0.6237222222222223
Total test time: 0.0036040000000000004 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.003305, model_test_time: 0.000299
'get_best_results()' ends at 2020-12-31 19:28:40. It takes 0.0498 mins


===5/5(n_repeats): {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': False, 'is_nystrom': True, 'is_quickshift': False, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [1], 'nystrom_qs': [0.3], 'nystrom_ns': [100], 'nystrom_ds': [5]}===
train: Counter({0: 5000}), val: Counter({0: 75, 1: 75})
'get_best_results()' starts at 2020-12-31 19:28:40
--is_gs: False, X_val == X_test
X_train.shape: (5000, 49), y_train: Counter({0: 5000})
X_val.shape: (600, 49), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 49), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:    1.9s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:    1.9s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
sigma: 387.9412582427242
nystrom on train set took 0.698089 seconds
Projecting test data
nystrom on test set took 0.002492 seconds
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.004994 seconds
Total train time: 0.703083 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0.698089, model_train_time: 0.004994
'decision_function()' starts at 2020-12-31 19:28:42
'decision_function()' ends at 2020-12-31 19:28:42. It takes 0.0 mins
Test model takes 0.000254 seconds
APC: 0.5331359521139905
AUC: 0.5771444444444445
Total test time: 0.0027459999999999997 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.002492, model_test_time: 0.000254
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
sigma: 387.9412582427242
nystrom on train set took 0.696664 seconds
Projecting test data
nystrom on test set took 0.003043 seconds
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.005858 seconds
Total train time: 0.702522 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0.696664, model_train_time: 0.005858
'decision_function()' starts at 2020-12-31 19:28:43
'decision_function()' ends at 2020-12-31 19:28:43. It takes 0.0 mins
Test model takes 0.000313 seconds
APC: 0.5331359521139905
AUC: 0.5771444444444445
Total test time: 0.003356 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.003043, model_test_time: 0.000313
'get_best_results()' ends at 2020-12-31 19:28:43. It takes 0.0493 mins
single_main.kwargs: dict_items([('data', (('UNB5', 'speedup/data/src_dst/iat_size/UNB5/Xy-normal-abnormal.dat'), (array([[5.00679016e-06, 7.00000000e+01, 9.53674316e-07, ...,
        9.53674316e-07, 7.00000000e+01, 9.53674316e-07],
       [9.53674316e-07, 7.60000000e+01, 9.88418102e-01, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
       [2.86102295e-06, 9.20000000e+01, 9.20000000e+01, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
       ...,
       [5.28975964e-01, 6.60000000e+01, 5.15614986e-01, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
       [5.13157129e-01, 6.60000000e+01, 5.15626907e-01, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
       [5.28997898e-01, 6.60000000e+01, 5.15608072e-01, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]]), array(['normal_0', 'normal_0', 'normal_0', ..., 'abnormal_0',
       'abnormal_0', 'abnormal_0'], dtype='<U10')))), ('params', ('case5', {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': True, 'is_nystrom': False, 'is_quickshift': True, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [], 'kjl_qs': [0.3], 'kjl_ns': [100], 'kjl_ds': [5], 'quickshift_ks': [500], 'quickshift_betas': [0.9]}))])
X.shape: (30855, 49), y: Counter({0: 30286, 1: 569})
left: Counter({0: 29986, 1: 269}), test: Counter({0: 300, 1: 300})


===1/5(n_repeats): {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': True, 'is_nystrom': False, 'is_quickshift': True, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [], 'kjl_qs': [0.3], 'kjl_ns': [100], 'kjl_ds': [5], 'quickshift_ks': [500], 'quickshift_betas': [0.9]}===
train: Counter({0: 5000}), val: Counter({0: 75, 1: 75})
'get_best_results()' starts at 2020-12-31 19:28:43
--is_gs: False, X_val == X_test
X_train.shape: (5000, 49), y_train: Counter({0: 5000})
X_val.shape: (600, 49), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 49), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:    2.0s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:    2.0s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
number of neighbors in k-NN: 500
*** quick_training_time: 2.899981, ignore_clusters_time: 0.001518
--all clusters (17) when (k:(500), beta:0.9). However, only 5 clusters have at least 10 datapoints. Counter(labels_): Counter({0: 2664, 2: 1425, 1: 705, 3: 105, 4: 85, 16: 3, 8: 2, 13: 2, 5: 1, 6: 1, 7: 1, 9: 1, 10: 1, 11: 1, 12: 1, 14: 1, 15: 1}), *** len(Counter(labels_)): 17
sigma: 397.8053110448618
random_state: 42
Finished getting the projection matrix
Projected data
kjl on train set took 0.722298 seconds
Projecting test data
kjl on test set took 0.001969 seconds
self.sigma: 397.8053110448618, q=0.3
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 5, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.133368 seconds
Total train time: 3.7556469999999997 <= std_train_time: 0, seek_train_time: 2.899981, proj_train_time: 0.722298, model_train_time: 0.133368
'decision_function()' starts at 2020-12-31 19:28:48
'decision_function()' ends at 2020-12-31 19:28:48. It takes 0.0 mins
Test model takes 0.000402 seconds
APC: 0.7691644149584163
AUC: 0.7322222222222223
Total test time: 0.002371 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.001969, model_test_time: 0.000402
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
number of neighbors in k-NN: 500
*** quick_training_time: 2.915642, ignore_clusters_time: 0.00164
--all clusters (17) when (k:(500), beta:0.9). However, only 5 clusters have at least 10 datapoints. Counter(labels_): Counter({0: 2664, 2: 1425, 1: 705, 3: 105, 4: 85, 16: 3, 8: 2, 13: 2, 5: 1, 6: 1, 7: 1, 9: 1, 10: 1, 11: 1, 12: 1, 14: 1, 15: 1}), *** len(Counter(labels_)): 17
sigma: 397.8053110448618
random_state: 42
Finished getting the projection matrix
Projected data
kjl on train set took 0.783065 seconds
Projecting test data
kjl on test set took 0.002957 seconds
self.sigma: 397.8053110448618, q=0.3
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 5, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.150851 seconds
Total train time: 3.849558 <= std_train_time: 0, seek_train_time: 2.915642, proj_train_time: 0.783065, model_train_time: 0.150851
'decision_function()' starts at 2020-12-31 19:28:52
'decision_function()' ends at 2020-12-31 19:28:52. It takes 0.0 mins
Test model takes 0.000395 seconds
APC: 0.7691644149584163
AUC: 0.7322222222222223
Total test time: 0.003352 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.002957, model_test_time: 0.000395
'get_best_results()' ends at 2020-12-31 19:28:52. It takes 0.1529 mins


===2/5(n_repeats): {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': True, 'is_nystrom': False, 'is_quickshift': True, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [], 'kjl_qs': [0.3], 'kjl_ns': [100], 'kjl_ds': [5], 'quickshift_ks': [500], 'quickshift_betas': [0.9]}===
train: Counter({0: 5000}), val: Counter({0: 75, 1: 75})
'get_best_results()' starts at 2020-12-31 19:28:52
--is_gs: False, X_val == X_test
X_train.shape: (5000, 49), y_train: Counter({0: 5000})
X_val.shape: (600, 49), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 49), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:    5.1s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:    5.1s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
number of neighbors in k-NN: 500
*** quick_training_time: 2.862092, ignore_clusters_time: 0.001467
--all clusters (17) when (k:(500), beta:0.9). However, only 5 clusters have at least 10 datapoints. Counter(labels_): Counter({0: 2619, 1: 1460, 2: 730, 3: 97, 4: 75, 8: 3, 9: 3, 10: 3, 13: 2, 5: 1, 6: 1, 7: 1, 11: 1, 12: 1, 14: 1, 15: 1, 16: 1}), *** len(Counter(labels_)): 17
sigma: 368.6397460634423
random_state: 42
Finished getting the projection matrix
Projected data
kjl on train set took 0.67463 seconds
Projecting test data
kjl on test set took 0.00195 seconds
self.sigma: 368.6397460634423, q=0.3
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 5, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.100038 seconds
Total train time: 3.63676 <= std_train_time: 0, seek_train_time: 2.862092, proj_train_time: 0.67463, model_train_time: 0.100038
'decision_function()' starts at 2020-12-31 19:28:57
'decision_function()' ends at 2020-12-31 19:28:57. It takes 0.0 mins
Test model takes 0.000401 seconds
APC: 0.8618619709000512
AUC: 0.8787222222222224
Total test time: 0.002351 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.00195, model_test_time: 0.000401
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
number of neighbors in k-NN: 500
*** quick_training_time: 2.928619, ignore_clusters_time: 0.001586
--all clusters (17) when (k:(500), beta:0.9). However, only 5 clusters have at least 10 datapoints. Counter(labels_): Counter({0: 2619, 1: 1460, 2: 730, 3: 97, 4: 75, 8: 3, 9: 3, 10: 3, 13: 2, 5: 1, 6: 1, 7: 1, 11: 1, 12: 1, 14: 1, 15: 1, 16: 1}), *** len(Counter(labels_)): 17
sigma: 368.6397460634423
random_state: 42
Finished getting the projection matrix
Projected data
kjl on train set took 0.80587 seconds
Projecting test data
kjl on test set took 0.002751 seconds
self.sigma: 368.6397460634423, q=0.3
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 5, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.114666 seconds
Total train time: 3.849155 <= std_train_time: 0, seek_train_time: 2.928619, proj_train_time: 0.80587, model_train_time: 0.114666
'decision_function()' starts at 2020-12-31 19:29:01
'decision_function()' ends at 2020-12-31 19:29:01. It takes 0.0 mins
Test model takes 0.000388 seconds
APC: 0.8618619709000512
AUC: 0.8787222222222224
Total test time: 0.003139 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.002751, model_test_time: 0.000388
'get_best_results()' ends at 2020-12-31 19:29:01. It takes 0.1489 mins


===3/5(n_repeats): {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': True, 'is_nystrom': False, 'is_quickshift': True, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [], 'kjl_qs': [0.3], 'kjl_ns': [100], 'kjl_ds': [5], 'quickshift_ks': [500], 'quickshift_betas': [0.9]}===
train: Counter({0: 5000}), val: Counter({0: 75, 1: 75})
'get_best_results()' starts at 2020-12-31 19:29:01
--is_gs: False, X_val == X_test
X_train.shape: (5000, 49), y_train: Counter({0: 5000})
X_val.shape: (600, 49), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 49), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:    4.8s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:    4.8s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
number of neighbors in k-NN: 500
*** quick_training_time: 2.729978, ignore_clusters_time: 0.001388
--all clusters (23) when (k:(500), beta:0.9). However, only 4 clusters have at least 10 datapoints. Counter(labels_): Counter({1: 2761, 0: 1425, 2: 675, 4: 98, 9: 8, 3: 7, 7: 5, 10: 3, 13: 2, 14: 2, 19: 2, 5: 1, 6: 1, 8: 1, 11: 1, 12: 1, 15: 1, 16: 1, 17: 1, 18: 1, 20: 1, 21: 1, 22: 1}), *** len(Counter(labels_)): 23
sigma: 409.72671843870285
random_state: 42
Finished getting the projection matrix
Projected data
kjl on train set took 0.754399 seconds
Projecting test data
kjl on test set took 0.002037 seconds
self.sigma: 409.72671843870285, q=0.3
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 4, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.150075 seconds
Total train time: 3.6344520000000005 <= std_train_time: 0, seek_train_time: 2.729978, proj_train_time: 0.754399, model_train_time: 0.150075
'decision_function()' starts at 2020-12-31 19:29:06
'decision_function()' ends at 2020-12-31 19:29:06. It takes 0.0 mins
Test model takes 0.000407 seconds
APC: 0.8456343615908278
AUC: 0.8366777777777777
Total test time: 0.002444 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.002037, model_test_time: 0.000407
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
number of neighbors in k-NN: 500
*** quick_training_time: 2.687545, ignore_clusters_time: 0.001351
--all clusters (23) when (k:(500), beta:0.9). However, only 4 clusters have at least 10 datapoints. Counter(labels_): Counter({1: 2761, 0: 1425, 2: 675, 4: 98, 9: 8, 3: 7, 7: 5, 10: 3, 13: 2, 14: 2, 19: 2, 5: 1, 6: 1, 8: 1, 11: 1, 12: 1, 15: 1, 16: 1, 17: 1, 18: 1, 20: 1, 21: 1, 22: 1}), *** len(Counter(labels_)): 23
sigma: 409.72671843870285
random_state: 42
Finished getting the projection matrix
Projected data
kjl on train set took 0.796233 seconds
Projecting test data
kjl on test set took 0.002946 seconds
self.sigma: 409.72671843870285, q=0.3
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 4, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.160572 seconds
Total train time: 3.64435 <= std_train_time: 0, seek_train_time: 2.687545, proj_train_time: 0.796233, model_train_time: 0.160572
'decision_function()' starts at 2020-12-31 19:29:10
'decision_function()' ends at 2020-12-31 19:29:10. It takes 0.0 mins
Test model takes 0.000379 seconds
APC: 0.8456343615908278
AUC: 0.8366777777777777
Total test time: 0.003325 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.002946, model_test_time: 0.000379
'get_best_results()' ends at 2020-12-31 19:29:10. It takes 0.1472 mins


===4/5(n_repeats): {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': True, 'is_nystrom': False, 'is_quickshift': True, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [], 'kjl_qs': [0.3], 'kjl_ns': [100], 'kjl_ds': [5], 'quickshift_ks': [500], 'quickshift_betas': [0.9]}===
train: Counter({0: 5000}), val: Counter({0: 75, 1: 75})
'get_best_results()' starts at 2020-12-31 19:29:10
--is_gs: False, X_val == X_test
X_train.shape: (5000, 49), y_train: Counter({0: 5000})
X_val.shape: (600, 49), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 49), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:    4.9s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:    4.9s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
number of neighbors in k-NN: 500
*** quick_training_time: 2.61857, ignore_clusters_time: 0.001532
--all clusters (16) when (k:(500), beta:0.9). However, only 6 clusters have at least 10 datapoints. Counter(labels_): Counter({1: 2455, 0: 1400, 2: 887, 4: 115, 3: 94, 5: 32, 9: 4, 7: 3, 11: 3, 6: 1, 8: 1, 10: 1, 12: 1, 13: 1, 14: 1, 15: 1}), *** len(Counter(labels_)): 16
sigma: 382.2356612039605
random_state: 42
Finished getting the projection matrix
Projected data
kjl on train set took 0.679128 seconds
Projecting test data
kjl on test set took 0.001904 seconds
self.sigma: 382.2356612039605, q=0.3
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 6, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.08866 seconds
Total train time: 3.386358 <= std_train_time: 0, seek_train_time: 2.61857, proj_train_time: 0.679128, model_train_time: 0.08866
'decision_function()' starts at 2020-12-31 19:29:15
'decision_function()' ends at 2020-12-31 19:29:15. It takes 0.0 mins
Test model takes 0.000418 seconds
APC: 0.8312561041395714
AUC: 0.8435777777777779
Total test time: 0.0023220000000000003 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.001904, model_test_time: 0.000418
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
number of neighbors in k-NN: 500
*** quick_training_time: 2.788624, ignore_clusters_time: 0.001635
--all clusters (16) when (k:(500), beta:0.9). However, only 6 clusters have at least 10 datapoints. Counter(labels_): Counter({1: 2455, 0: 1400, 2: 887, 4: 115, 3: 94, 5: 32, 9: 4, 7: 3, 11: 3, 6: 1, 8: 1, 10: 1, 12: 1, 13: 1, 14: 1, 15: 1}), *** len(Counter(labels_)): 16
sigma: 382.2356612039605
random_state: 42
Finished getting the projection matrix
Projected data
kjl on train set took 0.761608 seconds
Projecting test data
kjl on test set took 0.002394 seconds
self.sigma: 382.2356612039605, q=0.3
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 6, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.104848 seconds
Total train time: 3.65508 <= std_train_time: 0, seek_train_time: 2.788624, proj_train_time: 0.761608, model_train_time: 0.104848
'decision_function()' starts at 2020-12-31 19:29:19
'decision_function()' ends at 2020-12-31 19:29:19. It takes 0.0 mins
Test model takes 0.000452 seconds
APC: 0.8312561041395714
AUC: 0.8435777777777779
Total test time: 0.002846 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.002394, model_test_time: 0.000452
'get_best_results()' ends at 2020-12-31 19:29:19. It takes 0.1426 mins


===5/5(n_repeats): {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': True, 'is_nystrom': False, 'is_quickshift': True, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [], 'kjl_qs': [0.3], 'kjl_ns': [100], 'kjl_ds': [5], 'quickshift_ks': [500], 'quickshift_betas': [0.9]}===
train: Counter({0: 5000}), val: Counter({0: 75, 1: 75})
'get_best_results()' starts at 2020-12-31 19:29:19
--is_gs: False, X_val == X_test
X_train.shape: (5000, 49), y_train: Counter({0: 5000})
X_val.shape: (600, 49), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 49), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:    4.7s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:    4.7s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
number of neighbors in k-NN: 500
*** quick_training_time: 2.929625, ignore_clusters_time: 0.001466
--all clusters (15) when (k:(500), beta:0.9). However, only 5 clusters have at least 10 datapoints. Counter(labels_): Counter({0: 2645, 2: 1446, 1: 707, 3: 110, 4: 63, 8: 9, 5: 4, 6: 4, 12: 4, 10: 2, 13: 2, 7: 1, 9: 1, 11: 1, 14: 1}), *** len(Counter(labels_)): 15
sigma: 387.9412582427242
random_state: 42
Finished getting the projection matrix
Projected data
kjl on train set took 0.673073 seconds
Projecting test data
kjl on test set took 0.001972 seconds
self.sigma: 387.9412582427242, q=0.3
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 5, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.086533 seconds
Total train time: 3.6892310000000004 <= std_train_time: 0, seek_train_time: 2.929625, proj_train_time: 0.673073, model_train_time: 0.086533
'decision_function()' starts at 2020-12-31 19:29:24
'decision_function()' ends at 2020-12-31 19:29:24. It takes 0.0 mins
Test model takes 0.000423 seconds
APC: 0.73017928651458
AUC: 0.722788888888889
Total test time: 0.0023949999999999996 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.001972, model_test_time: 0.000423
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
number of neighbors in k-NN: 500
*** quick_training_time: 3.09991, ignore_clusters_time: 0.001436
--all clusters (15) when (k:(500), beta:0.9). However, only 5 clusters have at least 10 datapoints. Counter(labels_): Counter({0: 2645, 2: 1446, 1: 707, 3: 110, 4: 63, 8: 9, 5: 4, 6: 4, 12: 4, 10: 2, 13: 2, 7: 1, 9: 1, 11: 1, 14: 1}), *** len(Counter(labels_)): 15
sigma: 387.9412582427242
random_state: 42
Finished getting the projection matrix
Projected data
kjl on train set took 0.727226 seconds
Projecting test data
kjl on test set took 0.002715 seconds
self.sigma: 387.9412582427242, q=0.3
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 5, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.103633 seconds
Total train time: 3.9307689999999997 <= std_train_time: 0, seek_train_time: 3.09991, proj_train_time: 0.727226, model_train_time: 0.103633
'decision_function()' starts at 2020-12-31 19:29:28
'decision_function()' ends at 2020-12-31 19:29:28. It takes 0.0 mins
Test model takes 0.000463 seconds
APC: 0.73017928651458
AUC: 0.722788888888889
Total test time: 0.003178 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.002715, model_test_time: 0.000463
'get_best_results()' ends at 2020-12-31 19:29:28. It takes 0.1512 mins
single_main.kwargs: dict_items([('data', (('UNB5', 'speedup/data/src_dst/iat_size/UNB5/Xy-normal-abnormal.dat'), (array([[5.00679016e-06, 7.00000000e+01, 9.53674316e-07, ...,
        9.53674316e-07, 7.00000000e+01, 9.53674316e-07],
       [9.53674316e-07, 7.60000000e+01, 9.88418102e-01, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
       [2.86102295e-06, 9.20000000e+01, 9.20000000e+01, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
       ...,
       [5.28975964e-01, 6.60000000e+01, 5.15614986e-01, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
       [5.13157129e-01, 6.60000000e+01, 5.15626907e-01, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
       [5.28997898e-01, 6.60000000e+01, 5.15608072e-01, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]]), array(['normal_0', 'normal_0', 'normal_0', ..., 'abnormal_0',
       'abnormal_0', 'abnormal_0'], dtype='<U10')))), ('params', ('case6', {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': True, 'is_nystrom': False, 'is_quickshift': False, 'is_meanshift': True, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [], 'kjl_qs': [0.3], 'kjl_ns': [100], 'kjl_ds': [5], 'meanshift_qs': []}))])
X.shape: (30855, 49), y: Counter({0: 30286, 1: 569})
left: Counter({0: 29986, 1: 269}), test: Counter({0: 300, 1: 300})


===1/5(n_repeats): {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': True, 'is_nystrom': False, 'is_quickshift': False, 'is_meanshift': True, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [], 'kjl_qs': [0.3], 'kjl_ns': [100], 'kjl_ds': [5], 'meanshift_qs': []}===
train: Counter({0: 5000}), val: Counter({0: 75, 1: 75})
'get_best_results()' starts at 2020-12-31 19:29:28
--is_gs: False, X_val == X_test
X_train.shape: (5000, 49), y_train: Counter({0: 5000})
X_val.shape: (600, 49), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 49), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:    4.9s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:    4.9s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
meanshift_training, it took 19.104871 seconds
--all clusters (642) when (bandwidth:397.8053110448618, 397.8053110448618). However, only 37 clusters have at least 10 datapoints. Counter(labels_): Counter({0: 3097, 526: 120, 1: 78, 2: 62, 5: 60, 13: 56, 89: 50, 21: 44, 3: 41, 7: 39, 52: 38, 4: 36, 39: 30, 55: 28, 11: 28, 418: 24, 606: 22, 123: 22, 17: 21, 624: 20, 193: 18, 9: 17, 12: 17, 90: 17, 8: 17, 10: 16, 406: 16, 14: 14, 6: 14, 94: 14, 16: 13, 502: 12, 20: 11, 15: 11, 243: 11, 593: 10, 332: 10, 25: 9, 72: 9, 581: 9, 289: 9, 28: 8, 22: 8, 400: 8, 24: 8, 23: 8, 621: 7, 26: 7, 19: 7, 30: 6, 27: 6, 41: 5, 381: 5, 284: 5, 31: 5, 59: 5, 67: 5, 18: 5, 29: 4, 34: 4, 35: 4, 37: 4, 36: 4, 265: 4, 80: 4, 251: 4, 32: 4, 38: 4, 33: 4, 40: 4, 49: 3, 449: 3, 47: 3, 50: 3, 61: 3, 533: 3, 46: 3, 76: 3, 44: 3, 98: 3, 51: 3, 414: 3, 54: 3, 42: 3, 48: 3, 45: 3, 600: 2, 636: 2, 69: 2, 83: 2, 77: 2, 64: 2, 360: 2, 91: 2, 334: 2, 63: 2, 79: 2, 70: 2, 99: 2, 62: 2, 639: 2, 73: 2, 100: 2, 66: 2, 97: 2, 103: 2, 81: 2, 84: 2, 68: 2, 88: 2, 43: 2, 58: 2, 92: 2, 148: 2, 95: 2, 87: 2, 57: 2, 93: 2, 101: 2, 96: 2, 280: 2, 65: 2, 71: 2, 60: 2, 102: 2, 86: 2, 133: 2, 521: 2, 78: 2, 82: 2, 556: 2, 56: 2, 74: 2, 85: 2, 53: 2, 75: 2, 127: 1, 580: 1, 609: 1, 252: 1, 607: 1, 380: 1, 547: 1, 384: 1, 457: 1, 553: 1, 405: 1, 320: 1, 321: 1, 335: 1, 623: 1, 565: 1, 263: 1, 270: 1, 264: 1, 317: 1, 534: 1, 147: 1, 210: 1, 492: 1, 582: 1, 417: 1, 508: 1, 287: 1, 142: 1, 136: 1, 426: 1, 459: 1, 584: 1, 113: 1, 348: 1, 602: 1, 220: 1, 529: 1, 150: 1, 153: 1, 173: 1, 118: 1, 269: 1, 539: 1, 140: 1, 359: 1, 626: 1, 476: 1, 328: 1, 172: 1, 632: 1, 386: 1, 535: 1, 196: 1, 195: 1, 162: 1, 433: 1, 128: 1, 268: 1, 201: 1, 242: 1, 546: 1, 485: 1, 552: 1, 563: 1, 301: 1, 416: 1, 397: 1, 451: 1, 489: 1, 391: 1, 440: 1, 436: 1, 108: 1, 276: 1, 159: 1, 304: 1, 233: 1, 425: 1, 610: 1, 641: 1, 452: 1, 223: 1, 211: 1, 428: 1, 566: 1, 166: 1, 204: 1, 198: 1, 187: 1, 294: 1, 462: 1, 412: 1, 322: 1, 144: 1, 532: 1, 183: 1, 487: 1, 524: 1, 316: 1, 438: 1, 290: 1, 486: 1, 579: 1, 570: 1, 399: 1, 115: 1, 385: 1, 527: 1, 244: 1, 495: 1, 557: 1, 614: 1, 177: 1, 164: 1, 523: 1, 474: 1, 431: 1, 513: 1, 225: 1, 638: 1, 458: 1, 315: 1, 106: 1, 362: 1, 337: 1, 396: 1, 421: 1, 308: 1, 267: 1, 434: 1, 254: 1, 185: 1, 558: 1, 398: 1, 437: 1, 541: 1, 382: 1, 544: 1, 517: 1, 356: 1, 266: 1, 158: 1, 569: 1, 560: 1, 519: 1, 131: 1, 227: 1, 138: 1, 295: 1, 575: 1, 303: 1, 599: 1, 139: 1, 218: 1, 622: 1, 473: 1, 239: 1, 190: 1, 119: 1, 306: 1, 260: 1, 597: 1, 419: 1, 331: 1, 402: 1, 494: 1, 410: 1, 549: 1, 107: 1, 545: 1, 213: 1, 192: 1, 480: 1, 312: 1, 169: 1, 501: 1, 333: 1, 530: 1, 200: 1, 247: 1, 411: 1, 226: 1, 178: 1, 520: 1, 548: 1, 343: 1, 298: 1, 110: 1, 188: 1, 633: 1, 518: 1, 340: 1, 283: 1, 293: 1, 364: 1, 342: 1, 224: 1, 250: 1, 175: 1, 275: 1, 420: 1, 104: 1, 640: 1, 390: 1, 134: 1, 442: 1, 161: 1, 109: 1, 454: 1, 182: 1, 404: 1, 105: 1, 122: 1, 336: 1, 272: 1, 483: 1, 379: 1, 246: 1, 625: 1, 141: 1, 349: 1, 130: 1, 114: 1, 199: 1, 234: 1, 232: 1, 591: 1, 554: 1, 291: 1, 525: 1, 601: 1, 511: 1, 572: 1, 160: 1, 273: 1, 355: 1, 279: 1, 444: 1, 587: 1, 174: 1, 176: 1, 354: 1, 179: 1, 171: 1, 149: 1, 167: 1, 129: 1, 310: 1, 628: 1, 369: 1, 245: 1, 479: 1, 561: 1, 409: 1, 568: 1, 240: 1, 299: 1, 257: 1, 499: 1, 206: 1, 477: 1, 507: 1, 537: 1, 571: 1, 635: 1, 124: 1, 505: 1, 121: 1, 596: 1, 424: 1, 430: 1, 376: 1, 361: 1, 137: 1, 401: 1, 189: 1, 111: 1, 394: 1, 604: 1, 155: 1, 422: 1, 241: 1, 432: 1, 277: 1, 112: 1, 374: 1, 231: 1, 447: 1, 429: 1, 531: 1, 413: 1, 237: 1, 229: 1, 630: 1, 194: 1, 598: 1, 212: 1, 578: 1, 388: 1, 453: 1, 555: 1, 439: 1, 135: 1, 407: 1, 345: 1, 510: 1, 484: 1, 617: 1, 253: 1, 637: 1, 311: 1, 235: 1, 446: 1, 271: 1, 491: 1, 341: 1, 330: 1, 202: 1, 592: 1, 498: 1, 403: 1, 156: 1, 448: 1, 372: 1, 573: 1, 497: 1, 125: 1, 378: 1, 281: 1, 567: 1, 392: 1, 634: 1, 456: 1, 259: 1, 318: 1, 339: 1, 460: 1, 282: 1, 522: 1, 180: 1, 366: 1, 564: 1, 542: 1, 586: 1, 455: 1, 117: 1, 375: 1, 236: 1, 464: 1, 219: 1, 585: 1, 577: 1, 248: 1, 465: 1, 620: 1, 588: 1, 313: 1, 181: 1, 323: 1, 346: 1, 305: 1, 512: 1, 351: 1, 631: 1, 350: 1, 363: 1, 618: 1, 466: 1, 481: 1, 221: 1, 515: 1, 613: 1, 314: 1, 516: 1, 509: 1, 468: 1, 595: 1, 307: 1, 208: 1, 370: 1, 255: 1, 543: 1, 559: 1, 319: 1, 629: 1, 415: 1, 292: 1, 154: 1, 471: 1, 373: 1, 377: 1, 550: 1, 302: 1, 615: 1, 589: 1, 540: 1, 285: 1, 470: 1, 389: 1, 383: 1, 482: 1, 478: 1, 262: 1, 228: 1, 594: 1, 435: 1, 214: 1, 170: 1, 352: 1, 216: 1, 238: 1, 338: 1, 197: 1, 325: 1, 427: 1, 488: 1, 393: 1, 611: 1, 230: 1, 165: 1, 217: 1, 209: 1, 249: 1, 258: 1, 371: 1, 157: 1, 300: 1, 496: 1, 576: 1, 132: 1, 116: 1, 461: 1, 365: 1, 191: 1, 503: 1, 475: 1, 467: 1, 616: 1, 506: 1, 326: 1, 309: 1, 353: 1, 256: 1, 387: 1, 538: 1, 627: 1, 288: 1, 327: 1, 278: 1, 528: 1, 514: 1, 504: 1, 151: 1, 450: 1, 184: 1, 608: 1, 357: 1, 472: 1, 490: 1, 368: 1, 186: 1, 146: 1, 203: 1, 367: 1, 297: 1, 168: 1, 222: 1, 551: 1, 605: 1, 261: 1, 583: 1, 562: 1, 395: 1, 500: 1, 215: 1, 286: 1, 463: 1, 344: 1, 274: 1, 493: 1, 536: 1, 126: 1, 408: 1, 603: 1, 324: 1, 145: 1, 120: 1, 590: 1, 358: 1, 445: 1, 347: 1, 163: 1, 207: 1, 152: 1, 574: 1, 423: 1, 441: 1, 612: 1, 205: 1, 443: 1, 296: 1, 329: 1, 469: 1, 143: 1, 619: 1}), *** len(Counter(labels_)): 642
sigma: 397.8053110448618
random_state: 42
Finished getting the projection matrix
Projected data
kjl on train set took 0.024046 seconds
Projecting test data
kjl on test set took 0.002509 seconds
self.sigma: 397.8053110448618, q=0.3
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 37, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.605413 seconds
Total train time: 19.734329999999996 <= std_train_time: 0, seek_train_time: 19.104871, proj_train_time: 0.024046, model_train_time: 0.605413
'decision_function()' starts at 2020-12-31 19:29:50
'decision_function()' ends at 2020-12-31 19:29:50. It takes 0.0 mins
Test model takes 0.000838 seconds
APC: 0.8143735403559975
AUC: 0.8431222222222223
Total test time: 0.003347 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.002509, model_test_time: 0.000838
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
meanshift_training, it took 18.991522 seconds
--all clusters (642) when (bandwidth:397.8053110448618, 397.8053110448618). However, only 37 clusters have at least 10 datapoints. Counter(labels_): Counter({0: 3097, 526: 120, 1: 78, 2: 62, 5: 60, 13: 56, 89: 50, 21: 44, 3: 41, 7: 39, 52: 38, 4: 36, 39: 30, 55: 28, 11: 28, 418: 24, 606: 22, 123: 22, 17: 21, 624: 20, 193: 18, 9: 17, 12: 17, 90: 17, 8: 17, 10: 16, 406: 16, 14: 14, 6: 14, 94: 14, 16: 13, 502: 12, 20: 11, 15: 11, 243: 11, 593: 10, 332: 10, 25: 9, 72: 9, 581: 9, 289: 9, 28: 8, 22: 8, 400: 8, 24: 8, 23: 8, 621: 7, 26: 7, 19: 7, 30: 6, 27: 6, 41: 5, 381: 5, 284: 5, 31: 5, 59: 5, 67: 5, 18: 5, 29: 4, 34: 4, 35: 4, 37: 4, 36: 4, 265: 4, 80: 4, 251: 4, 32: 4, 38: 4, 33: 4, 40: 4, 49: 3, 449: 3, 47: 3, 50: 3, 61: 3, 533: 3, 46: 3, 76: 3, 44: 3, 98: 3, 51: 3, 414: 3, 54: 3, 42: 3, 48: 3, 45: 3, 600: 2, 636: 2, 69: 2, 83: 2, 77: 2, 64: 2, 360: 2, 91: 2, 334: 2, 63: 2, 79: 2, 70: 2, 99: 2, 62: 2, 639: 2, 73: 2, 100: 2, 66: 2, 97: 2, 103: 2, 81: 2, 84: 2, 68: 2, 88: 2, 43: 2, 58: 2, 92: 2, 148: 2, 95: 2, 87: 2, 57: 2, 93: 2, 101: 2, 96: 2, 280: 2, 65: 2, 71: 2, 60: 2, 102: 2, 86: 2, 133: 2, 521: 2, 78: 2, 82: 2, 556: 2, 56: 2, 74: 2, 85: 2, 53: 2, 75: 2, 127: 1, 580: 1, 609: 1, 252: 1, 607: 1, 380: 1, 547: 1, 384: 1, 457: 1, 553: 1, 405: 1, 320: 1, 321: 1, 335: 1, 623: 1, 565: 1, 263: 1, 270: 1, 264: 1, 317: 1, 534: 1, 147: 1, 210: 1, 492: 1, 582: 1, 417: 1, 508: 1, 287: 1, 142: 1, 136: 1, 426: 1, 459: 1, 584: 1, 113: 1, 348: 1, 602: 1, 220: 1, 529: 1, 150: 1, 153: 1, 173: 1, 118: 1, 269: 1, 539: 1, 140: 1, 359: 1, 626: 1, 476: 1, 328: 1, 172: 1, 632: 1, 386: 1, 535: 1, 196: 1, 195: 1, 162: 1, 433: 1, 128: 1, 268: 1, 201: 1, 242: 1, 546: 1, 485: 1, 552: 1, 563: 1, 301: 1, 416: 1, 397: 1, 451: 1, 489: 1, 391: 1, 440: 1, 436: 1, 108: 1, 276: 1, 159: 1, 304: 1, 233: 1, 425: 1, 610: 1, 641: 1, 452: 1, 223: 1, 211: 1, 428: 1, 566: 1, 166: 1, 204: 1, 198: 1, 187: 1, 294: 1, 462: 1, 412: 1, 322: 1, 144: 1, 532: 1, 183: 1, 487: 1, 524: 1, 316: 1, 438: 1, 290: 1, 486: 1, 579: 1, 570: 1, 399: 1, 115: 1, 385: 1, 527: 1, 244: 1, 495: 1, 557: 1, 614: 1, 177: 1, 164: 1, 523: 1, 474: 1, 431: 1, 513: 1, 225: 1, 638: 1, 458: 1, 315: 1, 106: 1, 362: 1, 337: 1, 396: 1, 421: 1, 308: 1, 267: 1, 434: 1, 254: 1, 185: 1, 558: 1, 398: 1, 437: 1, 541: 1, 382: 1, 544: 1, 517: 1, 356: 1, 266: 1, 158: 1, 569: 1, 560: 1, 519: 1, 131: 1, 227: 1, 138: 1, 295: 1, 575: 1, 303: 1, 599: 1, 139: 1, 218: 1, 622: 1, 473: 1, 239: 1, 190: 1, 119: 1, 306: 1, 260: 1, 597: 1, 419: 1, 331: 1, 402: 1, 494: 1, 410: 1, 549: 1, 107: 1, 545: 1, 213: 1, 192: 1, 480: 1, 312: 1, 169: 1, 501: 1, 333: 1, 530: 1, 200: 1, 247: 1, 411: 1, 226: 1, 178: 1, 520: 1, 548: 1, 343: 1, 298: 1, 110: 1, 188: 1, 633: 1, 518: 1, 340: 1, 283: 1, 293: 1, 364: 1, 342: 1, 224: 1, 250: 1, 175: 1, 275: 1, 420: 1, 104: 1, 640: 1, 390: 1, 134: 1, 442: 1, 161: 1, 109: 1, 454: 1, 182: 1, 404: 1, 105: 1, 122: 1, 336: 1, 272: 1, 483: 1, 379: 1, 246: 1, 625: 1, 141: 1, 349: 1, 130: 1, 114: 1, 199: 1, 234: 1, 232: 1, 591: 1, 554: 1, 291: 1, 525: 1, 601: 1, 511: 1, 572: 1, 160: 1, 273: 1, 355: 1, 279: 1, 444: 1, 587: 1, 174: 1, 176: 1, 354: 1, 179: 1, 171: 1, 149: 1, 167: 1, 129: 1, 310: 1, 628: 1, 369: 1, 245: 1, 479: 1, 561: 1, 409: 1, 568: 1, 240: 1, 299: 1, 257: 1, 499: 1, 206: 1, 477: 1, 507: 1, 537: 1, 571: 1, 635: 1, 124: 1, 505: 1, 121: 1, 596: 1, 424: 1, 430: 1, 376: 1, 361: 1, 137: 1, 401: 1, 189: 1, 111: 1, 394: 1, 604: 1, 155: 1, 422: 1, 241: 1, 432: 1, 277: 1, 112: 1, 374: 1, 231: 1, 447: 1, 429: 1, 531: 1, 413: 1, 237: 1, 229: 1, 630: 1, 194: 1, 598: 1, 212: 1, 578: 1, 388: 1, 453: 1, 555: 1, 439: 1, 135: 1, 407: 1, 345: 1, 510: 1, 484: 1, 617: 1, 253: 1, 637: 1, 311: 1, 235: 1, 446: 1, 271: 1, 491: 1, 341: 1, 330: 1, 202: 1, 592: 1, 498: 1, 403: 1, 156: 1, 448: 1, 372: 1, 573: 1, 497: 1, 125: 1, 378: 1, 281: 1, 567: 1, 392: 1, 634: 1, 456: 1, 259: 1, 318: 1, 339: 1, 460: 1, 282: 1, 522: 1, 180: 1, 366: 1, 564: 1, 542: 1, 586: 1, 455: 1, 117: 1, 375: 1, 236: 1, 464: 1, 219: 1, 585: 1, 577: 1, 248: 1, 465: 1, 620: 1, 588: 1, 313: 1, 181: 1, 323: 1, 346: 1, 305: 1, 512: 1, 351: 1, 631: 1, 350: 1, 363: 1, 618: 1, 466: 1, 481: 1, 221: 1, 515: 1, 613: 1, 314: 1, 516: 1, 509: 1, 468: 1, 595: 1, 307: 1, 208: 1, 370: 1, 255: 1, 543: 1, 559: 1, 319: 1, 629: 1, 415: 1, 292: 1, 154: 1, 471: 1, 373: 1, 377: 1, 550: 1, 302: 1, 615: 1, 589: 1, 540: 1, 285: 1, 470: 1, 389: 1, 383: 1, 482: 1, 478: 1, 262: 1, 228: 1, 594: 1, 435: 1, 214: 1, 170: 1, 352: 1, 216: 1, 238: 1, 338: 1, 197: 1, 325: 1, 427: 1, 488: 1, 393: 1, 611: 1, 230: 1, 165: 1, 217: 1, 209: 1, 249: 1, 258: 1, 371: 1, 157: 1, 300: 1, 496: 1, 576: 1, 132: 1, 116: 1, 461: 1, 365: 1, 191: 1, 503: 1, 475: 1, 467: 1, 616: 1, 506: 1, 326: 1, 309: 1, 353: 1, 256: 1, 387: 1, 538: 1, 627: 1, 288: 1, 327: 1, 278: 1, 528: 1, 514: 1, 504: 1, 151: 1, 450: 1, 184: 1, 608: 1, 357: 1, 472: 1, 490: 1, 368: 1, 186: 1, 146: 1, 203: 1, 367: 1, 297: 1, 168: 1, 222: 1, 551: 1, 605: 1, 261: 1, 583: 1, 562: 1, 395: 1, 500: 1, 215: 1, 286: 1, 463: 1, 344: 1, 274: 1, 493: 1, 536: 1, 126: 1, 408: 1, 603: 1, 324: 1, 145: 1, 120: 1, 590: 1, 358: 1, 445: 1, 347: 1, 163: 1, 207: 1, 152: 1, 574: 1, 423: 1, 441: 1, 612: 1, 205: 1, 443: 1, 296: 1, 329: 1, 469: 1, 143: 1, 619: 1}), *** len(Counter(labels_)): 642
sigma: 397.8053110448618
random_state: 42
Finished getting the projection matrix
Projected data
kjl on train set took 0.028196 seconds
Projecting test data
kjl on test set took 0.002841 seconds
self.sigma: 397.8053110448618, q=0.3
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 37, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.876187 seconds
Total train time: 19.895905000000003 <= std_train_time: 0, seek_train_time: 18.991522, proj_train_time: 0.028196, model_train_time: 0.876187
'decision_function()' starts at 2020-12-31 19:30:10
'decision_function()' ends at 2020-12-31 19:30:10. It takes 0.0 mins
Test model takes 0.00137 seconds
APC: 0.8143735403559975
AUC: 0.8431222222222223
Total test time: 0.004211 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.002841, model_test_time: 0.00137
'get_best_results()' ends at 2020-12-31 19:30:10. It takes 0.7082 mins


===2/5(n_repeats): {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': True, 'is_nystrom': False, 'is_quickshift': False, 'is_meanshift': True, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [], 'kjl_qs': [0.3], 'kjl_ns': [100], 'kjl_ds': [5], 'meanshift_qs': []}===
train: Counter({0: 5000}), val: Counter({0: 75, 1: 75})
'get_best_results()' starts at 2020-12-31 19:30:10
--is_gs: False, X_val == X_test
X_train.shape: (5000, 49), y_train: Counter({0: 5000})
X_val.shape: (600, 49), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 49), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:   21.6s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:   21.6s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
meanshift_training, it took 23.99731 seconds
--all clusters (651) when (bandwidth:368.6397460634423, 368.6397460634423). However, only 34 clusters have at least 10 datapoints. Counter(labels_): Counter({0: 3129, 64: 89, 1: 77, 2: 72, 621: 65, 245: 57, 578: 50, 22: 49, 3: 44, 24: 42, 262: 37, 92: 35, 5: 35, 14: 31, 39: 26, 8: 26, 246: 24, 7: 19, 73: 19, 6: 18, 586: 17, 4: 16, 374: 15, 9: 15, 10: 14, 15: 13, 12: 12, 412: 12, 26: 12, 13: 11, 11: 11, 16: 10, 63: 10, 17: 10, 20: 9, 23: 9, 183: 9, 221: 9, 48: 8, 28: 8, 18: 8, 208: 8, 21: 8, 19: 7, 483: 7, 27: 6, 25: 6, 41: 6, 29: 5, 30: 5, 293: 5, 416: 5, 333: 5, 31: 5, 429: 5, 32: 5, 33: 5, 69: 5, 34: 4, 42: 4, 584: 4, 35: 4, 236: 4, 36: 4, 649: 4, 40: 4, 37: 4, 66: 3, 53: 3, 51: 3, 118: 3, 50: 3, 72: 3, 532: 3, 647: 3, 46: 3, 559: 3, 54: 3, 38: 3, 591: 3, 61: 3, 52: 3, 44: 3, 43: 3, 49: 3, 68: 3, 45: 3, 47: 3, 422: 3, 79: 2, 80: 2, 242: 2, 148: 2, 76: 2, 82: 2, 581: 2, 83: 2, 137: 2, 319: 2, 88: 2, 67: 2, 180: 2, 74: 2, 91: 2, 65: 2, 85: 2, 86: 2, 284: 2, 98: 2, 424: 2, 96: 2, 222: 2, 81: 2, 77: 2, 58: 2, 349: 2, 70: 2, 445: 2, 90: 2, 100: 2, 95: 2, 93: 2, 362: 2, 56: 2, 62: 2, 87: 2, 84: 2, 59: 2, 57: 2, 89: 2, 78: 2, 94: 2, 332: 2, 574: 2, 97: 2, 101: 2, 99: 2, 71: 2, 507: 2, 60: 2, 583: 2, 599: 2, 75: 2, 55: 2, 158: 2, 231: 1, 418: 1, 258: 1, 134: 1, 452: 1, 327: 1, 289: 1, 613: 1, 191: 1, 410: 1, 468: 1, 133: 1, 276: 1, 317: 1, 257: 1, 603: 1, 385: 1, 510: 1, 542: 1, 450: 1, 634: 1, 104: 1, 194: 1, 204: 1, 197: 1, 290: 1, 609: 1, 155: 1, 329: 1, 314: 1, 278: 1, 379: 1, 335: 1, 187: 1, 449: 1, 260: 1, 347: 1, 364: 1, 455: 1, 612: 1, 328: 1, 389: 1, 616: 1, 446: 1, 512: 1, 174: 1, 517: 1, 371: 1, 386: 1, 299: 1, 500: 1, 130: 1, 291: 1, 348: 1, 131: 1, 295: 1, 403: 1, 623: 1, 417: 1, 182: 1, 214: 1, 524: 1, 353: 1, 519: 1, 451: 1, 398: 1, 209: 1, 378: 1, 606: 1, 491: 1, 233: 1, 617: 1, 482: 1, 564: 1, 560: 1, 323: 1, 199: 1, 525: 1, 215: 1, 281: 1, 193: 1, 535: 1, 273: 1, 227: 1, 505: 1, 207: 1, 554: 1, 549: 1, 114: 1, 435: 1, 152: 1, 173: 1, 220: 1, 336: 1, 235: 1, 110: 1, 169: 1, 226: 1, 300: 1, 132: 1, 579: 1, 177: 1, 585: 1, 113: 1, 400: 1, 553: 1, 575: 1, 298: 1, 636: 1, 270: 1, 105: 1, 361: 1, 330: 1, 426: 1, 190: 1, 359: 1, 516: 1, 648: 1, 494: 1, 639: 1, 322: 1, 531: 1, 529: 1, 464: 1, 117: 1, 360: 1, 277: 1, 354: 1, 431: 1, 128: 1, 331: 1, 448: 1, 326: 1, 428: 1, 321: 1, 399: 1, 562: 1, 552: 1, 558: 1, 369: 1, 513: 1, 461: 1, 315: 1, 550: 1, 571: 1, 608: 1, 150: 1, 635: 1, 423: 1, 490: 1, 521: 1, 594: 1, 457: 1, 462: 1, 548: 1, 119: 1, 357: 1, 115: 1, 181: 1, 241: 1, 219: 1, 212: 1, 397: 1, 637: 1, 576: 1, 358: 1, 252: 1, 108: 1, 577: 1, 499: 1, 201: 1, 425: 1, 470: 1, 184: 1, 601: 1, 123: 1, 391: 1, 569: 1, 171: 1, 469: 1, 143: 1, 600: 1, 443: 1, 156: 1, 595: 1, 202: 1, 292: 1, 383: 1, 157: 1, 438: 1, 607: 1, 563: 1, 447: 1, 255: 1, 523: 1, 296: 1, 106: 1, 192: 1, 626: 1, 116: 1, 605: 1, 610: 1, 185: 1, 338: 1, 141: 1, 337: 1, 619: 1, 272: 1, 162: 1, 466: 1, 444: 1, 103: 1, 486: 1, 396: 1, 302: 1, 643: 1, 138: 1, 492: 1, 147: 1, 146: 1, 237: 1, 301: 1, 545: 1, 640: 1, 343: 1, 251: 1, 367: 1, 434: 1, 320: 1, 384: 1, 440: 1, 253: 1, 642: 1, 274: 1, 539: 1, 107: 1, 341: 1, 540: 1, 406: 1, 509: 1, 111: 1, 377: 1, 484: 1, 269: 1, 437: 1, 176: 1, 303: 1, 356: 1, 408: 1, 325: 1, 638: 1, 224: 1, 495: 1, 178: 1, 503: 1, 551: 1, 546: 1, 493: 1, 366: 1, 244: 1, 339: 1, 404: 1, 240: 1, 628: 1, 172: 1, 368: 1, 308: 1, 631: 1, 216: 1, 441: 1, 596: 1, 632: 1, 267: 1, 557: 1, 205: 1, 305: 1, 373: 1, 200: 1, 536: 1, 249: 1, 342: 1, 570: 1, 641: 1, 186: 1, 572: 1, 614: 1, 198: 1, 109: 1, 140: 1, 127: 1, 527: 1, 388: 1, 473: 1, 395: 1, 316: 1, 112: 1, 627: 1, 566: 1, 102: 1, 387: 1, 534: 1, 477: 1, 287: 1, 475: 1, 153: 1, 427: 1, 261: 1, 567: 1, 175: 1, 615: 1, 644: 1, 472: 1, 541: 1, 345: 1, 515: 1, 211: 1, 580: 1, 460: 1, 390: 1, 279: 1, 125: 1, 351: 1, 160: 1, 286: 1, 474: 1, 243: 1, 263: 1, 135: 1, 478: 1, 518: 1, 392: 1, 352: 1, 288: 1, 459: 1, 413: 1, 479: 1, 409: 1, 544: 1, 436: 1, 514: 1, 310: 1, 538: 1, 488: 1, 467: 1, 346: 1, 629: 1, 593: 1, 206: 1, 372: 1, 496: 1, 179: 1, 285: 1, 485: 1, 520: 1, 307: 1, 480: 1, 363: 1, 476: 1, 234: 1, 218: 1, 456: 1, 309: 1, 630: 1, 334: 1, 311: 1, 229: 1, 380: 1, 225: 1, 588: 1, 598: 1, 376: 1, 543: 1, 139: 1, 259: 1, 196: 1, 419: 1, 432: 1, 497: 1, 522: 1, 355: 1, 124: 1, 306: 1, 625: 1, 528: 1, 283: 1, 195: 1, 420: 1, 414: 1, 161: 1, 375: 1, 611: 1, 350: 1, 508: 1, 439: 1, 266: 1, 587: 1, 144: 1, 556: 1, 232: 1, 401: 1, 433: 1, 145: 1, 620: 1, 203: 1, 506: 1, 166: 1, 453: 1, 561: 1, 250: 1, 282: 1, 465: 1, 189: 1, 633: 1, 487: 1, 442: 1, 405: 1, 122: 1, 471: 1, 312: 1, 142: 1, 537: 1, 213: 1, 121: 1, 164: 1, 313: 1, 481: 1, 407: 1, 430: 1, 463: 1, 589: 1, 618: 1, 239: 1, 170: 1, 126: 1, 646: 1, 228: 1, 393: 1, 604: 1, 210: 1, 129: 1, 256: 1, 275: 1, 411: 1, 324: 1, 168: 1, 365: 1, 268: 1, 280: 1, 136: 1, 154: 1, 498: 1, 165: 1, 565: 1, 238: 1, 370: 1, 297: 1, 501: 1, 597: 1, 149: 1, 645: 1, 159: 1, 217: 1, 458: 1, 294: 1, 533: 1, 248: 1, 526: 1, 504: 1, 120: 1, 163: 1, 381: 1, 568: 1, 344: 1, 602: 1, 415: 1, 582: 1, 265: 1, 223: 1, 511: 1, 590: 1, 489: 1, 264: 1, 304: 1, 247: 1, 650: 1, 624: 1, 394: 1, 421: 1, 547: 1, 151: 1, 573: 1, 622: 1, 340: 1, 502: 1, 188: 1, 555: 1, 271: 1, 530: 1, 167: 1, 230: 1, 592: 1, 318: 1, 382: 1, 254: 1, 402: 1, 454: 1}), *** len(Counter(labels_)): 651
sigma: 368.6397460634423
random_state: 42
Finished getting the projection matrix
Projected data
kjl on train set took 0.023848 seconds
Projecting test data
kjl on test set took 0.002443 seconds
self.sigma: 368.6397460634423, q=0.3
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 34, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.393891 seconds
Total train time: 24.415049 <= std_train_time: 0, seek_train_time: 23.99731, proj_train_time: 0.023848, model_train_time: 0.393891
'decision_function()' starts at 2020-12-31 19:30:37
'decision_function()' ends at 2020-12-31 19:30:37. It takes 0.0 mins
Test model takes 0.000831 seconds
APC: 0.8260006526171104
AUC: 0.8108111111111111
Total test time: 0.003274 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.002443, model_test_time: 0.000831
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
meanshift_training, it took 24.628424 seconds
--all clusters (651) when (bandwidth:368.6397460634423, 368.6397460634423). However, only 34 clusters have at least 10 datapoints. Counter(labels_): Counter({0: 3129, 64: 89, 1: 77, 2: 72, 621: 65, 245: 57, 578: 50, 22: 49, 3: 44, 24: 42, 262: 37, 92: 35, 5: 35, 14: 31, 39: 26, 8: 26, 246: 24, 7: 19, 73: 19, 6: 18, 586: 17, 4: 16, 374: 15, 9: 15, 10: 14, 15: 13, 12: 12, 412: 12, 26: 12, 13: 11, 11: 11, 16: 10, 63: 10, 17: 10, 20: 9, 23: 9, 183: 9, 221: 9, 48: 8, 28: 8, 18: 8, 208: 8, 21: 8, 19: 7, 483: 7, 27: 6, 25: 6, 41: 6, 29: 5, 30: 5, 293: 5, 416: 5, 333: 5, 31: 5, 429: 5, 32: 5, 33: 5, 69: 5, 34: 4, 42: 4, 584: 4, 35: 4, 236: 4, 36: 4, 649: 4, 40: 4, 37: 4, 66: 3, 53: 3, 51: 3, 118: 3, 50: 3, 72: 3, 532: 3, 647: 3, 46: 3, 559: 3, 54: 3, 38: 3, 591: 3, 61: 3, 52: 3, 44: 3, 43: 3, 49: 3, 68: 3, 45: 3, 47: 3, 422: 3, 79: 2, 80: 2, 242: 2, 148: 2, 76: 2, 82: 2, 581: 2, 83: 2, 137: 2, 319: 2, 88: 2, 67: 2, 180: 2, 74: 2, 91: 2, 65: 2, 85: 2, 86: 2, 284: 2, 98: 2, 424: 2, 96: 2, 222: 2, 81: 2, 77: 2, 58: 2, 349: 2, 70: 2, 445: 2, 90: 2, 100: 2, 95: 2, 93: 2, 362: 2, 56: 2, 62: 2, 87: 2, 84: 2, 59: 2, 57: 2, 89: 2, 78: 2, 94: 2, 332: 2, 574: 2, 97: 2, 101: 2, 99: 2, 71: 2, 507: 2, 60: 2, 583: 2, 599: 2, 75: 2, 55: 2, 158: 2, 231: 1, 418: 1, 258: 1, 134: 1, 452: 1, 327: 1, 289: 1, 613: 1, 191: 1, 410: 1, 468: 1, 133: 1, 276: 1, 317: 1, 257: 1, 603: 1, 385: 1, 510: 1, 542: 1, 450: 1, 634: 1, 104: 1, 194: 1, 204: 1, 197: 1, 290: 1, 609: 1, 155: 1, 329: 1, 314: 1, 278: 1, 379: 1, 335: 1, 187: 1, 449: 1, 260: 1, 347: 1, 364: 1, 455: 1, 612: 1, 328: 1, 389: 1, 616: 1, 446: 1, 512: 1, 174: 1, 517: 1, 371: 1, 386: 1, 299: 1, 500: 1, 130: 1, 291: 1, 348: 1, 131: 1, 295: 1, 403: 1, 623: 1, 417: 1, 182: 1, 214: 1, 524: 1, 353: 1, 519: 1, 451: 1, 398: 1, 209: 1, 378: 1, 606: 1, 491: 1, 233: 1, 617: 1, 482: 1, 564: 1, 560: 1, 323: 1, 199: 1, 525: 1, 215: 1, 281: 1, 193: 1, 535: 1, 273: 1, 227: 1, 505: 1, 207: 1, 554: 1, 549: 1, 114: 1, 435: 1, 152: 1, 173: 1, 220: 1, 336: 1, 235: 1, 110: 1, 169: 1, 226: 1, 300: 1, 132: 1, 579: 1, 177: 1, 585: 1, 113: 1, 400: 1, 553: 1, 575: 1, 298: 1, 636: 1, 270: 1, 105: 1, 361: 1, 330: 1, 426: 1, 190: 1, 359: 1, 516: 1, 648: 1, 494: 1, 639: 1, 322: 1, 531: 1, 529: 1, 464: 1, 117: 1, 360: 1, 277: 1, 354: 1, 431: 1, 128: 1, 331: 1, 448: 1, 326: 1, 428: 1, 321: 1, 399: 1, 562: 1, 552: 1, 558: 1, 369: 1, 513: 1, 461: 1, 315: 1, 550: 1, 571: 1, 608: 1, 150: 1, 635: 1, 423: 1, 490: 1, 521: 1, 594: 1, 457: 1, 462: 1, 548: 1, 119: 1, 357: 1, 115: 1, 181: 1, 241: 1, 219: 1, 212: 1, 397: 1, 637: 1, 576: 1, 358: 1, 252: 1, 108: 1, 577: 1, 499: 1, 201: 1, 425: 1, 470: 1, 184: 1, 601: 1, 123: 1, 391: 1, 569: 1, 171: 1, 469: 1, 143: 1, 600: 1, 443: 1, 156: 1, 595: 1, 202: 1, 292: 1, 383: 1, 157: 1, 438: 1, 607: 1, 563: 1, 447: 1, 255: 1, 523: 1, 296: 1, 106: 1, 192: 1, 626: 1, 116: 1, 605: 1, 610: 1, 185: 1, 338: 1, 141: 1, 337: 1, 619: 1, 272: 1, 162: 1, 466: 1, 444: 1, 103: 1, 486: 1, 396: 1, 302: 1, 643: 1, 138: 1, 492: 1, 147: 1, 146: 1, 237: 1, 301: 1, 545: 1, 640: 1, 343: 1, 251: 1, 367: 1, 434: 1, 320: 1, 384: 1, 440: 1, 253: 1, 642: 1, 274: 1, 539: 1, 107: 1, 341: 1, 540: 1, 406: 1, 509: 1, 111: 1, 377: 1, 484: 1, 269: 1, 437: 1, 176: 1, 303: 1, 356: 1, 408: 1, 325: 1, 638: 1, 224: 1, 495: 1, 178: 1, 503: 1, 551: 1, 546: 1, 493: 1, 366: 1, 244: 1, 339: 1, 404: 1, 240: 1, 628: 1, 172: 1, 368: 1, 308: 1, 631: 1, 216: 1, 441: 1, 596: 1, 632: 1, 267: 1, 557: 1, 205: 1, 305: 1, 373: 1, 200: 1, 536: 1, 249: 1, 342: 1, 570: 1, 641: 1, 186: 1, 572: 1, 614: 1, 198: 1, 109: 1, 140: 1, 127: 1, 527: 1, 388: 1, 473: 1, 395: 1, 316: 1, 112: 1, 627: 1, 566: 1, 102: 1, 387: 1, 534: 1, 477: 1, 287: 1, 475: 1, 153: 1, 427: 1, 261: 1, 567: 1, 175: 1, 615: 1, 644: 1, 472: 1, 541: 1, 345: 1, 515: 1, 211: 1, 580: 1, 460: 1, 390: 1, 279: 1, 125: 1, 351: 1, 160: 1, 286: 1, 474: 1, 243: 1, 263: 1, 135: 1, 478: 1, 518: 1, 392: 1, 352: 1, 288: 1, 459: 1, 413: 1, 479: 1, 409: 1, 544: 1, 436: 1, 514: 1, 310: 1, 538: 1, 488: 1, 467: 1, 346: 1, 629: 1, 593: 1, 206: 1, 372: 1, 496: 1, 179: 1, 285: 1, 485: 1, 520: 1, 307: 1, 480: 1, 363: 1, 476: 1, 234: 1, 218: 1, 456: 1, 309: 1, 630: 1, 334: 1, 311: 1, 229: 1, 380: 1, 225: 1, 588: 1, 598: 1, 376: 1, 543: 1, 139: 1, 259: 1, 196: 1, 419: 1, 432: 1, 497: 1, 522: 1, 355: 1, 124: 1, 306: 1, 625: 1, 528: 1, 283: 1, 195: 1, 420: 1, 414: 1, 161: 1, 375: 1, 611: 1, 350: 1, 508: 1, 439: 1, 266: 1, 587: 1, 144: 1, 556: 1, 232: 1, 401: 1, 433: 1, 145: 1, 620: 1, 203: 1, 506: 1, 166: 1, 453: 1, 561: 1, 250: 1, 282: 1, 465: 1, 189: 1, 633: 1, 487: 1, 442: 1, 405: 1, 122: 1, 471: 1, 312: 1, 142: 1, 537: 1, 213: 1, 121: 1, 164: 1, 313: 1, 481: 1, 407: 1, 430: 1, 463: 1, 589: 1, 618: 1, 239: 1, 170: 1, 126: 1, 646: 1, 228: 1, 393: 1, 604: 1, 210: 1, 129: 1, 256: 1, 275: 1, 411: 1, 324: 1, 168: 1, 365: 1, 268: 1, 280: 1, 136: 1, 154: 1, 498: 1, 165: 1, 565: 1, 238: 1, 370: 1, 297: 1, 501: 1, 597: 1, 149: 1, 645: 1, 159: 1, 217: 1, 458: 1, 294: 1, 533: 1, 248: 1, 526: 1, 504: 1, 120: 1, 163: 1, 381: 1, 568: 1, 344: 1, 602: 1, 415: 1, 582: 1, 265: 1, 223: 1, 511: 1, 590: 1, 489: 1, 264: 1, 304: 1, 247: 1, 650: 1, 624: 1, 394: 1, 421: 1, 547: 1, 151: 1, 573: 1, 622: 1, 340: 1, 502: 1, 188: 1, 555: 1, 271: 1, 530: 1, 167: 1, 230: 1, 592: 1, 318: 1, 382: 1, 254: 1, 402: 1, 454: 1}), *** len(Counter(labels_)): 651
sigma: 368.6397460634423
random_state: 42
Finished getting the projection matrix
Projected data
kjl on train set took 0.027896 seconds
Projecting test data
kjl on test set took 0.002825 seconds
self.sigma: 368.6397460634423, q=0.3
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 34, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.584301 seconds
Total train time: 25.240620999999997 <= std_train_time: 0, seek_train_time: 24.628424, proj_train_time: 0.027896, model_train_time: 0.584301
'decision_function()' starts at 2020-12-31 19:31:03
'decision_function()' ends at 2020-12-31 19:31:03. It takes 0.0 mins
Test model takes 0.00136 seconds
APC: 0.8260006526171104
AUC: 0.8108111111111111
Total test time: 0.0041849999999999995 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.002825, model_test_time: 0.00136
'get_best_results()' ends at 2020-12-31 19:31:03. It takes 0.8746 mins


===3/5(n_repeats): {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': True, 'is_nystrom': False, 'is_quickshift': False, 'is_meanshift': True, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [], 'kjl_qs': [0.3], 'kjl_ns': [100], 'kjl_ds': [5], 'meanshift_qs': []}===
train: Counter({0: 5000}), val: Counter({0: 75, 1: 75})
'get_best_results()' starts at 2020-12-31 19:31:03
--is_gs: False, X_val == X_test
X_train.shape: (5000, 49), y_train: Counter({0: 5000})
X_val.shape: (600, 49), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 49), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:   26.3s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:   26.3s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
meanshift_training, it took 17.960061 seconds
--all clusters (642) when (bandwidth:409.72671843870285, 409.72671843870285). However, only 30 clusters have at least 10 datapoints. Counter(labels_): Counter({0: 2896, 180: 235, 86: 153, 7: 106, 1: 89, 2: 87, 12: 82, 3: 58, 527: 39, 13: 35, 5: 33, 617: 31, 337: 29, 79: 28, 4: 27, 312: 26, 6: 21, 14: 20, 10: 19, 8: 19, 20: 15, 9: 14, 66: 14, 17: 13, 54: 12, 32: 12, 15: 12, 502: 11, 11: 11, 16: 10, 19: 9, 21: 9, 18: 8, 39: 8, 22: 7, 25: 7, 46: 7, 38: 6, 24: 6, 567: 6, 40: 6, 83: 6, 490: 6, 65: 5, 31: 5, 276: 5, 26: 5, 28: 5, 50: 5, 23: 5, 33: 5, 30: 5, 34: 5, 27: 5, 29: 5, 367: 4, 37: 4, 36: 4, 48: 4, 35: 4, 64: 4, 246: 3, 45: 3, 248: 3, 52: 3, 170: 3, 53: 3, 44: 3, 114: 3, 78: 3, 49: 3, 56: 3, 339: 3, 43: 3, 42: 3, 55: 3, 80: 3, 51: 3, 257: 3, 47: 3, 376: 3, 41: 3, 622: 3, 625: 3, 85: 2, 89: 2, 90: 2, 84: 2, 61: 2, 81: 2, 476: 2, 60: 2, 135: 2, 292: 2, 291: 2, 418: 2, 73: 2, 67: 2, 58: 2, 72: 2, 63: 2, 269: 2, 196: 2, 71: 2, 87: 2, 59: 2, 88: 2, 74: 2, 460: 2, 233: 2, 68: 2, 449: 2, 75: 2, 77: 2, 76: 2, 452: 2, 62: 2, 305: 2, 384: 2, 187: 2, 57: 2, 69: 2, 406: 2, 82: 2, 70: 2, 122: 1, 407: 1, 597: 1, 447: 1, 119: 1, 130: 1, 444: 1, 484: 1, 287: 1, 364: 1, 446: 1, 561: 1, 492: 1, 116: 1, 203: 1, 580: 1, 307: 1, 279: 1, 174: 1, 139: 1, 207: 1, 606: 1, 273: 1, 453: 1, 129: 1, 232: 1, 431: 1, 395: 1, 354: 1, 192: 1, 225: 1, 532: 1, 141: 1, 258: 1, 189: 1, 271: 1, 556: 1, 140: 1, 472: 1, 167: 1, 136: 1, 169: 1, 319: 1, 632: 1, 517: 1, 442: 1, 554: 1, 274: 1, 282: 1, 410: 1, 509: 1, 128: 1, 217: 1, 143: 1, 357: 1, 133: 1, 218: 1, 202: 1, 336: 1, 641: 1, 200: 1, 547: 1, 574: 1, 181: 1, 500: 1, 636: 1, 340: 1, 550: 1, 318: 1, 551: 1, 113: 1, 417: 1, 616: 1, 256: 1, 144: 1, 626: 1, 465: 1, 508: 1, 596: 1, 160: 1, 593: 1, 115: 1, 434: 1, 177: 1, 193: 1, 414: 1, 155: 1, 443: 1, 478: 1, 615: 1, 335: 1, 125: 1, 599: 1, 238: 1, 127: 1, 275: 1, 572: 1, 333: 1, 603: 1, 253: 1, 528: 1, 161: 1, 505: 1, 153: 1, 422: 1, 403: 1, 106: 1, 463: 1, 541: 1, 151: 1, 627: 1, 534: 1, 215: 1, 493: 1, 100: 1, 518: 1, 268: 1, 194: 1, 397: 1, 419: 1, 149: 1, 427: 1, 468: 1, 595: 1, 294: 1, 154: 1, 327: 1, 400: 1, 479: 1, 450: 1, 370: 1, 521: 1, 582: 1, 511: 1, 535: 1, 111: 1, 568: 1, 118: 1, 466: 1, 249: 1, 198: 1, 513: 1, 299: 1, 459: 1, 175: 1, 172: 1, 281: 1, 408: 1, 529: 1, 374: 1, 321: 1, 562: 1, 618: 1, 206: 1, 105: 1, 398: 1, 578: 1, 251: 1, 473: 1, 349: 1, 388: 1, 176: 1, 390: 1, 523: 1, 314: 1, 575: 1, 223: 1, 241: 1, 588: 1, 489: 1, 260: 1, 264: 1, 361: 1, 380: 1, 456: 1, 486: 1, 300: 1, 351: 1, 563: 1, 277: 1, 581: 1, 97: 1, 320: 1, 548: 1, 137: 1, 501: 1, 101: 1, 109: 1, 621: 1, 399: 1, 355: 1, 242: 1, 461: 1, 477: 1, 306: 1, 108: 1, 184: 1, 445: 1, 317: 1, 519: 1, 346: 1, 522: 1, 571: 1, 134: 1, 289: 1, 211: 1, 610: 1, 546: 1, 259: 1, 94: 1, 270: 1, 284: 1, 365: 1, 126: 1, 592: 1, 104: 1, 585: 1, 162: 1, 222: 1, 179: 1, 436: 1, 607: 1, 131: 1, 608: 1, 266: 1, 95: 1, 549: 1, 123: 1, 494: 1, 272: 1, 469: 1, 383: 1, 512: 1, 482: 1, 601: 1, 620: 1, 378: 1, 345: 1, 441: 1, 250: 1, 147: 1, 267: 1, 377: 1, 302: 1, 331: 1, 372: 1, 152: 1, 240: 1, 539: 1, 640: 1, 533: 1, 416: 1, 255: 1, 323: 1, 98: 1, 510: 1, 301: 1, 401: 1, 353: 1, 231: 1, 623: 1, 210: 1, 239: 1, 516: 1, 326: 1, 214: 1, 586: 1, 503: 1, 591: 1, 213: 1, 404: 1, 409: 1, 448: 1, 613: 1, 531: 1, 426: 1, 435: 1, 221: 1, 630: 1, 205: 1, 439: 1, 283: 1, 423: 1, 594: 1, 633: 1, 347: 1, 199: 1, 93: 1, 245: 1, 226: 1, 352: 1, 396: 1, 605: 1, 577: 1, 159: 1, 243: 1, 570: 1, 391: 1, 297: 1, 188: 1, 369: 1, 451: 1, 295: 1, 440: 1, 499: 1, 566: 1, 412: 1, 216: 1, 555: 1, 564: 1, 536: 1, 628: 1, 293: 1, 624: 1, 288: 1, 173: 1, 507: 1, 475: 1, 262: 1, 590: 1, 208: 1, 428: 1, 583: 1, 164: 1, 158: 1, 373: 1, 524: 1, 629: 1, 263: 1, 236: 1, 359: 1, 609: 1, 228: 1, 402: 1, 506: 1, 150: 1, 145: 1, 186: 1, 430: 1, 612: 1, 565: 1, 362: 1, 285: 1, 520: 1, 227: 1, 415: 1, 230: 1, 504: 1, 334: 1, 316: 1, 325: 1, 614: 1, 311: 1, 619: 1, 487: 1, 538: 1, 329: 1, 156: 1, 393: 1, 392: 1, 310: 1, 103: 1, 637: 1, 425: 1, 142: 1, 191: 1, 584: 1, 330: 1, 234: 1, 474: 1, 379: 1, 338: 1, 429: 1, 138: 1, 405: 1, 290: 1, 464: 1, 315: 1, 481: 1, 308: 1, 343: 1, 471: 1, 515: 1, 634: 1, 462: 1, 286: 1, 313: 1, 146: 1, 366: 1, 91: 1, 229: 1, 553: 1, 309: 1, 157: 1, 576: 1, 421: 1, 488: 1, 526: 1, 638: 1, 600: 1, 411: 1, 375: 1, 132: 1, 341: 1, 182: 1, 544: 1, 495: 1, 165: 1, 559: 1, 148: 1, 611: 1, 261: 1, 413: 1, 344: 1, 204: 1, 112: 1, 185: 1, 569: 1, 356: 1, 635: 1, 543: 1, 394: 1, 382: 1, 420: 1, 560: 1, 350: 1, 631: 1, 296: 1, 237: 1, 303: 1, 573: 1, 438: 1, 201: 1, 171: 1, 298: 1, 265: 1, 195: 1, 552: 1, 470: 1, 454: 1, 433: 1, 117: 1, 92: 1, 178: 1, 457: 1, 124: 1, 235: 1, 363: 1, 348: 1, 183: 1, 483: 1, 540: 1, 168: 1, 120: 1, 386: 1, 387: 1, 224: 1, 322: 1, 360: 1, 485: 1, 220: 1, 324: 1, 557: 1, 278: 1, 602: 1, 530: 1, 254: 1, 107: 1, 247: 1, 190: 1, 328: 1, 639: 1, 121: 1, 252: 1, 589: 1, 579: 1, 496: 1, 381: 1, 587: 1, 458: 1, 212: 1, 280: 1, 558: 1, 304: 1, 197: 1, 542: 1, 371: 1, 491: 1, 437: 1, 455: 1, 498: 1, 332: 1, 96: 1, 342: 1, 424: 1, 537: 1, 497: 1, 604: 1, 244: 1, 467: 1, 110: 1, 525: 1, 480: 1, 99: 1, 432: 1, 389: 1, 368: 1, 219: 1, 598: 1, 166: 1, 209: 1, 102: 1, 358: 1, 514: 1, 545: 1, 385: 1, 163: 1}), *** len(Counter(labels_)): 642
sigma: 409.72671843870285
random_state: 42
Finished getting the projection matrix
Projected data
kjl on train set took 0.023865 seconds
Projecting test data
kjl on test set took 0.002585 seconds
self.sigma: 409.72671843870285, q=0.3
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 30, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.534604 seconds
Total train time: 18.518530000000002 <= std_train_time: 0, seek_train_time: 17.960061, proj_train_time: 0.023865, model_train_time: 0.534604
'decision_function()' starts at 2020-12-31 19:31:23
'decision_function()' ends at 2020-12-31 19:31:23. It takes 0.0 mins
Test model takes 0.000739 seconds
APC: 0.8612447596949885
AUC: 0.8940111111111111
Total test time: 0.003324 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.002585, model_test_time: 0.000739
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
meanshift_training, it took 18.43635 seconds
--all clusters (642) when (bandwidth:409.72671843870285, 409.72671843870285). However, only 30 clusters have at least 10 datapoints. Counter(labels_): Counter({0: 2896, 180: 235, 86: 153, 7: 106, 1: 89, 2: 87, 12: 82, 3: 58, 527: 39, 13: 35, 5: 33, 617: 31, 337: 29, 79: 28, 4: 27, 312: 26, 6: 21, 14: 20, 10: 19, 8: 19, 20: 15, 9: 14, 66: 14, 17: 13, 54: 12, 32: 12, 15: 12, 502: 11, 11: 11, 16: 10, 19: 9, 21: 9, 18: 8, 39: 8, 22: 7, 25: 7, 46: 7, 38: 6, 24: 6, 567: 6, 40: 6, 83: 6, 490: 6, 65: 5, 31: 5, 276: 5, 26: 5, 28: 5, 50: 5, 23: 5, 33: 5, 30: 5, 34: 5, 27: 5, 29: 5, 367: 4, 37: 4, 36: 4, 48: 4, 35: 4, 64: 4, 246: 3, 45: 3, 248: 3, 52: 3, 170: 3, 53: 3, 44: 3, 114: 3, 78: 3, 49: 3, 56: 3, 339: 3, 43: 3, 42: 3, 55: 3, 80: 3, 51: 3, 257: 3, 47: 3, 376: 3, 41: 3, 622: 3, 625: 3, 85: 2, 89: 2, 90: 2, 84: 2, 61: 2, 81: 2, 476: 2, 60: 2, 135: 2, 292: 2, 291: 2, 418: 2, 73: 2, 67: 2, 58: 2, 72: 2, 63: 2, 269: 2, 196: 2, 71: 2, 87: 2, 59: 2, 88: 2, 74: 2, 460: 2, 233: 2, 68: 2, 449: 2, 75: 2, 77: 2, 76: 2, 452: 2, 62: 2, 305: 2, 384: 2, 187: 2, 57: 2, 69: 2, 406: 2, 82: 2, 70: 2, 122: 1, 407: 1, 597: 1, 447: 1, 119: 1, 130: 1, 444: 1, 484: 1, 287: 1, 364: 1, 446: 1, 561: 1, 492: 1, 116: 1, 203: 1, 580: 1, 307: 1, 279: 1, 174: 1, 139: 1, 207: 1, 606: 1, 273: 1, 453: 1, 129: 1, 232: 1, 431: 1, 395: 1, 354: 1, 192: 1, 225: 1, 532: 1, 141: 1, 258: 1, 189: 1, 271: 1, 556: 1, 140: 1, 472: 1, 167: 1, 136: 1, 169: 1, 319: 1, 632: 1, 517: 1, 442: 1, 554: 1, 274: 1, 282: 1, 410: 1, 509: 1, 128: 1, 217: 1, 143: 1, 357: 1, 133: 1, 218: 1, 202: 1, 336: 1, 641: 1, 200: 1, 547: 1, 574: 1, 181: 1, 500: 1, 636: 1, 340: 1, 550: 1, 318: 1, 551: 1, 113: 1, 417: 1, 616: 1, 256: 1, 144: 1, 626: 1, 465: 1, 508: 1, 596: 1, 160: 1, 593: 1, 115: 1, 434: 1, 177: 1, 193: 1, 414: 1, 155: 1, 443: 1, 478: 1, 615: 1, 335: 1, 125: 1, 599: 1, 238: 1, 127: 1, 275: 1, 572: 1, 333: 1, 603: 1, 253: 1, 528: 1, 161: 1, 505: 1, 153: 1, 422: 1, 403: 1, 106: 1, 463: 1, 541: 1, 151: 1, 627: 1, 534: 1, 215: 1, 493: 1, 100: 1, 518: 1, 268: 1, 194: 1, 397: 1, 419: 1, 149: 1, 427: 1, 468: 1, 595: 1, 294: 1, 154: 1, 327: 1, 400: 1, 479: 1, 450: 1, 370: 1, 521: 1, 582: 1, 511: 1, 535: 1, 111: 1, 568: 1, 118: 1, 466: 1, 249: 1, 198: 1, 513: 1, 299: 1, 459: 1, 175: 1, 172: 1, 281: 1, 408: 1, 529: 1, 374: 1, 321: 1, 562: 1, 618: 1, 206: 1, 105: 1, 398: 1, 578: 1, 251: 1, 473: 1, 349: 1, 388: 1, 176: 1, 390: 1, 523: 1, 314: 1, 575: 1, 223: 1, 241: 1, 588: 1, 489: 1, 260: 1, 264: 1, 361: 1, 380: 1, 456: 1, 486: 1, 300: 1, 351: 1, 563: 1, 277: 1, 581: 1, 97: 1, 320: 1, 548: 1, 137: 1, 501: 1, 101: 1, 109: 1, 621: 1, 399: 1, 355: 1, 242: 1, 461: 1, 477: 1, 306: 1, 108: 1, 184: 1, 445: 1, 317: 1, 519: 1, 346: 1, 522: 1, 571: 1, 134: 1, 289: 1, 211: 1, 610: 1, 546: 1, 259: 1, 94: 1, 270: 1, 284: 1, 365: 1, 126: 1, 592: 1, 104: 1, 585: 1, 162: 1, 222: 1, 179: 1, 436: 1, 607: 1, 131: 1, 608: 1, 266: 1, 95: 1, 549: 1, 123: 1, 494: 1, 272: 1, 469: 1, 383: 1, 512: 1, 482: 1, 601: 1, 620: 1, 378: 1, 345: 1, 441: 1, 250: 1, 147: 1, 267: 1, 377: 1, 302: 1, 331: 1, 372: 1, 152: 1, 240: 1, 539: 1, 640: 1, 533: 1, 416: 1, 255: 1, 323: 1, 98: 1, 510: 1, 301: 1, 401: 1, 353: 1, 231: 1, 623: 1, 210: 1, 239: 1, 516: 1, 326: 1, 214: 1, 586: 1, 503: 1, 591: 1, 213: 1, 404: 1, 409: 1, 448: 1, 613: 1, 531: 1, 426: 1, 435: 1, 221: 1, 630: 1, 205: 1, 439: 1, 283: 1, 423: 1, 594: 1, 633: 1, 347: 1, 199: 1, 93: 1, 245: 1, 226: 1, 352: 1, 396: 1, 605: 1, 577: 1, 159: 1, 243: 1, 570: 1, 391: 1, 297: 1, 188: 1, 369: 1, 451: 1, 295: 1, 440: 1, 499: 1, 566: 1, 412: 1, 216: 1, 555: 1, 564: 1, 536: 1, 628: 1, 293: 1, 624: 1, 288: 1, 173: 1, 507: 1, 475: 1, 262: 1, 590: 1, 208: 1, 428: 1, 583: 1, 164: 1, 158: 1, 373: 1, 524: 1, 629: 1, 263: 1, 236: 1, 359: 1, 609: 1, 228: 1, 402: 1, 506: 1, 150: 1, 145: 1, 186: 1, 430: 1, 612: 1, 565: 1, 362: 1, 285: 1, 520: 1, 227: 1, 415: 1, 230: 1, 504: 1, 334: 1, 316: 1, 325: 1, 614: 1, 311: 1, 619: 1, 487: 1, 538: 1, 329: 1, 156: 1, 393: 1, 392: 1, 310: 1, 103: 1, 637: 1, 425: 1, 142: 1, 191: 1, 584: 1, 330: 1, 234: 1, 474: 1, 379: 1, 338: 1, 429: 1, 138: 1, 405: 1, 290: 1, 464: 1, 315: 1, 481: 1, 308: 1, 343: 1, 471: 1, 515: 1, 634: 1, 462: 1, 286: 1, 313: 1, 146: 1, 366: 1, 91: 1, 229: 1, 553: 1, 309: 1, 157: 1, 576: 1, 421: 1, 488: 1, 526: 1, 638: 1, 600: 1, 411: 1, 375: 1, 132: 1, 341: 1, 182: 1, 544: 1, 495: 1, 165: 1, 559: 1, 148: 1, 611: 1, 261: 1, 413: 1, 344: 1, 204: 1, 112: 1, 185: 1, 569: 1, 356: 1, 635: 1, 543: 1, 394: 1, 382: 1, 420: 1, 560: 1, 350: 1, 631: 1, 296: 1, 237: 1, 303: 1, 573: 1, 438: 1, 201: 1, 171: 1, 298: 1, 265: 1, 195: 1, 552: 1, 470: 1, 454: 1, 433: 1, 117: 1, 92: 1, 178: 1, 457: 1, 124: 1, 235: 1, 363: 1, 348: 1, 183: 1, 483: 1, 540: 1, 168: 1, 120: 1, 386: 1, 387: 1, 224: 1, 322: 1, 360: 1, 485: 1, 220: 1, 324: 1, 557: 1, 278: 1, 602: 1, 530: 1, 254: 1, 107: 1, 247: 1, 190: 1, 328: 1, 639: 1, 121: 1, 252: 1, 589: 1, 579: 1, 496: 1, 381: 1, 587: 1, 458: 1, 212: 1, 280: 1, 558: 1, 304: 1, 197: 1, 542: 1, 371: 1, 491: 1, 437: 1, 455: 1, 498: 1, 332: 1, 96: 1, 342: 1, 424: 1, 537: 1, 497: 1, 604: 1, 244: 1, 467: 1, 110: 1, 525: 1, 480: 1, 99: 1, 432: 1, 389: 1, 368: 1, 219: 1, 598: 1, 166: 1, 209: 1, 102: 1, 358: 1, 514: 1, 545: 1, 385: 1, 163: 1}), *** len(Counter(labels_)): 642
sigma: 409.72671843870285
random_state: 42
Finished getting the projection matrix
Projected data
kjl on train set took 0.032095 seconds
Projecting test data
kjl on test set took 0.00288 seconds
self.sigma: 409.72671843870285, q=0.3
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 30, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.776208 seconds
Total train time: 19.244653000000003 <= std_train_time: 0, seek_train_time: 18.43635, proj_train_time: 0.032095, model_train_time: 0.776208
'decision_function()' starts at 2020-12-31 19:31:43
'decision_function()' ends at 2020-12-31 19:31:43. It takes 0.0 mins
Test model takes 0.001251 seconds
APC: 0.8612447596949885
AUC: 0.8940111111111111
Total test time: 0.004131 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.00288, model_test_time: 0.001251
'get_best_results()' ends at 2020-12-31 19:31:43. It takes 0.6766 mins


===4/5(n_repeats): {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': True, 'is_nystrom': False, 'is_quickshift': False, 'is_meanshift': True, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [], 'kjl_qs': [0.3], 'kjl_ns': [100], 'kjl_ds': [5], 'meanshift_qs': []}===
train: Counter({0: 5000}), val: Counter({0: 75, 1: 75})
'get_best_results()' starts at 2020-12-31 19:31:43
--is_gs: False, X_val == X_test
X_train.shape: (5000, 49), y_train: Counter({0: 5000})
X_val.shape: (600, 49), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 49), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:   20.4s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:   20.4s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
meanshift_training, it took 18.661867 seconds
--all clusters (675) when (bandwidth:382.2356612039605, 382.2356612039605). However, only 39 clusters have at least 10 datapoints. Counter(labels_): Counter({0: 3053, 424: 106, 1: 84, 74: 81, 40: 70, 36: 66, 3: 61, 9: 57, 4: 55, 2: 48, 91: 37, 32: 36, 7: 29, 333: 28, 5: 19, 6: 19, 214: 19, 663: 18, 22: 17, 10: 17, 19: 14, 11: 14, 12: 13, 14: 13, 67: 13, 8: 13, 24: 12, 27: 12, 187: 12, 13: 12, 415: 11, 45: 11, 539: 11, 115: 11, 232: 11, 20: 10, 17: 10, 123: 10, 412: 10, 15: 9, 16: 8, 35: 8, 49: 7, 116: 7, 18: 7, 21: 7, 449: 7, 602: 7, 463: 7, 356: 6, 25: 6, 28: 6, 31: 6, 23: 6, 206: 6, 30: 5, 628: 5, 665: 5, 33: 4, 26: 4, 42: 4, 39: 4, 34: 4, 41: 4, 47: 3, 441: 3, 29: 3, 85: 3, 58: 3, 59: 3, 128: 3, 53: 3, 56: 3, 52: 3, 54: 3, 44: 3, 61: 3, 50: 3, 62: 3, 55: 3, 57: 3, 263: 3, 632: 3, 48: 3, 37: 3, 38: 3, 46: 3, 198: 3, 60: 3, 43: 3, 51: 3, 76: 2, 265: 2, 89: 2, 73: 2, 71: 2, 64: 2, 79: 2, 425: 2, 68: 2, 78: 2, 93: 2, 83: 2, 613: 2, 653: 2, 322: 2, 419: 2, 81: 2, 553: 2, 80: 2, 75: 2, 77: 2, 240: 2, 63: 2, 72: 2, 88: 2, 666: 2, 94: 2, 66: 2, 82: 2, 92: 2, 497: 2, 250: 2, 86: 2, 512: 2, 627: 2, 65: 2, 90: 2, 69: 2, 84: 2, 383: 2, 70: 2, 600: 2, 87: 2, 186: 1, 279: 1, 310: 1, 564: 1, 475: 1, 533: 1, 633: 1, 457: 1, 484: 1, 478: 1, 307: 1, 275: 1, 588: 1, 170: 1, 237: 1, 651: 1, 217: 1, 300: 1, 247: 1, 161: 1, 220: 1, 204: 1, 470: 1, 261: 1, 154: 1, 393: 1, 650: 1, 584: 1, 439: 1, 575: 1, 547: 1, 195: 1, 346: 1, 172: 1, 669: 1, 259: 1, 482: 1, 159: 1, 664: 1, 160: 1, 239: 1, 431: 1, 221: 1, 152: 1, 436: 1, 380: 1, 465: 1, 118: 1, 587: 1, 276: 1, 565: 1, 270: 1, 158: 1, 320: 1, 643: 1, 623: 1, 592: 1, 499: 1, 609: 1, 480: 1, 455: 1, 581: 1, 608: 1, 368: 1, 140: 1, 231: 1, 617: 1, 489: 1, 257: 1, 121: 1, 282: 1, 390: 1, 518: 1, 129: 1, 248: 1, 673: 1, 376: 1, 344: 1, 179: 1, 389: 1, 384: 1, 606: 1, 119: 1, 590: 1, 292: 1, 469: 1, 105: 1, 452: 1, 660: 1, 289: 1, 178: 1, 256: 1, 405: 1, 537: 1, 315: 1, 395: 1, 213: 1, 127: 1, 173: 1, 504: 1, 596: 1, 185: 1, 432: 1, 136: 1, 325: 1, 566: 1, 559: 1, 599: 1, 138: 1, 209: 1, 211: 1, 406: 1, 326: 1, 594: 1, 334: 1, 169: 1, 182: 1, 535: 1, 563: 1, 496: 1, 640: 1, 392: 1, 126: 1, 611: 1, 330: 1, 521: 1, 194: 1, 238: 1, 483: 1, 506: 1, 422: 1, 180: 1, 500: 1, 196: 1, 286: 1, 208: 1, 456: 1, 316: 1, 630: 1, 388: 1, 634: 1, 139: 1, 134: 1, 560: 1, 582: 1, 551: 1, 548: 1, 574: 1, 274: 1, 318: 1, 181: 1, 438: 1, 377: 1, 193: 1, 229: 1, 362: 1, 641: 1, 542: 1, 207: 1, 490: 1, 215: 1, 277: 1, 321: 1, 358: 1, 519: 1, 197: 1, 241: 1, 313: 1, 416: 1, 546: 1, 201: 1, 125: 1, 234: 1, 586: 1, 589: 1, 543: 1, 644: 1, 662: 1, 448: 1, 124: 1, 513: 1, 327: 1, 545: 1, 576: 1, 131: 1, 110: 1, 657: 1, 246: 1, 649: 1, 135: 1, 157: 1, 502: 1, 260: 1, 532: 1, 166: 1, 145: 1, 302: 1, 189: 1, 227: 1, 572: 1, 520: 1, 486: 1, 466: 1, 96: 1, 343: 1, 485: 1, 353: 1, 296: 1, 525: 1, 410: 1, 352: 1, 411: 1, 363: 1, 674: 1, 655: 1, 294: 1, 200: 1, 536: 1, 359: 1, 472: 1, 516: 1, 142: 1, 177: 1, 568: 1, 648: 1, 538: 1, 249: 1, 164: 1, 191: 1, 595: 1, 351: 1, 458: 1, 642: 1, 102: 1, 464: 1, 108: 1, 459: 1, 647: 1, 571: 1, 656: 1, 577: 1, 558: 1, 501: 1, 203: 1, 615: 1, 188: 1, 303: 1, 293: 1, 598: 1, 230: 1, 461: 1, 604: 1, 365: 1, 635: 1, 454: 1, 531: 1, 252: 1, 421: 1, 288: 1, 375: 1, 460: 1, 367: 1, 379: 1, 403: 1, 396: 1, 476: 1, 631: 1, 266: 1, 245: 1, 672: 1, 385: 1, 350: 1, 309: 1, 141: 1, 223: 1, 658: 1, 408: 1, 335: 1, 530: 1, 443: 1, 667: 1, 171: 1, 404: 1, 349: 1, 190: 1, 654: 1, 585: 1, 168: 1, 258: 1, 290: 1, 103: 1, 523: 1, 144: 1, 498: 1, 442: 1, 562: 1, 426: 1, 509: 1, 109: 1, 413: 1, 391: 1, 210: 1, 317: 1, 329: 1, 511: 1, 205: 1, 671: 1, 304: 1, 106: 1, 527: 1, 639: 1, 272: 1, 360: 1, 661: 1, 156: 1, 267: 1, 652: 1, 254: 1, 474: 1, 400: 1, 348: 1, 534: 1, 338: 1, 541: 1, 218: 1, 268: 1, 619: 1, 556: 1, 150: 1, 251: 1, 423: 1, 612: 1, 146: 1, 418: 1, 481: 1, 554: 1, 445: 1, 381: 1, 462: 1, 323: 1, 621: 1, 312: 1, 345: 1, 280: 1, 557: 1, 550: 1, 601: 1, 255: 1, 361: 1, 283: 1, 529: 1, 192: 1, 401: 1, 579: 1, 477: 1, 447: 1, 555: 1, 112: 1, 342: 1, 225: 1, 386: 1, 526: 1, 610: 1, 163: 1, 394: 1, 101: 1, 491: 1, 573: 1, 374: 1, 580: 1, 236: 1, 668: 1, 435: 1, 624: 1, 147: 1, 514: 1, 99: 1, 202: 1, 397: 1, 331: 1, 340: 1, 429: 1, 117: 1, 336: 1, 298: 1, 242: 1, 626: 1, 544: 1, 324: 1, 468: 1, 262: 1, 219: 1, 636: 1, 645: 1, 271: 1, 444: 1, 494: 1, 364: 1, 285: 1, 659: 1, 341: 1, 524: 1, 175: 1, 373: 1, 305: 1, 451: 1, 638: 1, 603: 1, 273: 1, 467: 1, 407: 1, 222: 1, 569: 1, 561: 1, 618: 1, 446: 1, 492: 1, 593: 1, 354: 1, 471: 1, 216: 1, 382: 1, 522: 1, 450: 1, 625: 1, 114: 1, 104: 1, 369: 1, 540: 1, 414: 1, 107: 1, 614: 1, 433: 1, 148: 1, 308: 1, 199: 1, 130: 1, 387: 1, 434: 1, 137: 1, 132: 1, 295: 1, 337: 1, 297: 1, 402: 1, 224: 1, 420: 1, 591: 1, 398: 1, 570: 1, 409: 1, 430: 1, 505: 1, 167: 1, 153: 1, 515: 1, 284: 1, 244: 1, 299: 1, 620: 1, 111: 1, 378: 1, 235: 1, 120: 1, 372: 1, 162: 1, 149: 1, 184: 1, 332: 1, 97: 1, 314: 1, 508: 1, 437: 1, 583: 1, 552: 1, 357: 1, 366: 1, 371: 1, 549: 1, 113: 1, 165: 1, 487: 1, 183: 1, 143: 1, 100: 1, 427: 1, 155: 1, 311: 1, 428: 1, 301: 1, 637: 1, 212: 1, 174: 1, 319: 1, 355: 1, 122: 1, 269: 1, 243: 1, 479: 1, 176: 1, 629: 1, 510: 1, 253: 1, 473: 1, 399: 1, 440: 1, 493: 1, 233: 1, 98: 1, 597: 1, 453: 1, 616: 1, 287: 1, 306: 1, 417: 1, 607: 1, 528: 1, 95: 1, 567: 1, 578: 1, 278: 1, 646: 1, 605: 1, 347: 1, 517: 1, 339: 1, 226: 1, 281: 1, 264: 1, 291: 1, 328: 1, 228: 1, 670: 1, 370: 1, 503: 1, 622: 1, 495: 1, 507: 1, 488: 1, 151: 1, 133: 1}), *** len(Counter(labels_)): 675
sigma: 382.2356612039605
random_state: 42
Finished getting the projection matrix
Projected data
kjl on train set took 0.024496 seconds
Projecting test data
kjl on test set took 0.002518 seconds
self.sigma: 382.2356612039605, q=0.3
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 39, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.39407 seconds
Total train time: 19.080433 <= std_train_time: 0, seek_train_time: 18.661867, proj_train_time: 0.024496, model_train_time: 0.39407
'decision_function()' starts at 2020-12-31 19:32:05
'decision_function()' ends at 2020-12-31 19:32:05. It takes 0.0 mins
Test model takes 0.000885 seconds
APC: 0.8872650762165042
AUC: 0.8518333333333334
Total test time: 0.0034029999999999998 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.002518, model_test_time: 0.000885
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
meanshift_training, it took 18.87671 seconds
--all clusters (675) when (bandwidth:382.2356612039605, 382.2356612039605). However, only 39 clusters have at least 10 datapoints. Counter(labels_): Counter({0: 3053, 424: 106, 1: 84, 74: 81, 40: 70, 36: 66, 3: 61, 9: 57, 4: 55, 2: 48, 91: 37, 32: 36, 7: 29, 333: 28, 5: 19, 6: 19, 214: 19, 663: 18, 22: 17, 10: 17, 19: 14, 11: 14, 12: 13, 14: 13, 67: 13, 8: 13, 24: 12, 27: 12, 187: 12, 13: 12, 415: 11, 45: 11, 539: 11, 115: 11, 232: 11, 20: 10, 17: 10, 123: 10, 412: 10, 15: 9, 16: 8, 35: 8, 49: 7, 116: 7, 18: 7, 21: 7, 449: 7, 602: 7, 463: 7, 356: 6, 25: 6, 28: 6, 31: 6, 23: 6, 206: 6, 30: 5, 628: 5, 665: 5, 33: 4, 26: 4, 42: 4, 39: 4, 34: 4, 41: 4, 47: 3, 441: 3, 29: 3, 85: 3, 58: 3, 59: 3, 128: 3, 53: 3, 56: 3, 52: 3, 54: 3, 44: 3, 61: 3, 50: 3, 62: 3, 55: 3, 57: 3, 263: 3, 632: 3, 48: 3, 37: 3, 38: 3, 46: 3, 198: 3, 60: 3, 43: 3, 51: 3, 76: 2, 265: 2, 89: 2, 73: 2, 71: 2, 64: 2, 79: 2, 425: 2, 68: 2, 78: 2, 93: 2, 83: 2, 613: 2, 653: 2, 322: 2, 419: 2, 81: 2, 553: 2, 80: 2, 75: 2, 77: 2, 240: 2, 63: 2, 72: 2, 88: 2, 666: 2, 94: 2, 66: 2, 82: 2, 92: 2, 497: 2, 250: 2, 86: 2, 512: 2, 627: 2, 65: 2, 90: 2, 69: 2, 84: 2, 383: 2, 70: 2, 600: 2, 87: 2, 186: 1, 279: 1, 310: 1, 564: 1, 475: 1, 533: 1, 633: 1, 457: 1, 484: 1, 478: 1, 307: 1, 275: 1, 588: 1, 170: 1, 237: 1, 651: 1, 217: 1, 300: 1, 247: 1, 161: 1, 220: 1, 204: 1, 470: 1, 261: 1, 154: 1, 393: 1, 650: 1, 584: 1, 439: 1, 575: 1, 547: 1, 195: 1, 346: 1, 172: 1, 669: 1, 259: 1, 482: 1, 159: 1, 664: 1, 160: 1, 239: 1, 431: 1, 221: 1, 152: 1, 436: 1, 380: 1, 465: 1, 118: 1, 587: 1, 276: 1, 565: 1, 270: 1, 158: 1, 320: 1, 643: 1, 623: 1, 592: 1, 499: 1, 609: 1, 480: 1, 455: 1, 581: 1, 608: 1, 368: 1, 140: 1, 231: 1, 617: 1, 489: 1, 257: 1, 121: 1, 282: 1, 390: 1, 518: 1, 129: 1, 248: 1, 673: 1, 376: 1, 344: 1, 179: 1, 389: 1, 384: 1, 606: 1, 119: 1, 590: 1, 292: 1, 469: 1, 105: 1, 452: 1, 660: 1, 289: 1, 178: 1, 256: 1, 405: 1, 537: 1, 315: 1, 395: 1, 213: 1, 127: 1, 173: 1, 504: 1, 596: 1, 185: 1, 432: 1, 136: 1, 325: 1, 566: 1, 559: 1, 599: 1, 138: 1, 209: 1, 211: 1, 406: 1, 326: 1, 594: 1, 334: 1, 169: 1, 182: 1, 535: 1, 563: 1, 496: 1, 640: 1, 392: 1, 126: 1, 611: 1, 330: 1, 521: 1, 194: 1, 238: 1, 483: 1, 506: 1, 422: 1, 180: 1, 500: 1, 196: 1, 286: 1, 208: 1, 456: 1, 316: 1, 630: 1, 388: 1, 634: 1, 139: 1, 134: 1, 560: 1, 582: 1, 551: 1, 548: 1, 574: 1, 274: 1, 318: 1, 181: 1, 438: 1, 377: 1, 193: 1, 229: 1, 362: 1, 641: 1, 542: 1, 207: 1, 490: 1, 215: 1, 277: 1, 321: 1, 358: 1, 519: 1, 197: 1, 241: 1, 313: 1, 416: 1, 546: 1, 201: 1, 125: 1, 234: 1, 586: 1, 589: 1, 543: 1, 644: 1, 662: 1, 448: 1, 124: 1, 513: 1, 327: 1, 545: 1, 576: 1, 131: 1, 110: 1, 657: 1, 246: 1, 649: 1, 135: 1, 157: 1, 502: 1, 260: 1, 532: 1, 166: 1, 145: 1, 302: 1, 189: 1, 227: 1, 572: 1, 520: 1, 486: 1, 466: 1, 96: 1, 343: 1, 485: 1, 353: 1, 296: 1, 525: 1, 410: 1, 352: 1, 411: 1, 363: 1, 674: 1, 655: 1, 294: 1, 200: 1, 536: 1, 359: 1, 472: 1, 516: 1, 142: 1, 177: 1, 568: 1, 648: 1, 538: 1, 249: 1, 164: 1, 191: 1, 595: 1, 351: 1, 458: 1, 642: 1, 102: 1, 464: 1, 108: 1, 459: 1, 647: 1, 571: 1, 656: 1, 577: 1, 558: 1, 501: 1, 203: 1, 615: 1, 188: 1, 303: 1, 293: 1, 598: 1, 230: 1, 461: 1, 604: 1, 365: 1, 635: 1, 454: 1, 531: 1, 252: 1, 421: 1, 288: 1, 375: 1, 460: 1, 367: 1, 379: 1, 403: 1, 396: 1, 476: 1, 631: 1, 266: 1, 245: 1, 672: 1, 385: 1, 350: 1, 309: 1, 141: 1, 223: 1, 658: 1, 408: 1, 335: 1, 530: 1, 443: 1, 667: 1, 171: 1, 404: 1, 349: 1, 190: 1, 654: 1, 585: 1, 168: 1, 258: 1, 290: 1, 103: 1, 523: 1, 144: 1, 498: 1, 442: 1, 562: 1, 426: 1, 509: 1, 109: 1, 413: 1, 391: 1, 210: 1, 317: 1, 329: 1, 511: 1, 205: 1, 671: 1, 304: 1, 106: 1, 527: 1, 639: 1, 272: 1, 360: 1, 661: 1, 156: 1, 267: 1, 652: 1, 254: 1, 474: 1, 400: 1, 348: 1, 534: 1, 338: 1, 541: 1, 218: 1, 268: 1, 619: 1, 556: 1, 150: 1, 251: 1, 423: 1, 612: 1, 146: 1, 418: 1, 481: 1, 554: 1, 445: 1, 381: 1, 462: 1, 323: 1, 621: 1, 312: 1, 345: 1, 280: 1, 557: 1, 550: 1, 601: 1, 255: 1, 361: 1, 283: 1, 529: 1, 192: 1, 401: 1, 579: 1, 477: 1, 447: 1, 555: 1, 112: 1, 342: 1, 225: 1, 386: 1, 526: 1, 610: 1, 163: 1, 394: 1, 101: 1, 491: 1, 573: 1, 374: 1, 580: 1, 236: 1, 668: 1, 435: 1, 624: 1, 147: 1, 514: 1, 99: 1, 202: 1, 397: 1, 331: 1, 340: 1, 429: 1, 117: 1, 336: 1, 298: 1, 242: 1, 626: 1, 544: 1, 324: 1, 468: 1, 262: 1, 219: 1, 636: 1, 645: 1, 271: 1, 444: 1, 494: 1, 364: 1, 285: 1, 659: 1, 341: 1, 524: 1, 175: 1, 373: 1, 305: 1, 451: 1, 638: 1, 603: 1, 273: 1, 467: 1, 407: 1, 222: 1, 569: 1, 561: 1, 618: 1, 446: 1, 492: 1, 593: 1, 354: 1, 471: 1, 216: 1, 382: 1, 522: 1, 450: 1, 625: 1, 114: 1, 104: 1, 369: 1, 540: 1, 414: 1, 107: 1, 614: 1, 433: 1, 148: 1, 308: 1, 199: 1, 130: 1, 387: 1, 434: 1, 137: 1, 132: 1, 295: 1, 337: 1, 297: 1, 402: 1, 224: 1, 420: 1, 591: 1, 398: 1, 570: 1, 409: 1, 430: 1, 505: 1, 167: 1, 153: 1, 515: 1, 284: 1, 244: 1, 299: 1, 620: 1, 111: 1, 378: 1, 235: 1, 120: 1, 372: 1, 162: 1, 149: 1, 184: 1, 332: 1, 97: 1, 314: 1, 508: 1, 437: 1, 583: 1, 552: 1, 357: 1, 366: 1, 371: 1, 549: 1, 113: 1, 165: 1, 487: 1, 183: 1, 143: 1, 100: 1, 427: 1, 155: 1, 311: 1, 428: 1, 301: 1, 637: 1, 212: 1, 174: 1, 319: 1, 355: 1, 122: 1, 269: 1, 243: 1, 479: 1, 176: 1, 629: 1, 510: 1, 253: 1, 473: 1, 399: 1, 440: 1, 493: 1, 233: 1, 98: 1, 597: 1, 453: 1, 616: 1, 287: 1, 306: 1, 417: 1, 607: 1, 528: 1, 95: 1, 567: 1, 578: 1, 278: 1, 646: 1, 605: 1, 347: 1, 517: 1, 339: 1, 226: 1, 281: 1, 264: 1, 291: 1, 328: 1, 228: 1, 670: 1, 370: 1, 503: 1, 622: 1, 495: 1, 507: 1, 488: 1, 151: 1, 133: 1}), *** len(Counter(labels_)): 675
sigma: 382.2356612039605
random_state: 42
Finished getting the projection matrix
Projected data
kjl on train set took 0.080723 seconds
Projecting test data
kjl on test set took 0.005759 seconds
self.sigma: 382.2356612039605, q=0.3
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 39, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.583587 seconds
Total train time: 19.54102 <= std_train_time: 0, seek_train_time: 18.87671, proj_train_time: 0.080723, model_train_time: 0.583587
'decision_function()' starts at 2020-12-31 19:32:25
'decision_function()' ends at 2020-12-31 19:32:25. It takes 0.0 mins
Test model takes 0.001425 seconds
APC: 0.8872650762165042
AUC: 0.8518333333333334
Total test time: 0.007184 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.005759, model_test_time: 0.001425
'get_best_results()' ends at 2020-12-31 19:32:25. It takes 0.6947 mins


===5/5(n_repeats): {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': True, 'is_nystrom': False, 'is_quickshift': False, 'is_meanshift': True, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [], 'kjl_qs': [0.3], 'kjl_ns': [100], 'kjl_ds': [5], 'meanshift_qs': []}===
train: Counter({0: 5000}), val: Counter({0: 75, 1: 75})
'get_best_results()' starts at 2020-12-31 19:32:25
--is_gs: False, X_val == X_test
X_train.shape: (5000, 49), y_train: Counter({0: 5000})
X_val.shape: (600, 49), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 49), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:   21.1s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:   21.1s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
---get accurate time of training and testing with the best params---
meanshift_training, it took 19.375567 seconds
--all clusters (630) when (bandwidth:387.9412582427242, 387.9412582427242). However, only 34 clusters have at least 10 datapoints. Counter(labels_): Counter({0: 3101, 14: 125, 1: 93, 2: 79, 557: 64, 548: 57, 6: 45, 33: 43, 58: 42, 21: 39, 290: 36, 11: 35, 536: 34, 3: 30, 50: 29, 53: 27, 386: 25, 8: 24, 5: 24, 10: 22, 569: 21, 4: 18, 437: 17, 18: 16, 380: 16, 9: 15, 13: 14, 7: 14, 12: 12, 17: 12, 34: 12, 23: 11, 39: 11, 15: 11, 96: 9, 20: 9, 19: 9, 16: 9, 539: 9, 400: 8, 134: 7, 32: 7, 25: 7, 88: 7, 31: 7, 29: 6, 30: 6, 27: 6, 28: 6, 41: 5, 22: 5, 26: 5, 36: 5, 35: 5, 51: 5, 57: 5, 44: 4, 24: 4, 42: 4, 40: 4, 91: 4, 43: 4, 38: 4, 426: 4, 209: 4, 37: 4, 54: 3, 59: 3, 582: 3, 56: 3, 49: 3, 46: 3, 66: 3, 95: 3, 47: 3, 67: 3, 48: 3, 52: 3, 55: 3, 79: 3, 87: 3, 493: 3, 45: 3, 74: 3, 65: 2, 337: 2, 60: 2, 119: 2, 70: 2, 73: 2, 84: 2, 63: 2, 128: 2, 94: 2, 90: 2, 89: 2, 78: 2, 77: 2, 61: 2, 69: 2, 83: 2, 64: 2, 86: 2, 472: 2, 199: 2, 312: 2, 72: 2, 81: 2, 152: 2, 92: 2, 93: 2, 80: 2, 85: 2, 76: 2, 82: 2, 68: 2, 71: 2, 171: 2, 62: 2, 248: 2, 125: 2, 146: 2, 75: 2, 195: 1, 496: 1, 169: 1, 257: 1, 587: 1, 301: 1, 431: 1, 270: 1, 114: 1, 105: 1, 601: 1, 318: 1, 550: 1, 322: 1, 180: 1, 218: 1, 208: 1, 367: 1, 619: 1, 315: 1, 233: 1, 350: 1, 189: 1, 238: 1, 412: 1, 429: 1, 413: 1, 118: 1, 351: 1, 331: 1, 514: 1, 275: 1, 407: 1, 491: 1, 563: 1, 492: 1, 615: 1, 547: 1, 528: 1, 549: 1, 137: 1, 345: 1, 520: 1, 220: 1, 304: 1, 454: 1, 594: 1, 232: 1, 278: 1, 100: 1, 470: 1, 306: 1, 269: 1, 484: 1, 506: 1, 97: 1, 263: 1, 458: 1, 300: 1, 309: 1, 580: 1, 579: 1, 143: 1, 389: 1, 246: 1, 156: 1, 588: 1, 408: 1, 573: 1, 391: 1, 262: 1, 316: 1, 193: 1, 207: 1, 432: 1, 420: 1, 503: 1, 139: 1, 394: 1, 344: 1, 456: 1, 532: 1, 175: 1, 181: 1, 204: 1, 206: 1, 415: 1, 284: 1, 184: 1, 553: 1, 596: 1, 609: 1, 605: 1, 276: 1, 475: 1, 560: 1, 177: 1, 559: 1, 187: 1, 213: 1, 599: 1, 417: 1, 317: 1, 251: 1, 585: 1, 369: 1, 483: 1, 151: 1, 133: 1, 428: 1, 578: 1, 136: 1, 533: 1, 279: 1, 183: 1, 237: 1, 583: 1, 430: 1, 222: 1, 385: 1, 562: 1, 147: 1, 545: 1, 435: 1, 434: 1, 347: 1, 516: 1, 617: 1, 455: 1, 543: 1, 281: 1, 106: 1, 618: 1, 382: 1, 478: 1, 565: 1, 298: 1, 321: 1, 464: 1, 240: 1, 376: 1, 449: 1, 424: 1, 404: 1, 123: 1, 291: 1, 425: 1, 387: 1, 99: 1, 576: 1, 310: 1, 247: 1, 482: 1, 293: 1, 121: 1, 265: 1, 416: 1, 530: 1, 271: 1, 447: 1, 252: 1, 338: 1, 541: 1, 624: 1, 592: 1, 194: 1, 525: 1, 365: 1, 359: 1, 221: 1, 302: 1, 168: 1, 258: 1, 129: 1, 242: 1, 572: 1, 203: 1, 272: 1, 607: 1, 481: 1, 264: 1, 606: 1, 356: 1, 285: 1, 173: 1, 445: 1, 597: 1, 504: 1, 441: 1, 229: 1, 115: 1, 167: 1, 256: 1, 214: 1, 558: 1, 182: 1, 570: 1, 327: 1, 436: 1, 494: 1, 274: 1, 226: 1, 518: 1, 383: 1, 245: 1, 111: 1, 219: 1, 627: 1, 311: 1, 584: 1, 508: 1, 544: 1, 216: 1, 223: 1, 320: 1, 626: 1, 297: 1, 295: 1, 575: 1, 371: 1, 116: 1, 104: 1, 612: 1, 277: 1, 554: 1, 422: 1, 450: 1, 107: 1, 179: 1, 149: 1, 360: 1, 433: 1, 595: 1, 561: 1, 581: 1, 188: 1, 215: 1, 174: 1, 590: 1, 250: 1, 368: 1, 392: 1, 120: 1, 166: 1, 568: 1, 546: 1, 332: 1, 319: 1, 144: 1, 366: 1, 235: 1, 354: 1, 564: 1, 489: 1, 527: 1, 361: 1, 603: 1, 294: 1, 393: 1, 334: 1, 243: 1, 103: 1, 623: 1, 608: 1, 267: 1, 148: 1, 463: 1, 486: 1, 289: 1, 325: 1, 451: 1, 534: 1, 556: 1, 526: 1, 529: 1, 540: 1, 154: 1, 328: 1, 190: 1, 163: 1, 628: 1, 127: 1, 164: 1, 519: 1, 440: 1, 138: 1, 196: 1, 511: 1, 172: 1, 401: 1, 535: 1, 198: 1, 411: 1, 523: 1, 286: 1, 551: 1, 335: 1, 225: 1, 485: 1, 305: 1, 192: 1, 130: 1, 398: 1, 230: 1, 538: 1, 477: 1, 418: 1, 280: 1, 153: 1, 101: 1, 571: 1, 498: 1, 363: 1, 231: 1, 589: 1, 410: 1, 109: 1, 513: 1, 448: 1, 339: 1, 488: 1, 629: 1, 598: 1, 346: 1, 140: 1, 282: 1, 507: 1, 442: 1, 421: 1, 602: 1, 537: 1, 159: 1, 126: 1, 268: 1, 342: 1, 98: 1, 620: 1, 303: 1, 141: 1, 249: 1, 555: 1, 522: 1, 552: 1, 352: 1, 490: 1, 201: 1, 469: 1, 509: 1, 102: 1, 616: 1, 372: 1, 108: 1, 468: 1, 296: 1, 403: 1, 162: 1, 292: 1, 574: 1, 395: 1, 228: 1, 502: 1, 348: 1, 457: 1, 510: 1, 362: 1, 613: 1, 273: 1, 438: 1, 122: 1, 132: 1, 500: 1, 155: 1, 614: 1, 474: 1, 419: 1, 462: 1, 586: 1, 260: 1, 227: 1, 397: 1, 611: 1, 600: 1, 142: 1, 427: 1, 381: 1, 323: 1, 353: 1, 314: 1, 593: 1, 405: 1, 333: 1, 211: 1, 390: 1, 135: 1, 497: 1, 452: 1, 212: 1, 313: 1, 355: 1, 604: 1, 358: 1, 124: 1, 288: 1, 423: 1, 524: 1, 517: 1, 329: 1, 495: 1, 113: 1, 521: 1, 200: 1, 610: 1, 150: 1, 224: 1, 591: 1, 241: 1, 191: 1, 117: 1, 254: 1, 439: 1, 210: 1, 336: 1, 542: 1, 110: 1, 465: 1, 471: 1, 402: 1, 378: 1, 236: 1, 165: 1, 379: 1, 157: 1, 476: 1, 531: 1, 261: 1, 406: 1, 444: 1, 460: 1, 577: 1, 566: 1, 349: 1, 131: 1, 499: 1, 512: 1, 621: 1, 467: 1, 479: 1, 461: 1, 505: 1, 205: 1, 158: 1, 373: 1, 217: 1, 160: 1, 622: 1, 480: 1, 266: 1, 185: 1, 341: 1, 178: 1, 466: 1, 459: 1, 255: 1, 283: 1, 414: 1, 370: 1, 446: 1, 239: 1, 259: 1, 515: 1, 388: 1, 299: 1, 186: 1, 487: 1, 197: 1, 384: 1, 364: 1, 409: 1, 176: 1, 396: 1, 453: 1, 202: 1, 145: 1, 375: 1, 112: 1, 326: 1, 473: 1, 161: 1, 343: 1, 377: 1, 567: 1, 287: 1, 170: 1, 374: 1, 330: 1, 244: 1, 340: 1, 501: 1, 308: 1, 234: 1, 324: 1, 357: 1, 443: 1, 625: 1, 399: 1, 253: 1, 307: 1}), *** len(Counter(labels_)): 630
sigma: 387.9412582427242
random_state: 42
Finished getting the projection matrix
Projected data
kjl on train set took 0.027946 seconds
Projecting test data
kjl on test set took 0.002838 seconds
self.sigma: 387.9412582427242, q=0.3
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 34, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.612531 seconds
Total train time: 20.016044 <= std_train_time: 0, seek_train_time: 19.375567, proj_train_time: 0.027946, model_train_time: 0.612531
'decision_function()' starts at 2020-12-31 19:33:08
'decision_function()' ends at 2020-12-31 19:33:08. It takes 0.0 mins
Test model takes 0.001294 seconds
APC: 0.8823095357480527
AUC: 0.8582000000000001
Total test time: 0.004132 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.002838, model_test_time: 0.001294
'get_best_results()' ends at 2020-12-31 19:33:08. It takes 0.7071 mins
speedup/data/src_dst/iat_size/UNB5/gs_False-diag/case6.dat
single_main.kwargs: dict_items([('data', (('UNB12', 'speedup/data/src_dst/iat_size/UNB12/Xy-normal-abnormal.dat'), (array([[4.91142273e-05, 7.00000000e+01, 9.53674316e-07, ...,
        1.19209290e-06, 7.00000000e+01, 9.53674316e-07],
       [4.05311584e-06, 1.10000000e+02, 1.90734863e-06, ...,
        9.53674316e-07, 1.10000000e+02, 9.53674316e-07],
       [6.91413879e-06, 9.20000000e+01, 9.53674316e-07, ...,
        2.14576721e-06, 9.20000000e+01, 9.53674316e-07],
       ...,
       [3.81469727e-06, 2.07000000e+02, 2.07000000e+02, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
       [2.86102295e-06, 2.07000000e+02, 2.07000000e+02, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
       [4.79221344e-05, 6.60000000e+01, 5.41210175e-05, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]]), array(['normal_0', 'normal_0', 'normal_0', ..., 'abnormal_0',
       'abnormal_0', 'abnormal_0'], dtype='<U10')))), ('params', ('case1', {'detector_name': 'OCSVM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': False, 'is_nystrom': False, 'is_quickshift': False, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'OCSVM_qs': [0.3], 'OCSVM_nus': [0.5]}))])
X.shape: (52696, 45), y: Counter({0: 30169, 1: 22527})
left: Counter({0: 29869, 1: 22227}), test: Counter({0: 300, 1: 300})


===1/5(n_repeats): {'detector_name': 'OCSVM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': False, 'is_nystrom': False, 'is_quickshift': False, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'OCSVM_qs': [0.3], 'OCSVM_nus': [0.5]}===
train: Counter({0: 5000}), val: Counter({0: 75, 1: 75})
'get_best_results()' starts at 2020-12-31 19:33:08meanshift_training, it took 19.167701 seconds
--all clusters (630) when (bandwidth:387.9412582427242, 387.9412582427242). However, only 34 clusters have at least 10 datapoints. Counter(labels_): Counter({0: 3101, 14: 125, 1: 93, 2: 79, 557: 64, 548: 57, 6: 45, 33: 43, 58: 42, 21: 39, 290: 36, 11: 35, 536: 34, 3: 30, 50: 29, 53: 27, 386: 25, 8: 24, 5: 24, 10: 22, 569: 21, 4: 18, 437: 17, 18: 16, 380: 16, 9: 15, 13: 14, 7: 14, 12: 12, 17: 12, 34: 12, 23: 11, 39: 11, 15: 11, 96: 9, 20: 9, 19: 9, 16: 9, 539: 9, 400: 8, 134: 7, 32: 7, 25: 7, 88: 7, 31: 7, 29: 6, 30: 6, 27: 6, 28: 6, 41: 5, 22: 5, 26: 5, 36: 5, 35: 5, 51: 5, 57: 5, 44: 4, 24: 4, 42: 4, 40: 4, 91: 4, 43: 4, 38: 4, 426: 4, 209: 4, 37: 4, 54: 3, 59: 3, 582: 3, 56: 3, 49: 3, 46: 3, 66: 3, 95: 3, 47: 3, 67: 3, 48: 3, 52: 3, 55: 3, 79: 3, 87: 3, 493: 3, 45: 3, 74: 3, 65: 2, 337: 2, 60: 2, 119: 2, 70: 2, 73: 2, 84: 2, 63: 2, 128: 2, 94: 2, 90: 2, 89: 2, 78: 2, 77: 2, 61: 2, 69: 2, 83: 2, 64: 2, 86: 2, 472: 2, 199: 2, 312: 2, 72: 2, 81: 2, 152: 2, 92: 2, 93: 2, 80: 2, 85: 2, 76: 2, 82: 2, 68: 2, 71: 2, 171: 2, 62: 2, 248: 2, 125: 2, 146: 2, 75: 2, 195: 1, 496: 1, 169: 1, 257: 1, 587: 1, 301: 1, 431: 1, 270: 1, 114: 1, 105: 1, 601: 1, 318: 1, 550: 1, 322: 1, 180: 1, 218: 1, 208: 1, 367: 1, 619: 1, 315: 1, 233: 1, 350: 1, 189: 1, 238: 1, 412: 1, 429: 1, 413: 1, 118: 1, 351: 1, 331: 1, 514: 1, 275: 1, 407: 1, 491: 1, 563: 1, 492: 1, 615: 1, 547: 1, 528: 1, 549: 1, 137: 1, 345: 1, 520: 1, 220: 1, 304: 1, 454: 1, 594: 1, 232: 1, 278: 1, 100: 1, 470: 1, 306: 1, 269: 1, 484: 1, 506: 1, 97: 1, 263: 1, 458: 1, 300: 1, 309: 1, 580: 1, 579: 1, 143: 1, 389: 1, 246: 1, 156: 1, 588: 1, 408: 1, 573: 1, 391: 1, 262: 1, 316: 1, 193: 1, 207: 1, 432: 1, 420: 1, 503: 1, 139: 1, 394: 1, 344: 1, 456: 1, 532: 1, 175: 1, 181: 1, 204: 1, 206: 1, 415: 1, 284: 1, 184: 1, 553: 1, 596: 1, 609: 1, 605: 1, 276: 1, 475: 1, 560: 1, 177: 1, 559: 1, 187: 1, 213: 1, 599: 1, 417: 1, 317: 1, 251: 1, 585: 1, 369: 1, 483: 1, 151: 1, 133: 1, 428: 1, 578: 1, 136: 1, 533: 1, 279: 1, 183: 1, 237: 1, 583: 1, 430: 1, 222: 1, 385: 1, 562: 1, 147: 1, 545: 1, 435: 1, 434: 1, 347: 1, 516: 1, 617: 1, 455: 1, 543: 1, 281: 1, 106: 1, 618: 1, 382: 1, 478: 1, 565: 1, 298: 1, 321: 1, 464: 1, 240: 1, 376: 1, 449: 1, 424: 1, 404: 1, 123: 1, 291: 1, 425: 1, 387: 1, 99: 1, 576: 1, 310: 1, 247: 1, 482: 1, 293: 1, 121: 1, 265: 1, 416: 1, 530: 1, 271: 1, 447: 1, 252: 1, 338: 1, 541: 1, 624: 1, 592: 1, 194: 1, 525: 1, 365: 1, 359: 1, 221: 1, 302: 1, 168: 1, 258: 1, 129: 1, 242: 1, 572: 1, 203: 1, 272: 1, 607: 1, 481: 1, 264: 1, 606: 1, 356: 1, 285: 1, 173: 1, 445: 1, 597: 1, 504: 1, 441: 1, 229: 1, 115: 1, 167: 1, 256: 1, 214: 1, 558: 1, 182: 1, 570: 1, 327: 1, 436: 1, 494: 1, 274: 1, 226: 1, 518: 1, 383: 1, 245: 1, 111: 1, 219: 1, 627: 1, 311: 1, 584: 1, 508: 1, 544: 1, 216: 1, 223: 1, 320: 1, 626: 1, 297: 1, 295: 1, 575: 1, 371: 1, 116: 1, 104: 1, 612: 1, 277: 1, 554: 1, 422: 1, 450: 1, 107: 1, 179: 1, 149: 1, 360: 1, 433: 1, 595: 1, 561: 1, 581: 1, 188: 1, 215: 1, 174: 1, 590: 1, 250: 1, 368: 1, 392: 1, 120: 1, 166: 1, 568: 1, 546: 1, 332: 1, 319: 1, 144: 1, 366: 1, 235: 1, 354: 1, 564: 1, 489: 1, 527: 1, 361: 1, 603: 1, 294: 1, 393: 1, 334: 1, 243: 1, 103: 1, 623: 1, 608: 1, 267: 1, 148: 1, 463: 1, 486: 1, 289: 1, 325: 1, 451: 1, 534: 1, 556: 1, 526: 1, 529: 1, 540: 1, 154: 1, 328: 1, 190: 1, 163: 1, 628: 1, 127: 1, 164: 1, 519: 1, 440: 1, 138: 1, 196: 1, 511: 1, 172: 1, 401: 1, 535: 1, 198: 1, 411: 1, 523: 1, 286: 1, 551: 1, 335: 1, 225: 1, 485: 1, 305: 1, 192: 1, 130: 1, 398: 1, 230: 1, 538: 1, 477: 1, 418: 1, 280: 1, 153: 1, 101: 1, 571: 1, 498: 1, 363: 1, 231: 1, 589: 1, 410: 1, 109: 1, 513: 1, 448: 1, 339: 1, 488: 1, 629: 1, 598: 1, 346: 1, 140: 1, 282: 1, 507: 1, 442: 1, 421: 1, 602: 1, 537: 1, 159: 1, 126: 1, 268: 1, 342: 1, 98: 1, 620: 1, 303: 1, 141: 1, 249: 1, 555: 1, 522: 1, 552: 1, 352: 1, 490: 1, 201: 1, 469: 1, 509: 1, 102: 1, 616: 1, 372: 1, 108: 1, 468: 1, 296: 1, 403: 1, 162: 1, 292: 1, 574: 1, 395: 1, 228: 1, 502: 1, 348: 1, 457: 1, 510: 1, 362: 1, 613: 1, 273: 1, 438: 1, 122: 1, 132: 1, 500: 1, 155: 1, 614: 1, 474: 1, 419: 1, 462: 1, 586: 1, 260: 1, 227: 1, 397: 1, 611: 1, 600: 1, 142: 1, 427: 1, 381: 1, 323: 1, 353: 1, 314: 1, 593: 1, 405: 1, 333: 1, 211: 1, 390: 1, 135: 1, 497: 1, 452: 1, 212: 1, 313: 1, 355: 1, 604: 1, 358: 1, 124: 1, 288: 1, 423: 1, 524: 1, 517: 1, 329: 1, 495: 1, 113: 1, 521: 1, 200: 1, 610: 1, 150: 1, 224: 1, 591: 1, 241: 1, 191: 1, 117: 1, 254: 1, 439: 1, 210: 1, 336: 1, 542: 1, 110: 1, 465: 1, 471: 1, 402: 1, 378: 1, 236: 1, 165: 1, 379: 1, 157: 1, 476: 1, 531: 1, 261: 1, 406: 1, 444: 1, 460: 1, 577: 1, 566: 1, 349: 1, 131: 1, 499: 1, 512: 1, 621: 1, 467: 1, 479: 1, 461: 1, 505: 1, 205: 1, 158: 1, 373: 1, 217: 1, 160: 1, 622: 1, 480: 1, 266: 1, 185: 1, 341: 1, 178: 1, 466: 1, 459: 1, 255: 1, 283: 1, 414: 1, 370: 1, 446: 1, 239: 1, 259: 1, 515: 1, 388: 1, 299: 1, 186: 1, 487: 1, 197: 1, 384: 1, 364: 1, 409: 1, 176: 1, 396: 1, 453: 1, 202: 1, 145: 1, 375: 1, 112: 1, 326: 1, 473: 1, 161: 1, 343: 1, 377: 1, 567: 1, 287: 1, 170: 1, 374: 1, 330: 1, 244: 1, 340: 1, 501: 1, 308: 1, 234: 1, 324: 1, 357: 1, 443: 1, 625: 1, 399: 1, 253: 1, 307: 1}), *** len(Counter(labels_)): 630
sigma: 387.9412582427242
random_state: 42
Finished getting the projection matrix
Projected data
kjl on train set took 0.023838 seconds
Projecting test data
kjl on test set took 0.002495 seconds
self.sigma: 387.9412582427242, q=0.3
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 34, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.402065 seconds
Total train time: 19.593604000000003 <= std_train_time: 0, seek_train_time: 19.167701, proj_train_time: 0.023838, model_train_time: 0.402065
'decision_function()' starts at 2020-12-31 19:32:47
'decision_function()' ends at 2020-12-31 19:32:47. It takes 0.0 mins
Test model takes 0.000791 seconds
APC: 0.8823095357480527
AUC: 0.8582000000000001
Total test time: 0.003286 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0.002495, model_test_time: 0.000791
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)

--is_gs: False, X_val == X_test
X_train.shape: (5000, 45), y_train: Counter({0: 5000})
X_val.shape: (600, 45), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 45), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:   21.5s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:   21.5s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
model_sigma: 356.5545244569381, model_gamma: 7.865894124973278e-06, q=0.3
model.get_params()L {'cache_size': 200, 'coef0': 0.0, 'degree': 3, 'gamma': 7.865894124973278e-06, 'kernel': 'rbf', 'max_iter': -1, 'nu': 0.5, 'random_state': None, 'shrinking': True, 'tol': 0.001, 'verbose': False}
Fitting model takes 1.504759 seconds
Total train time: 1.504759 <= std_train_time: 0, seek_train_time: 0, kjl_train_time: 0, model_train_time: 1.504759
Test model takes 0.092525 seconds
APC: 0.521320979682115
AUC: 0.5469166666666667
Total test time: 0.092525 <= std_test_time: 0, seek_test_time: 0, kjl_test_time: 0, model_test_time: 0.092525
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
model_sigma: 356.5545244569381, model_gamma: 7.865894124973278e-06, q=0.3
model.get_params()L {'cache_size': 200, 'coef0': 0.0, 'degree': 3, 'gamma': 7.865894124973278e-06, 'kernel': 'rbf', 'max_iter': -1, 'nu': 0.5, 'random_state': None, 'shrinking': True, 'tol': 0.001, 'verbose': False}
Fitting model takes 1.422749 seconds
Total train time: 1.422749 <= std_train_time: 0, seek_train_time: 0, kjl_train_time: 0, model_train_time: 1.422749
Test model takes 0.092944 seconds
APC: 0.521320979682115
AUC: 0.5469166666666667
Total test time: 0.092944 <= std_test_time: 0, seek_test_time: 0, kjl_test_time: 0, model_test_time: 0.092944
'get_best_results()' ends at 2020-12-31 19:33:14. It takes 0.1005 mins


===2/5(n_repeats): {'detector_name': 'OCSVM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': False, 'is_nystrom': False, 'is_quickshift': False, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'OCSVM_qs': [0.3], 'OCSVM_nus': [0.5]}===
train: Counter({0: 5000}), val: Counter({0: 75, 1: 75})
'get_best_results()' starts at 2020-12-31 19:33:14
--is_gs: False, X_val == X_test
X_train.shape: (5000, 45), y_train: Counter({0: 5000})
X_val.shape: (600, 45), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 45), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:    3.5s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:    3.5s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
model_sigma: 363.55874251140386, model_gamma: 7.565729587701954e-06, q=0.3
model.get_params()L {'cache_size': 200, 'coef0': 0.0, 'degree': 3, 'gamma': 7.565729587701954e-06, 'kernel': 'rbf', 'max_iter': -1, 'nu': 0.5, 'random_state': None, 'shrinking': True, 'tol': 0.001, 'verbose': False}
Fitting model takes 1.510099 seconds
Total train time: 1.510099 <= std_train_time: 0, seek_train_time: 0, kjl_train_time: 0, model_train_time: 1.510099
Test model takes 0.092422 seconds
APC: 0.5226656928250883
AUC: 0.54605
Total test time: 0.092422 <= std_test_time: 0, seek_test_time: 0, kjl_test_time: 0, model_test_time: 0.092422
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
model_sigma: 363.55874251140386, model_gamma: 7.565729587701954e-06, q=0.3
model.get_params()L {'cache_size': 200, 'coef0': 0.0, 'degree': 3, 'gamma': 7.565729587701954e-06, 'kernel': 'rbf', 'max_iter': -1, 'nu': 0.5, 'random_state': None, 'shrinking': True, 'tol': 0.001, 'verbose': False}
Fitting model takes 1.462046 seconds
Total train time: 1.462046 <= std_train_time: 0, seek_train_time: 0, kjl_train_time: 0, model_train_time: 1.462046
Test model takes 0.092297 seconds
APC: 0.5226656928250883
AUC: 0.54605
Total test time: 0.092297 <= std_test_time: 0, seek_test_time: 0, kjl_test_time: 0, model_test_time: 0.092297
'get_best_results()' ends at 2020-12-31 19:33:20. It takes 0.1029 mins


===3/5(n_repeats): {'detector_name': 'OCSVM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': False, 'is_nystrom': False, 'is_quickshift': False, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'OCSVM_qs': [0.3], 'OCSVM_nus': [0.5]}===
train: Counter({0: 5000}), val: Counter({0: 75, 1: 75})
'get_best_results()' starts at 2020-12-31 19:33:20
--is_gs: False, X_val == X_test
X_train.shape: (5000, 45), y_train: Counter({0: 5000})
X_val.shape: (600, 45), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 45), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:    3.5s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:    3.5s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
model_sigma: 363.7876111048812, model_gamma: 7.556212973327785e-06, q=0.3
model.get_params()L {'cache_size': 200, 'coef0': 0.0, 'degree': 3, 'gamma': 7.556212973327785e-06, 'kernel': 'rbf', 'max_iter': -1, 'nu': 0.5, 'random_state': None, 'shrinking': True, 'tol': 0.001, 'verbose': False}
Fitting model takes 1.518436 seconds
Total train time: 1.518436 <= std_train_time: 0, seek_train_time: 0, kjl_train_time: 0, model_train_time: 1.518436
Test model takes 0.092316 seconds
APC: 0.5208881393575548
AUC: 0.5503722222222222
Total test time: 0.092316 <= std_test_time: 0, seek_test_time: 0, kjl_test_time: 0, model_test_time: 0.092316
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
model_sigma: 363.7876111048812, model_gamma: 7.556212973327785e-06, q=0.3
model.get_params()L {'cache_size': 200, 'coef0': 0.0, 'degree': 3, 'gamma': 7.556212973327785e-06, 'kernel': 'rbf', 'max_iter': -1, 'nu': 0.5, 'random_state': None, 'shrinking': True, 'tol': 0.001, 'verbose': False}
Fitting model takes 1.428303 seconds
Total train time: 1.428303 <= std_train_time: 0, seek_train_time: 0, kjl_train_time: 0, model_train_time: 1.428303
Test model takes 0.092317 seconds
APC: 0.5208881393575548
AUC: 0.5503722222222222
Total test time: 0.092317 <= std_test_time: 0, seek_test_time: 0, kjl_test_time: 0, model_test_time: 0.092317
'get_best_results()' ends at 2020-12-31 19:33:26. It takes 0.0993 mins


===4/5(n_repeats): {'detector_name': 'OCSVM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': False, 'is_nystrom': False, 'is_quickshift': False, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'OCSVM_qs': [0.3], 'OCSVM_nus': [0.5]}===
train: Counter({0: 5000}), val: Counter({0: 75, 1: 75})
'get_best_results()' starts at 2020-12-31 19:33:26
--is_gs: False, X_val == X_test
X_train.shape: (5000, 45), y_train: Counter({0: 5000})
X_val.shape: (600, 45), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 45), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:    3.5s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:    3.5s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
model_sigma: 372.7186122820276, model_gamma: 7.198430883312377e-06, q=0.3
model.get_params()L {'cache_size': 200, 'coef0': 0.0, 'degree': 3, 'gamma': 7.198430883312377e-06, 'kernel': 'rbf', 'max_iter': -1, 'nu': 0.5, 'random_state': None, 'shrinking': True, 'tol': 0.001, 'verbose': False}
Fitting model takes 1.494037 seconds
Total train time: 1.494037 <= std_train_time: 0, seek_train_time: 0, kjl_train_time: 0, model_train_time: 1.494037
Test model takes 0.092019 seconds
APC: 0.5203504293448448
AUC: 0.5451833333333332
Total test time: 0.092019 <= std_test_time: 0, seek_test_time: 0, kjl_test_time: 0, model_test_time: 0.092019
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
model_sigma: 372.7186122820276, model_gamma: 7.198430883312377e-06, q=0.3
model.get_params()L {'cache_size': 200, 'coef0': 0.0, 'degree': 3, 'gamma': 7.198430883312377e-06, 'kernel': 'rbf', 'max_iter': -1, 'nu': 0.5, 'random_state': None, 'shrinking': True, 'tol': 0.001, 'verbose': False}
Fitting model takes 1.400749 seconds
Total train time: 1.400749 <= std_train_time: 0, seek_train_time: 0, kjl_train_time: 0, model_train_time: 1.400749
Test model takes 0.09224 seconds
APC: 0.5203504293448448
AUC: 0.5451833333333332
Total test time: 0.09224 <= std_test_time: 0, seek_test_time: 0, kjl_test_time: 0, model_test_time: 0.09224
'get_best_results()' ends at 2020-12-31 19:33:32. It takes 0.1007 mins


===5/5(n_repeats): {'detector_name': 'OCSVM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': False, 'is_nystrom': False, 'is_quickshift': False, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'OCSVM_qs': [0.3], 'OCSVM_nus': [0.5]}===
train: Counter({0: 5000}), val: Counter({0: 75, 1: 75})
'get_best_results()' starts at 2020-12-31 19:33:32
--is_gs: False, X_val == X_test
X_train.shape: (5000, 45), y_train: Counter({0: 5000})
X_val.shape: (600, 45), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 45), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:    3.5s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:    3.5s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
model_sigma: 369.2422386723231, model_gamma: 7.334613766112655e-06, q=0.3
model.get_params()L {'cache_size': 200, 'coef0': 0.0, 'degree': 3, 'gamma': 7.334613766112655e-06, 'kernel': 'rbf', 'max_iter': -1, 'nu': 0.5, 'random_state': None, 'shrinking': True, 'tol': 0.001, 'verbose': False}
Fitting model takes 1.498661 seconds
Total train time: 1.498661 <= std_train_time: 0, seek_train_time: 0, kjl_train_time: 0, model_train_time: 1.498661
Test model takes 0.092539 seconds
APC: 0.5238061730768009
AUC: 0.5483611111111112
Total test time: 0.092539 <= std_test_time: 0, seek_test_time: 0, kjl_test_time: 0, model_test_time: 0.092539
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
model_sigma: 369.2422386723231, model_gamma: 7.334613766112655e-06, q=0.3
model.get_params()L {'cache_size': 200, 'coef0': 0.0, 'degree': 3, 'gamma': 7.334613766112655e-06, 'kernel': 'rbf', 'max_iter': -1, 'nu': 0.5, 'random_state': None, 'shrinking': True, 'tol': 0.001, 'verbose': False}
Fitting model takes 1.406281 seconds
Total train time: 1.406281 <= std_train_time: 0, seek_train_time: 0, kjl_train_time: 0, model_train_time: 1.406281
Test model takes 0.092322 seconds
APC: 0.5238061730768009
AUC: 0.5483611111111112
Total test time: 0.092322 <= std_test_time: 0, seek_test_time: 0, kjl_test_time: 0, model_test_time: 0.092322
'get_best_results()' ends at 2020-12-31 19:33:38. It takes 0.1019 mins
single_main.kwargs: dict_items([('data', (('UNB12', 'speedup/data/src_dst/iat_size/UNB12/Xy-normal-abnormal.dat'), (array([[4.91142273e-05, 7.00000000e+01, 9.53674316e-07, ...,
        1.19209290e-06, 7.00000000e+01, 9.53674316e-07],
       [4.05311584e-06, 1.10000000e+02, 1.90734863e-06, ...,
        9.53674316e-07, 1.10000000e+02, 9.53674316e-07],
       [6.91413879e-06, 9.20000000e+01, 9.53674316e-07, ...,
        2.14576721e-06, 9.20000000e+01, 9.53674316e-07],
       ...,
       [3.81469727e-06, 2.07000000e+02, 2.07000000e+02, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
       [2.86102295e-06, 2.07000000e+02, 2.07000000e+02, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
       [4.79221344e-05, 6.60000000e+01, 5.41210175e-05, ...,
        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]]), array(['normal_0', 'normal_0', 'normal_0', ..., 'abnormal_0',
       'abnormal_0', 'abnormal_0'], dtype='<U10')))), ('params', ('case2', {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': False, 'is_nystrom': False, 'is_quickshift': False, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [1]}))])
X.shape: (52696, 45), y: Counter({0: 30169, 1: 22527})
left: Counter({0: 29869, 1: 22227}), test: Counter({0: 300, 1: 300})


===1/5(n_repeats): {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': False, 'is_nystrom': False, 'is_quickshift': False, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [1]}===
train: Counter({0: 5000}), val: Counter({0: 75, 1: 75})
'get_best_results()' starts at 2020-12-31 19:33:38
--is_gs: False, X_val == X_test
X_train.shape: (5000, 45), y_train: Counter({0: 5000})
X_val.shape: (600, 45), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 45), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:    3.5s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:    3.5s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.017238 seconds
Total train time: 0.017238 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0, model_train_time: 0.017238
'decision_function()' starts at 2020-12-31 19:33:40
'decision_function()' ends at 2020-12-31 19:33:40. It takes 0.0 mins
Test model takes 0.000321 seconds
APC: 0.5031543275710666
AUC: 0.48097222222222225
Total test time: 0.000321 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0, model_test_time: 0.000321
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.046567 seconds
Total train time: 0.046567 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0, model_train_time: 0.046567
'decision_function()' starts at 2020-12-31 19:33:40
'decision_function()' ends at 2020-12-31 19:33:40. It takes 0.0 mins
Test model takes 0.001034 seconds
APC: 0.5031543275710666
AUC: 0.48097222222222225
Total test time: 0.001034 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0, model_test_time: 0.001034
'get_best_results()' ends at 2020-12-31 19:33:40. It takes 0.0245 mins


===2/5(n_repeats): {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': False, 'is_nystrom': False, 'is_quickshift': False, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [1]}===
train: Counter({0: 5000}), val: Counter({0: 75, 1: 75})
'get_best_results()' starts at 2020-12-31 19:33:40
--is_gs: False, X_val == X_test
X_train.shape: (5000, 45), y_train: Counter({0: 5000})
X_val.shape: (600, 45), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 45), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:    1.2s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:    1.2s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.017059 seconds
Total train time: 0.017059 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0, model_train_time: 0.017059
'decision_function()' starts at 2020-12-31 19:33:41
'decision_function()' ends at 2020-12-31 19:33:41. It takes 0.0 mins
Test model takes 0.000323 seconds
APC: 0.5020374091747202
AUC: 0.48140555555555553
Total test time: 0.000323 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0, model_test_time: 0.000323
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.044491 seconds
Total train time: 0.044491 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0, model_train_time: 0.044491
'decision_function()' starts at 2020-12-31 19:33:41
'decision_function()' ends at 2020-12-31 19:33:41. It takes 0.0 mins
Test model takes 0.000721 seconds
APC: 0.5020374091747202
AUC: 0.48140555555555553
Total test time: 0.000721 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0, model_test_time: 0.000721
'get_best_results()' ends at 2020-12-31 19:33:41. It takes 0.0238 mins


===3/5(n_repeats): {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': False, 'is_nystrom': False, 'is_quickshift': False, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [1]}===
train: Counter({0: 5000}), val: Counter({0: 75, 1: 75})
'get_best_results()' starts at 2020-12-31 19:33:41
--is_gs: False, X_val == X_test
X_train.shape: (5000, 45), y_train: Counter({0: 5000})
X_val.shape: (600, 45), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 45), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:    1.2s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:    1.2s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.01709 seconds
Total train time: 0.01709 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0, model_train_time: 0.01709
'decision_function()' starts at 2020-12-31 19:33:43
'decision_function()' ends at 2020-12-31 19:33:43. It takes 0.0 mins
Test model takes 0.000324 seconds
APC: 0.4996459604818489
AUC: 0.47733888888888887
Total test time: 0.000324 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0, model_test_time: 0.000324
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.0444 seconds
Total train time: 0.0444 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0, model_train_time: 0.0444
'decision_function()' starts at 2020-12-31 19:33:43
'decision_function()' ends at 2020-12-31 19:33:43. It takes 0.0 mins
Test model takes 0.000692 seconds
APC: 0.4996459604818489
AUC: 0.47733888888888887
Total test time: 0.000692 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0, model_test_time: 0.000692
'get_best_results()' ends at 2020-12-31 19:33:43. It takes 0.0264 mins


===4/5(n_repeats): {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': False, 'is_nystrom': False, 'is_quickshift': False, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [1]}===
train: Counter({0: 5000}), val: Counter({0: 75, 1: 75})
'get_best_results()' starts at 2020-12-31 19:33:43
--is_gs: False, X_val == X_test
X_train.shape: (5000, 45), y_train: Counter({0: 5000})
X_val.shape: (600, 45), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 45), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:    1.3s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:    1.3s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.017112 seconds
Total train time: 0.017112 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0, model_train_time: 0.017112
'decision_function()' starts at 2020-12-31 19:33:44
'decision_function()' ends at 2020-12-31 19:33:44. It takes 0.0 mins
Test model takes 0.000371 seconds
APC: 0.5056071161124995
AUC: 0.4913166666666666
Total test time: 0.000371 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0, model_test_time: 0.000371
/home/ky2440/.local/lib/python3.7/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.kde module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.
  warnings.warn(message, FutureWarning)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/usr/local/lib/python3.7/site-packages/pandas/compat/__init__.py:84: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
---get accurate time of training and testing with the best params---
model.get_params(): {'covariance_type': 'diag', 'init_params': 'kmeans', 'max_iter': 100, 'means_init': None, 'n_components': 1, 'n_init': 1, 'precisions_init': None, 'random_state': 42, 'reg_covar': 1e-06, 'tol': 0.001, 'verbose': 0, 'verbose_interval': 10, 'warm_start': False, 'weights_init': None}
Fitting model takes 0.042004 seconds
Total train time: 0.042004 <= std_train_time: 0, seek_train_time: 0, proj_train_time: 0, model_train_time: 0.042004
'decision_function()' starts at 2020-12-31 19:33:44
'decision_function()' ends at 2020-12-31 19:33:44. It takes 0.0 mins
Test model takes 0.000837 seconds
APC: 0.5056071161124995
AUC: 0.4913166666666666
Total test time: 0.000837 <= std_test_time: 0, seek_test_time: 0, proj_test_time: 0, model_test_time: 0.000837
'get_best_results()' ends at 2020-12-31 19:33:44. It takes 0.026 mins


===5/5(n_repeats): {'detector_name': 'GMM', 'is_gs': False, 'is_std': False, 'is_std_mean': False, 'is_kjl': False, 'is_nystrom': False, 'is_quickshift': False, 'is_meanshift': False, 'random_state': 42, 'n_repeats': 5, 'verbose': 10, 'overwrite': False, 'n_jobs': 16, 'GMM_covariance_type': 'diag', 'GMM_n_components': [1]}===
train: Counter({0: 5000}), val: Counter({0: 75, 1: 75})
'get_best_results()' starts at 2020-12-31 19:33:44
--is_gs: False, X_val == X_test
X_train.shape: (5000, 45), y_train: Counter({0: 5000})
X_val.shape: (600, 45), y_val: Counter({0: 300, 1: 300})
X_test.shape: (600, 45), y_test: Counter({0: 300, 1: 300})
[Parallel(n_jobs=16)]: Done   1 tasks      | elapsed:    1.3s
[Parallel(n_jobs=16)]: Done   1 out of   1 | elapsed:    1.3s finished
[Parallel(n_jobs=16)]: Using backend LokyBackend with 16 concurrent workers.
